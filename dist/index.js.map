{"version":3,"sources":["../src/themes/index.ts","../../../node_modules/source-map-support/node_modules/source-map/lib/base64.js","../../../node_modules/source-map-support/node_modules/source-map/lib/base64-vlq.js","../../../node_modules/source-map-support/node_modules/source-map/lib/util.js","../../../node_modules/source-map-support/node_modules/source-map/lib/array-set.js","../../../node_modules/source-map-support/node_modules/source-map/lib/mapping-list.js","../../../node_modules/source-map-support/node_modules/source-map/lib/source-map-generator.js","../../../node_modules/source-map-support/node_modules/source-map/lib/binary-search.js","../../../node_modules/source-map-support/node_modules/source-map/lib/quick-sort.js","../../../node_modules/source-map-support/node_modules/source-map/lib/source-map-consumer.js","../../../node_modules/source-map-support/node_modules/source-map/lib/source-node.js","../../../node_modules/source-map-support/node_modules/source-map/source-map.js","../../../node_modules/buffer-from/index.js","../../../node_modules/source-map-support/source-map-support.js","../src/index.ts","../src/utils/helpers.ts","../src/utils/logger.ts","../src/config/loggerConfig.ts","../src/utils/logFormatter.ts","../src/utils/logRotationService.ts","../src/utils/errorReporter.ts","../src/utils/cache.ts","../src/config/index.ts","../src/utils/cacheWrapper.ts","../src/utils/commandExecutor.ts","../src/App.tsx","../src/context/AppContext.tsx","../src/context/KeyboardShortcuts.tsx","../src/context/HelpContext.tsx","../src/components/common/Box.tsx","../src/context/NotificationContext.tsx","../src/components/common/TextInput.tsx","../src/components/common/Button.tsx","../src/themes/buttonStyles.ts","../src/components/common/Spinner.tsx","../src/components/common/Tabs.tsx","../src/components/common/Notification.tsx","../src/components/common/ErrorNotification.tsx","../src/components/common/Divider.tsx","../src/components/common/ErrorBoundary.tsx","../src/components/common/ErrorProvider.tsx","../src/components/common/ProgressBar.tsx","../src/components/common/EnhancedProgressBar.tsx","../src/components/common/MultiStageProgress.tsx","../src/components/common/StatusBar.tsx","../package.json","../src/components/common/HelpScreen.tsx","../src/components/common/Modal.tsx","../src/components/common/ConfirmDialog.tsx","../src/components/common/Tooltip.tsx","../src/components/common/Badge.tsx","../src/components/common/Table.tsx","../src/components/common/Card.tsx","../src/components/common/Collapsible.tsx","../src/hooks/useMeasure.ts","../src/components/common/TreeView.tsx","../src/components/common/Transition.tsx","../src/components/tutorial/Tutorial.tsx","../src/components/tutorial/TutorialOverlay.tsx","../src/components/MainMenu.tsx","../src/components/org/OrgManager.tsx","../src/components/project/ProjectGenerator.tsx","../src/components/alias/AliasManager.tsx","../src/components/auth/AuthManager.tsx","../src/components/metadata/MetadataTools.tsx","../src/components/run/RunTools.tsx","../src/components/plugins/PluginsPanel.tsx","../src/components/settings/SettingsMenu.tsx","../src/components/settings/ThemeSwitcher.tsx","../src/components/settings/KeyboardShortcutsEditor.tsx","../src/components/common/Breadcrumb.tsx","../src/components/common/KeyboardShortcuts.tsx","../../../node_modules/source-map-support/register.js"],"sourcesContent":["import * as React from 'react';\nimport { Theme as ThemeType } from '../types/theme';\n\n// Re-export the Theme type\nexport type Theme = ThemeType;\n\n// Base theme with default colors and styles\nexport const baseTheme: Theme = {\n  colors: {\n    primary: '#36A9E1', // Salesforce blue\n    secondary: '#2E844A', // Salesforce green\n    success: '#2E844A', // Green\n    warning: '#FE9339', // Orange\n    error: '#EA001E', // Red\n    info: '#0176D3', // Blue\n    text: '#181818', // Dark gray (almost black)\n    textInverse: '#FFFFFF', // White\n    textMuted: '#706E6B', // Medium gray\n    background: '#FFFFFF', // White\n    backgroundHover: '#F3F3F3', // Light gray\n    border: '#DDDBDA', // Light gray\n    highlight: '#F3F2F2', // Very light gray\n  },\n  spacing: {\n    xs: 1,\n    sm: 2,\n    md: 4,\n    lg: 8,\n    xl: 16,\n  },\n  borderRadius: {\n    sm: 2,\n    md: 4,\n    lg: 8,\n  },\n  box: {\n    borderStyle: 'round',\n    padding: 1,\n    margin: 1,\n  },\n  text: {\n    bold: (isActive = true) => ({\n      bold: isActive,\n    }),\n    italic: (isActive = true) => ({\n      italic: isActive,\n    }),\n    underline: (isActive = true) => ({\n      underline: isActive,\n    }),\n    dim: (isActive = true) => ({\n      dimColor: isActive,\n    }),\n    color: (color: string) => ({\n      color,\n    }),\n    bgColor: (color: string) => ({\n      backgroundColor: color,\n    }),\n  },\n};\n\n// Dark theme\nexport const darkTheme: Theme = {\n  ...baseTheme,\n  colors: {\n    ...baseTheme.colors,\n    text: '#F3F3F3', // Light gray\n    textInverse: '#181818', // Dark gray (almost black)\n    textMuted: '#B0ADAB', // Medium-light gray\n    background: '#1B1B1B', // Dark gray\n    backgroundHover: '#2D2D2D', // Slightly lighter dark gray\n    border: '#444444', // Medium-dark gray\n    highlight: '#333333', // Dark gray highlight\n  },\n};\n\n// High contrast theme for better accessibility\nexport const highContrastTheme: Theme = {\n  ...baseTheme,\n  colors: {\n    primary: '#0067B8', // Darker blue\n    secondary: '#0A7C36', // Darker green\n    success: '#0A7C36', // Darker green\n    warning: '#D83B01', // Darker orange\n    error: '#A91B0A', // Darker red\n    info: '#0050B3', // Darker blue\n    text: '#000000', // Black\n    textInverse: '#FFFFFF', // White\n    textMuted: '#4D4D4D', // Dark gray\n    background: '#FFFFFF', // White\n    backgroundHover: '#E5E5E5', // Light gray\n    border: '#000000', // Black\n    highlight: '#F0F0F0', // Very light gray\n  },\n};\n\n// Salesforce Lightning theme\nexport const salesforceTheme: Theme = {\n  ...baseTheme,\n  colors: {\n    primary: '#0176D3', // Salesforce blue\n    secondary: '#2E844A', // Salesforce green\n    success: '#2E844A', // Green\n    warning: '#FE9339', // Orange\n    error: '#EA001E', // Red\n    info: '#0176D3', // Blue\n    text: '#181818', // Dark gray (almost black)\n    textInverse: '#FFFFFF', // White\n    textMuted: '#706E6B', // Medium gray\n    background: '#F3F3F3', // Light gray\n    backgroundHover: '#E5E5E5', // Slightly darker gray\n    border: '#C9C9C9', // Medium-light gray\n    highlight: '#E5E5E5', // Light gray\n  },\n};\n\n// Get theme by name\nexport const getTheme = (themeName: string = 'base'): Theme => {\n  switch (themeName.toLowerCase()) {\n    case 'dark':\n      return darkTheme;\n    case 'highcontrast':\n    case 'high-contrast':\n    case 'highContrast':\n      return highContrastTheme;\n    case 'salesforce':\n    case 'lightning':\n      return salesforceTheme;\n    case 'base':\n    default:\n      return baseTheme;\n  }\n};\n\n// Theme context for React components\nexport const ThemeContext = React.createContext<Theme>(baseTheme);\n\n// Theme provider component\nexport const ThemeProvider: React.FC<{ theme?: Theme; children: React.ReactNode }> = ({\n  theme = baseTheme,\n  children,\n}) => {\n  return React.createElement(ThemeContext.Provider, { value: theme }, children);\n};\n\n// Hook to use the current theme\nexport const useTheme = (): Theme => {\n  const theme = React.useContext(ThemeContext);\n  return theme || baseTheme;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/* eslint-disable node/no-deprecated-api */\n\nvar toString = Object.prototype.toString\n\nvar isModern = (\n  typeof Buffer !== 'undefined' &&\n  typeof Buffer.alloc === 'function' &&\n  typeof Buffer.allocUnsafe === 'function' &&\n  typeof Buffer.from === 'function'\n)\n\nfunction isArrayBuffer (input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer'\n}\n\nfunction fromArrayBuffer (obj, byteOffset, length) {\n  byteOffset >>>= 0\n\n  var maxLength = obj.byteLength - byteOffset\n\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\")\n  }\n\n  if (length === undefined) {\n    length = maxLength\n  } else {\n    length >>>= 0\n\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\")\n    }\n  }\n\n  return isModern\n    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))\n    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  return isModern\n    ? Buffer.from(string, encoding)\n    : new Buffer(string, encoding)\n}\n\nfunction bufferFrom (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return isModern\n    ? Buffer.from(value)\n    : new Buffer(value)\n}\n\nmodule.exports = bufferFrom\n","var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\n\nvar fs;\ntry {\n  fs = require('fs');\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\nvar bufferFrom = require('buffer-from');\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param {NodeModule} mod\n * @param {string} request\n */\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n}\n\n// Only install once if called multiple times\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Supports {browser, node, auto}\nvar environment = \"auto\";\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\n// Priority list of retrieve handlers\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\n\nfunction isInBrowser() {\n  if (environment === \"browser\")\n    return true;\n  if (environment === \"node\")\n    return false;\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === \"renderer\"));\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));\n}\n\nfunction globalProcessVersion() {\n  if ((typeof process === 'object') && (process !== null)) {\n    return process.version;\n  } else {\n    return '';\n  }\n}\n\nfunction globalProcessStderr() {\n  if ((typeof process === 'object') && (process !== null)) {\n    return process.stderr;\n  }\n}\n\nfunction globalProcessExit(code) {\n  if ((typeof process === 'object') && (process !== null) && (typeof process.exit === 'function')) {\n    return process.exit(code);\n  }\n}\n\nfunction handlerExec(list) {\n  return function(arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(retrieveFileHandlers);\n\nretrieveFileHandlers.push(function(path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(protocol, drive) {\n      return drive ?\n        '' : // file:///C:/dir/file -> C:/dir/file\n        '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, /** async */ false);\n      xhr.send(null);\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n});\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n     try {\n       var xhr = new XMLHttpRequest();\n       xhr.open('GET', source, false);\n       xhr.send(null);\n       fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n       // Support providing a sourceMappingURL via the SourceMap header\n       var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                             xhr.getResponseHeader(\"X-SourceMap\");\n       if (sourceMapHeader) {\n         return sourceMapHeader;\n       }\n     } catch (e) {\n     }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while (match = re.exec(fileData)) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    // Fixes shim to be backward compatable with Node v0 to v4\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame, state) {\n  // provides interface backward compatibility\n  if (state === undefined) {\n    state = { nextPosition: null, curPosition: null }\n  }\n  if(frame.isNative()) {\n    state.curPosition = null;\n    return frame;\n  }\n\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1;\n\n    // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    // Header removed in node at ^10.16 || >=11.11.0\n    // v11 is not an LTS candidate, we can just test the one version with it.\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\n    var headerLength = noHeader.test(globalProcessVersion()) ? 0 : 62;\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    state.curPosition = position;\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n    frame.getFunctionName = function() {\n      if (state.nextPosition == null) {\n        return originalFunctionName();\n      }\n      return state.nextPosition.name || originalFunctionName();\n    };\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n\n  var state = { nextPosition: null, curPosition: null };\n  var processedStack = [];\n  for (var i = stack.length - 1; i >= 0; i--) {\n    processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\n    state.nextPosition = state.curPosition;\n  }\n  state.curPosition = state.nextPosition = null;\n  return errorString + processedStack.reverse().join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\nfunction printErrorAndExit (error) {\n  var source = getErrorSource(error);\n\n  // Ensure error is printed synchronously and not truncated\n  var stderr = globalProcessStderr();\n  if (stderr && stderr._handle && stderr._handle.setBlocking) {\n    stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n\n  console.error(error.stack);\n  globalProcessExit(1);\n}\n\nfunction shimEmitUncaughtException () {\n  var origEmit = process.emit;\n\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = (arguments[1] && arguments[1].stack);\n      var hasListeners = (this.listeners(type).length > 0);\n\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n\n    return origEmit.apply(this, arguments);\n  };\n}\n\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\")\n    }\n  }\n\n  // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  }\n\n  // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  }\n\n  // Support runtime transpilers that include inline source maps\n  if (options.hookRequire && !isInBrowser()) {\n    // Use dynamicRequire to avoid including in browser bundles\n    var Module = dynamicRequire(module, 'module');\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function(content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  }\n\n  // Configure options\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n  }\n\n  // Install the error reformatter\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n\n    // Do not override 'uncaughtException' with our own handler in Node.js\n    // Worker threads. Workers pass the error to the main thread as an event,\n    // rather than printing something to stderr and exiting.\n    try {\n      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.\n      var worker_threads = dynamicRequire(module, 'worker_threads');\n      if (worker_threads.isMainThread === false) {\n        installHandler = false;\n      }\n    } catch(e) {}\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.resetRetrieveHandlers = function() {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n}\n","#!/usr/bin/env node\n\nimport { run } from '@oclif/core';\nimport { logger, setupGlobalErrorHandlers } from './utils';\nimport React from 'react';\nimport { render } from 'ink';\nimport App from './App';\n\n// Enable source map support for better error messages\nimport 'source-map-support/register';\n\n// Set up global error handlers\nsetupGlobalErrorHandlers();\n\n// Initialize logger and other services\nlogger.info('Starting SF TUI');\n\n// Execute the CLI\n// With ESModule support\nrun([import.meta.url])\n  .then(() => {\n    // Render the app with Ink\n    const { waitUntilExit } = render(React.createElement(App));\n    \n    // Wait for app to exit\n    return waitUntilExit();\n  })\n  .then(() => {\n    // Log successful completion\n    logger.info('SF TUI completed successfully');\n    // Exit with success code\n    process.exit(0);\n  })\n  .catch((error) => {\n    // Log the error using our logger\n    logger.fatal('Error running SF TUI', { error });\n    // Exit with error code\n    process.exit(1);\n  });\n","import { execa, ExecaChildProcess } from 'execa';\nimport chalk from 'chalk';\nimport { TextProps } from 'ink';\nimport { logger, handleError } from './logger';\n\n// Custom Spinner type that includes the methods we need\ninterface SpinnerInterface {\n  start: (text: string) => SpinnerInterface;\n  stop: () => SpinnerInterface;\n  succeed: (text?: string) => SpinnerInterface;\n  fail: (text?: string) => SpinnerInterface;\n  warn: (text?: string) => SpinnerInterface;\n  info: (text: string) => SpinnerInterface;\n  render: (frame: number) => void;\n  text: string;\n  stopAndPersist?: (options?: any) => SpinnerInterface;\n}\n\ntype Spinner = SpinnerInterface;\n\ntype CommandOptions = {\n  cwd?: string;\n  silent?: boolean;\n  spinner?: Spinner;\n  env?: NodeJS.ProcessEnv;\n  timeout?: number;\n};\n\ntype CommandResult = {\n  stdout: string;\n  stderr: string;\n  exitCode: number;\n  command: string;\n};\n\n/**\n * Execute a shell command and return the result\n */\nexport const executeCommand = async (\n  command: string,\n  args: string[] = [],\n  options: CommandOptions = {}\n): Promise<CommandResult> => {\n  const { cwd = process.cwd(), silent = false, spinner, env, timeout } = options;\n  \n  if (!silent) {\n    const displayCommand = [command, ...args].join(' ');\n    spinner?.start(chalk.dim(`$ ${displayCommand}`));\n  }\n  \n  try {\n    // Log command execution\n    logger.debug(`Executing command: ${command} ${args.join(' ')}`, { cwd, timeout });\n    \n    const subprocess = execa(command, args, {\n      cwd,\n      shell: true,\n      env: { ...process.env, ...env, FORCE_COLOR: '1' },\n      timeout,\n    });\n    \n    // Stream output if not silent\n    if (!silent) {\n      subprocess.stdout?.on('data', (data) => {\n        const output = data.toString().trim();\n        spinner?.stopAndPersist({\n          symbol: ' ', \n          text: chalk.dim(output)\n        });\n        logger.debug(`[stdout] ${output}`);\n      });\n      \n      subprocess.stderr?.on('data', (data) => {\n        const output = data.toString().trim();\n        spinner?.stopAndPersist({\n          symbol: chalk.yellow('!'),\n          text: chalk.yellow(output)\n        });\n        logger.warn(`[stderr] ${output}`);\n      });\n    }\n    \n    const result = await subprocess;\n    \n    if (!silent && spinner) {\n      spinner.succeed();\n    }\n    \n    // Log successful completion\n    logger.debug(`Command completed successfully: ${command}`, {\n      exitCode: 0,\n      command: [command, ...args].join(' ')\n    });\n    \n    return {\n      stdout: result.stdout,\n      stderr: result.stderr,\n      exitCode: 0, // execa throws on non-zero exit codes\n      command: [command, ...args].join(' '),\n    };\n  } catch (error: any) {\n    // Log the error\n    handleError(error, 'executeCommand', {\n      command: [command, ...args].join(' '),\n      cwd,\n      exitCode: error.exitCode || 1\n    });\n    \n    if (!silent && spinner) {\n      spinner.fail(chalk.red(`Command failed: ${error.shortMessage || error.message}`));\n    }\n    \n    return {\n      stdout: error.stdout || '',\n      stderr: error.stderr || error.message,\n      exitCode: error.exitCode || 1,\n      command: [command, ...args].join(' '),\n    };\n  }\n};\n\n/**\n * Format bytes to human-readable string\n */\nexport const formatBytes = (bytes: number, decimals = 2): string => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  \n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\n\n/**\n * Format a duration in milliseconds to a human-readable string\n */\nexport const formatDuration = (ms: number): string => {\n  if (ms < 1000) {\n    return `${ms}ms`;\n  }\n  \n  const seconds = Math.floor((ms / 1000) % 60);\n  const minutes = Math.floor((ms / (1000 * 60)) % 60);\n  const hours = Math.floor((ms / (1000 * 60 * 60)) % 24);\n  \n  const parts = [];\n  \n  if (hours > 0) parts.push(`${hours}h`);\n  if (minutes > 0) parts.push(`${minutes}m`);\n  if (seconds > 0) parts.push(`${seconds}s`);\n  \n  return parts.join(' ') || '0s';\n};\n\n/**\n * Truncate text with ellipsis\n */\nexport const truncate = (text: string, maxLength: number, ellipsis = '…'): string => {\n  if (text.length <= maxLength) return text;\n  return text.slice(0, maxLength - ellipsis.length) + ellipsis;\n};\n\n/**\n * Create a debounced function\n */\nexport const debounce = <F extends (...args: any[]) => any>(\n  func: F,\n  wait: number\n): ((...args: Parameters<F>) => void) => {\n  let timeout: NodeJS.Timeout;\n  \n  return function(...args: Parameters<F>) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n/**\n * Create a throttled function\n */\nexport const throttle = <F extends (...args: any[]) => any>(\n  func: F,\n  limit: number\n): ((...args: Parameters<F>) => void) => {\n  let inThrottle = false;\n  \n  return function(...args: Parameters<F>) {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n};\n\n/**\n * Deep merge objects\n */\nexport const deepMerge = <T extends Record<string, any>>(target: T, source: any): T => {\n  const output = { ...target };\n  \n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach((key) => {\n      if (isObject(source[key])) {\n        if (!(key in target)) {\n          Object.assign(output, { [key]: source[key] });\n        } else {\n          output[key as keyof T] = deepMerge(target[key], source[key]);\n        }\n      } else {\n        Object.assign(output, { [key]: source[key] });\n      }\n    });\n  }\n  \n  return output;\n};\n\n/**\n * Check if value is an object\n */\nexport const isObject = (item: any): item is Record<string, any> => {\n  return item !== null && typeof item === 'object' && !Array.isArray(item);\n};\n\n/**\n * Generate a random ID\n */\nexport const generateId = (length = 8): string => {\n  return Math.random().toString(36).substring(2, 2 + length);\n};\n\n/**\n * Format text with chalk based on props\n */\nexport const formatText = (text: string, props: TextProps = {}): string => {\n  let result = text;\n  \n  if (props.color) {\n    result = chalk.hex(props.color)(result);\n  }\n  \n  if (props.backgroundColor) {\n    result = chalk.bgHex(props.backgroundColor)(result);\n  }\n  \n  if (props.bold) {\n    result = chalk.bold(result);\n  }\n  \n  if (props.italic) {\n    result = chalk.italic(result);\n  }\n  \n  if (props.underline) {\n    result = chalk.underline(result);\n  }\n  \n  if (props.dimColor) {\n    result = chalk.dim(result);\n  }\n  \n  if (props.inverse) {\n    result = chalk.inverse(result);\n  }\n  \n  if (props.strikethrough) {\n    result = chalk.strikethrough(result);\n  }\n  \n  return result;\n};\n\n/**\n * Create a loading spinner\n */\nexport const createSpinner = (text: string, spinnerType = 'dots'): Spinner => {\n  const spinner = {\n    interval: 80,\n    frames: [\n      '⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏'\n    ],\n    text: '',\n    start(text: string) {\n      this.text = text;\n      this.render(0);\n      return this;\n    },\n    stop() {\n      process.stdout.write('\\r' + ' '.repeat(process.stdout.columns || 80) + '\\r');\n      return this;\n    },\n    succeed(text?: string) {\n      this.stop();\n      console.log(chalk.green('✓') + ' ' + (text || this.text));\n      return this;\n    },\n    fail(text?: string) {\n      this.stop();\n      console.error(chalk.red('✗') + ' ' + (text || this.text));\n      return this;\n    },\n    warn(text?: string) {\n      this.stop();\n      console.warn(chalk.yellow('!') + ' ' + (text || this.text));\n      return this;\n    },\n    info(text: string) {\n      this.stop();\n      console.info(chalk.blue('i') + ' ' + text);\n      return this;\n    },\n    render(frame: number) {\n      const frameIndex = frame % this.frames.length;\n      process.stdout.write(\n        '\\r' + \n        chalk.blue(this.frames[frameIndex]) + \n        ' ' + \n        this.text\n      );\n    },\n  };\n  \n  return spinner.start(text);\n};\n","import chalk from 'chalk';\nimport fs from 'fs-extra'; // fs-extra is still needed for ensureDir and appendFile by Logger itself\nimport path from 'path';\nimport { defaultLoggerConfig, validateLoggerConfig, LoggerConfig as ExternalLoggerConfig } from '../config/loggerConfig';\nimport { LogFormatter, LogDetails as FormatterLogDetails } from './logFormatter';\nimport { LogRotationService } from './logRotationService';\n\n/**\n * Log levels enumeration.\n * @enum {string}\n */\nexport enum LogLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n  FATAL = 'FATAL',\n}\n\n/**\n * Represents a log entry.\n * @interface LogEntry\n */\nexport interface LogEntry {\n  timestamp: string;\n  level: LogLevel;\n  message: string;\n  details?: FormatterLogDetails; // Use LogDetails from formatter\n  stackTrace?: string;\n}\n\n// Use the imported LoggerConfig interface\ntype InternalLoggerConfig = ExternalLoggerConfig;\n\n// Constants for flushing and queue size remain relevant for the logger's write buffer\nconst FLUSH_INTERVAL_MS = 5000; // Flush queue every 5 seconds\nconst MAX_QUEUE_SIZE = 100; // Flush queue if it reaches this size\n\n/**\n * Logger class that provides logging functionality.\n * Implements console and file logging with log rotation and asynchronous writes.\n * Uses LogFormatter for formatting and LogRotationService for rotation.\n * @class\n */\nclass Logger {\n  private config: InternalLoggerConfig;\n  private static instance: Logger;\n  private logQueue: LogEntry[] = [];\n  private flushTimeout: NodeJS.Timeout | null = null;\n  private isFlushing = false;\n\n  private formatter: LogFormatter;\n  private rotationService: LogRotationService;\n\n  private constructor() {\n    try {\n      this.config = validateLoggerConfig(defaultLoggerConfig);\n    } catch (error) {\n      console.error(`Invalid logger configuration: ${error instanceof Error ? error.message : String(error)}. Using default values.`);\n      this.config = { // Fallback config\n        logLevel: 'INFO',\n        consoleOutput: true,\n        fileOutput: false,\n        logFilePath: '',\n        maxLogFileSize: 1 * 1024 * 1024,\n        maxLogFiles: 1,\n      };\n    }\n\n    this.formatter = new LogFormatter();\n    this.rotationService = new LogRotationService(this.config);\n\n    this.ensureLogDirectory();\n    this.setupFlushInterval();\n\n    // Graceful shutdown\n    process.on('exit', this.handleExit.bind(this));\n    process.on('SIGINT', this.handleSignal.bind(this));\n    process.on('SIGTERM', this.handleSignal.bind(this));\n    process.on('uncaughtException', this.handleUncaughtException.bind(this));\n  }\n\n  /**\n   * Returns the singleton instance of Logger.\n   * @returns {Logger} Logger instance.\n   */\n  public static getInstance(): Logger {\n    if (!Logger.instance) {\n      Logger.instance = new Logger();\n    }\n    return Logger.instance;\n  }\n\n  /**\n   * Configure the logger with partial configuration.\n   * @param partialConfig - Partial LoggerConfig object.\n   */\n  public configure(partialConfig: Partial<InternalLoggerConfig>): void {\n    try {\n      this.config = validateLoggerConfig({ ...this.config, ...partialConfig });\n    } catch (error) {\n       console.error(`Invalid partial logger configuration: ${error instanceof Error ? error.message : String(error)}. Configuration not applied.`);\n       return;\n    }\n    // Update rotation service config if main config changes\n    this.rotationService.updateConfig(this.config);\n    this.ensureLogDirectory();\n  }\n\n  /**\n   * Ensures that the log directory exists with appropriate permissions.\n   * If directory creation fails, disables file output.\n   * @private\n   */\n  private async ensureLogDirectory(): Promise<void> {\n    if (this.config.fileOutput && this.config.logFilePath) {\n      const logDir = path.dirname(this.config.logFilePath);\n      try {\n        // Ensure directory exists with specific permissions (0o700: user rwx, no group/other access)\n        await fs.ensureDir(logDir, { mode: 0o700 });\n      } catch (error) {\n        console.error(`Failed to create log directory '${logDir}': ${error instanceof Error ? error.message : String(error)}. Disabling file output.`);\n        this.config.fileOutput = false;\n        // Also update rotation service if file output is disabled\n        this.rotationService.updateConfig({ fileOutput: false }); \n      }\n    } else {\n      this.config.fileOutput = false; // Disable if no path\n      this.rotationService.updateConfig({ fileOutput: false });\n    }\n  }\n\n  // Write a log entry to the console\n  private writeToConsole(entry: LogEntry): void {\n    if (!this.config.consoleOutput) return;\n\n    let colorFn;\n    switch (entry.level) {\n      case LogLevel.DEBUG:\n        colorFn = chalk.blue;\n        break;\n      case LogLevel.INFO:\n        colorFn = chalk.white;\n        break;\n      case LogLevel.WARN:\n        colorFn = chalk.yellow;\n        break;\n      case LogLevel.ERROR:\n      case LogLevel.FATAL:\n        colorFn = chalk.red;\n        break;\n      default:\n        colorFn = chalk.white;\n    }\n\n    console.log(colorFn(this.formatter.format(entry)));\n  }\n\n  /**\n   * Sets up an interval to flush the log queue.\n   * @private\n   */\n  private setupFlushInterval(): void {\n    if (this.flushTimeout) {\n      clearInterval(this.flushTimeout);\n    }\n    this.flushTimeout = setInterval(() => this.flushQueue(), FLUSH_INTERVAL_MS);\n  }\n\n  /**\n   * Adds a log entry to the queue and triggers a flush if needed.\n   * @param entry - Log entry to write.\n   * @private\n   */\n  private async writeToFile(entry: LogEntry): Promise<void> {\n    if (!this.config.fileOutput || !this.config.logFilePath) return;\n\n    this.logQueue.push(entry);\n\n    // Flush immediately for critical errors or if queue is full\n    if (entry.level === LogLevel.FATAL || entry.level === LogLevel.ERROR || this.logQueue.length >= MAX_QUEUE_SIZE) {\n      if (this.flushTimeout) clearTimeout(this.flushTimeout); // Clear scheduled flush\n      await this.flushQueue();\n      this.setupFlushInterval(); // Restart interval\n    }\n  }\n\n  /**\n   * Flushes the log queue to the file.\n   * @private\n   */\n  private async flushQueue(): Promise<void> {\n    if (!this.config.fileOutput || !this.config.logFilePath || this.isFlushing || this.logQueue.length === 0) {\n      return;\n    }\n\n    this.isFlushing = true;\n    // Use rotation service. checkAndRotate will handle its own error logging.\n    await this.rotationService.checkAndRotate(); \n\n    // If rotation service disabled fileOutput due to critical errors, re-check.\n    if (!this.config.fileOutput) {\n        this.isFlushing = false;\n        // Consider logging a message that file output was disabled during rotation attempt\n        if (entriesToFlush.length > 0) {\n            console.warn(`[Logger] File output disabled during log rotation attempt. ${entriesToFlush.length} log entries in queue will not be written to file.`);\n            this.logQueue = []; // Clear queue as entries won't be written\n        }\n        return;\n    }\n\n    const entriesToFlush = [...this.logQueue];\n    this.logQueue = []; // Clear queue before async operation\n\n    const formattedEntries = entriesToFlush.map(e => this.formatter.format(e) + '\\n').join('');\n\n    try {\n      await fs.appendFile(this.config.logFilePath, formattedEntries);\n    } catch (error) {\n      console.error(`Failed to write to log file '${this.config.logFilePath}': ${error instanceof Error ? error.message : String(error)}. Entries lost: ${entriesToFlush.length}`);\n      // Optionally, re-queue or handle lost entries, e.g., try to log to console if not already\n      // For simplicity, we're currently just logging the error.\n    } finally {\n      this.isFlushing = false;\n      // If more items were added while flushing, flush again\n      if (this.logQueue.length > 0) {\n        // A small delay to prevent tight loop in case of continuous errors\n        setTimeout(() => this.flushQueue(), 100);\n      }\n    }\n  }\n\n  /**\n   * Handles application exit signals.\n   * @private\n   */\n  private async handleExit(): Promise<void> {\n    if (this.flushTimeout) {\n      clearInterval(this.flushTimeout);\n      this.flushTimeout = null;\n    }\n    await this.flushQueue(); // Ensure all logs are written before exit\n  }\n\n  private async handleSignal(): Promise<void> {\n    await this.handleExit();\n    process.exit(0);\n  }\n\n  private async handleUncaughtException(error: Error): Promise<void> {\n    // Log the uncaught exception using the logger itself (if possible)\n    // This will attempt to write to console and file (if configured)\n    const entry = this.createLogEntry(LogLevel.FATAL, `Uncaught Exception: ${error.message}`, undefined, error);\n    this.writeToConsole(entry); // Ensure it gets to console\n    if (this.config.fileOutput && this.config.logFilePath) {\n       // Try to synchronously write the last fatal error to the file\n      try {\n        const formattedEntry = this.formatter.format(entry) + '\\n';\n        fs.appendFileSync(this.config.logFilePath, formattedEntry);\n      } catch (e) {\n        console.error(\"Failed to write fatal exception to log file:\", e);\n      }\n    }\n    await this.handleExit(); // Attempt to flush any remaining logs\n    process.exit(1); // Exit with an error code\n  }\n\n  /**\n   * Creates a log entry object.\n   * @param level - Log level.\n   * @param message - Log message.\n   * @param details - Additional details (conforming to FormatterLogDetails).\n   * @param error - Optional error object.\n   * @returns The created log entry.\n   * @private\n   */\n  private createLogEntry(level: LogLevel, message: string, details?: FormatterLogDetails, error?: Error): LogEntry {\n    const timestamp = new Date().toISOString();\n    const stackTrace = error?.stack;\n    \n    return {\n      timestamp,\n      level,\n      message,\n      details,\n      stackTrace,\n    };\n  }\n\n  /**\n   * Logs a message if the log level permits.\n   * @param level - Log level.\n   * @param message - Log message.\n   * @param details - Additional log details (conforming to FormatterLogDetails).\n   * @param error - Optional error object.\n   * @private\n   */\n  private log(level: LogLevel, message: string, details?: FormatterLogDetails, error?: Error): void {\n    const levelValue = Object.values(LogLevel).indexOf(level);\n    const configLevelValue = Object.values(LogLevel).indexOf(this.config.logLevel);\n    \n    if (levelValue >= configLevelValue) {\n      const entry = this.createLogEntry(level, message, details, error);\n      this.writeToConsole(entry); // Console output is synchronous\n      this.writeToFile(entry);   // File output is asynchronous and queued\n    }\n  }\n\n  /**\n   * Logs a debug message.\n   * @param message - Debug message.\n   * @param details - Optional additional details (conforming to FormatterLogDetails).\n   */\n  public debug(message: string, details?: FormatterLogDetails): void {\n    this.log(LogLevel.DEBUG, message, details);\n  }\n\n  /**\n   * Logs an informational message.\n   * @param message - Information message.\n   * @param details - Optional additional details (conforming to FormatterLogDetails).\n   */\n  public info(message: string, details?: FormatterLogDetails): void {\n    this.log(LogLevel.INFO, message, details);\n  }\n\n  /**\n   * Logs a warning message.\n   * @param message - Warning message.\n   * @param details - Optional additional details (conforming to FormatterLogDetails).\n   * @param error - Optional error object.\n   */\n  public warn(message: string, details?: FormatterLogDetails, error?: Error): void {\n    this.log(LogLevel.WARN, message, details, error);\n  }\n\n  /**\n   * Logs an error message.\n   * @param message - Error message.\n   * @param details - Optional additional details (conforming to FormatterLogDetails).\n   * @param error - Optional error object.\n   */\n  public error(message: string, details?: FormatterLogDetails, error?: Error): void {\n    this.log(LogLevel.ERROR, message, details, error);\n  }\n\n  /**\n   * Logs a fatal error message.\n   * @param message - Fatal error message.\n   * @param details - Optional additional details (conforming to FormatterLogDetails).\n   * @param error - Optional error object.\n   */\n  public fatal(message: string, details?: FormatterLogDetails, error?: Error): void {\n    this.log(LogLevel.FATAL, message, details, error);\n  }\n\n  /**\n   * Logs an error object directly.\n   * @param errorObject - The error object.\n   * @param message - Optional message override.\n   * @param details - Optional additional details (conforming to FormatterLogDetails).\n   */\n  public logError(errorObject: Error, message?: string, details?: FormatterLogDetails): void {\n    const errorMessage = message || errorObject.message;\n    this.error(errorMessage, details, errorObject);\n  }\n\n  /**\n   * Returns the current log file path.\n   * @returns {string} The log file path, or an empty string if file output is disabled.\n   */\n  public getLogFilePath(): string {\n    return this.config.fileOutput ? this.config.logFilePath : '';\n  }\n\n  /**\n   * Clears the current log file.\n   */\n  public async clearLogs(): Promise<void> {\n    if (this.config.fileOutput && this.config.logFilePath) {\n      try {\n        // Ensure queue is flushed before clearing\n        await this.flushQueue();\n        await fs.writeFile(this.config.logFilePath, '');\n        logger.info('Log file cleared.');\n      } catch (error) {\n        console.error(`Failed to clear log file '${this.config.logFilePath}': ${error instanceof Error ? error.message : String(error)}`);\n      }\n    }\n  }\n\n  /**\n   * Gracefully shuts down the logger, flushing any pending logs.\n   * Call this before application termination if possible.\n   */\n  public async shutdown(): Promise<void> {\n    await this.handleExit();\n    // Remove process listeners to prevent multiple calls if shutdown is explicit\n    process.removeListener('exit', this.handleExit);\n    process.removeListener('SIGINT', this.handleSignal);\n    process.removeListener('SIGTERM', this.handleSignal);\n    process.removeListener('uncaughtException', this.handleUncaughtException);\n    if (this.flushTimeout) {\n        clearInterval(this.flushTimeout);\n        this.flushTimeout = null;\n    }\n  }\n}\n\n// Export a singleton instance\nexport const logger = Logger.getInstance();\n\n/**\n * Utility function to handle and log errors consistently.\n * @param error - The error to handle (can be unknown type).\n * @param context - Optional context string for the error message.\n * @param details - Optional additional details for the log (conforming to FormatterLogDetails).\n * @returns The original error object (or a new Error if input was not an Error).\n */\nexport function handleError(error: unknown, context?: string, details?: FormatterLogDetails): Error {\n  const errorObject = error instanceof Error ? error : new Error(String(error));\n  const contextMessage = context ? `[${context}] ${errorObject.message}` : errorObject.message;\n  \n  logger.error(contextMessage, details, errorObject); // logger.error handles stack trace\n  \n  return errorObject;\n}\n","/**\n * Logger configuration file.\n *\n * This file exports the default configuration for the logger and error reporter.\n * It supports external configuration via environment variables (SF_TUI_*).\n *\n * @module loggerConfig\n */\n\nexport interface LoggerConfig {\n  logLevel: 'DEBUG' | 'INFO' | 'WARN' | 'ERROR' | 'FATAL';\n  consoleOutput: boolean;\n  fileOutput: boolean;\n  logFilePath: string;\n  maxLogFileSize: number; // in bytes\n  maxLogFiles: number;\n}\n\nexport const defaultLoggerConfig: LoggerConfig = {\n  logLevel: (process.env.SF_TUI_LOG_LEVEL as LoggerConfig['logLevel']) || 'INFO',\n  consoleOutput: process.env.SF_TUI_CONSOLE_OUTPUT ? process.env.SF_TUI_CONSOLE_OUTPUT === 'true' : true,\n  fileOutput: process.env.SF_TUI_FILE_OUTPUT ? process.env.SF_TUI_FILE_OUTPUT === 'true' : true,\n  logFilePath: process.env.SF_TUI_LOG_FILE || `${process.env.HOME}/.sf-tui/logs/sf-tui.log`,\n  maxLogFileSize: process.env.SF_TUI_MAX_LOG_FILE_SIZE ? parseInt(process.env.SF_TUI_MAX_LOG_FILE_SIZE, 10) : 5 * 1024 * 1024,\n  maxLogFiles: process.env.SF_TUI_MAX_LOG_FILES ? parseInt(process.env.SF_TUI_MAX_LOG_FILES, 10) : 5,\n};\n\n/**\n * Validates the logger configuration.\n *\n * @param config - The LoggerConfig object to validate.\n * @returns The validated LoggerConfig.\n * @throws Error if the configuration is invalid.\n */\nexport function validateLoggerConfig(config: LoggerConfig): LoggerConfig {\n  if (!['DEBUG', 'INFO', 'WARN', 'ERROR', 'FATAL'].includes(config.logLevel)) {\n    throw new Error(`Invalid log level: ${config.logLevel}`);\n  }\n  if (typeof config.consoleOutput !== 'boolean') {\n    throw new Error(`consoleOutput must be a boolean`);\n  }\n  if (typeof config.fileOutput !== 'boolean') {\n    throw new Error(`fileOutput must be a boolean`);\n  }\n  if (typeof config.logFilePath !== 'string' || config.logFilePath.trim() === '') {\n    throw new Error(`Invalid logFilePath`);\n  }\n  if (typeof config.maxLogFileSize !== 'number' || config.maxLogFileSize <= 0) {\n    throw new Error(`Invalid maxLogFileSize`);\n  }\n  if (typeof config.maxLogFiles !== 'number' || config.maxLogFiles <= 0) {\n    throw new Error(`Invalid maxLogFiles`);\n  }\n  return config;\n}\n\n","import { LogEntry, LogLevel } from './logger'; // Assuming LogLevel might be needed for formatting decisions\n\n/**\n * Defines the structure for detailed information accompanying a log entry.\n */\nexport type LogDetails = Record<string, any>;\n\n/**\n * Utility function to sanitize a string for logging.\n * Removes newlines and carriage returns to prevent log injection or formatting issues.\n * @param str - The string to sanitize.\n * @returns The sanitized string.\n */\nfunction sanitizeString(str: string): string {\n  if (typeof str !== 'string') return str;\n  return str.replace(/[\\r\\n]+/g, ' ');\n}\n\n/**\n * Formats log entries for output.\n * @class\n */\nexport class LogFormatter {\n  /**\n   * Formats a log entry into a string.\n   * Sanitizes the message and string values within details.\n   * @param entry - The log entry to format.\n   * @returns The formatted log string.\n   */\n  public format(entry: LogEntry): string {\n    let formattedMessage = sanitizeString(entry.message);\n    let formattedDetails = '';\n    let formattedStackTrace = '';\n\n    if (entry.details) {\n      const sanitizedDetails: LogDetails = {};\n      for (const key in entry.details) {\n        if (Object.prototype.hasOwnProperty.call(entry.details, key)) {\n          const value = entry.details[key];\n          sanitizedDetails[key] = typeof value === 'string' ? sanitizeString(value) : value;\n        }\n      }\n      formattedDetails = `\\nDetails: ${JSON.stringify(sanitizedDetails, null, 2)}`;\n    }\n\n    if (entry.stackTrace) {\n      // Stack traces can be long and multi-line; decide if they need full sanitization\n      // For now, assume stack traces are generally safe but could be trimmed or have minimal sanitization\n      formattedStackTrace = `\\nStack Trace: ${entry.stackTrace}`;\n    }\n\n    return `[${entry.timestamp}] [${entry.level}] ${formattedMessage}${formattedDetails}${formattedStackTrace}`;\n  }\n}\n\n","import fs from 'fs-extra';\nimport path from 'path';\nimport { LoggerConfig as ExternalLoggerConfig } from '../config/loggerConfig'; // Assuming this is the main config\nimport { logger as mainLogger } from './logger'; // For internal logging of rotation issues\n\ntype RotationConfig = Pick<ExternalLoggerConfig, 'logFilePath' | 'maxLogFileSize' | 'maxLogFiles' | 'fileOutput'>;\n\nconst MAX_ROTATION_RETRIES = 3;\nconst ROTATION_RETRY_DELAY_MS = 1000;\n\n/**\n * Service responsible for log file rotation.\n * @class\n */\nexport class LogRotationService {\n  private config: RotationConfig;\n  private rotationRetries = 0;\n  // Use a simplified console logger for rotation service internal issues\n  // to avoid circular dependencies or complex logger passthrough.\n  private internalLogger = {\n    error: (message: string, details?: any) => console.error(`[LogRotationService] ${message}`, details || ''),\n    info: (message: string, details?: any) => console.log(`[LogRotationService] ${message}`, details || ''),\n  };\n\n\n  /**\n   * Creates an instance of LogRotationService.\n   * @param config - The configuration for log rotation.\n   */\n  constructor(config: RotationConfig) {\n    this.config = config;\n  }\n  \n  /**\n   * Updates the configuration for the rotation service.\n   * @param newConfig - The new partial configuration.\n   */\n  public updateConfig(newConfig: Partial<RotationConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n\n  /**\n   * Checks if log rotation is needed based on file size and performs rotation.\n   */\n  public async checkAndRotate(): Promise<void> {\n    if (!this.config.fileOutput || !this.config.logFilePath) {\n      return;\n    }\n\n    try {\n      const fileExists = await fs.pathExists(this.config.logFilePath);\n      if (fileExists) {\n        const stats = await fs.stat(this.config.logFilePath);\n        if (stats.size >= this.config.maxLogFileSize) {\n          await this.rotate();\n        }\n      }\n    } catch (error) {\n      this.internalLogger.error(`Failed to check log rotation for ${this.config.logFilePath}:`, error);\n    }\n  }\n\n  /**\n   * Rotates the log files with retry logic.\n   */\n  private async rotate(): Promise<void> {\n    if (!this.config.fileOutput || !this.config.logFilePath) {\n      this.internalLogger.error('Rotation skipped: File output disabled or log path not set.');\n      return;\n    }\n    \n    this.internalLogger.info(`Attempting to rotate log file: ${this.config.logFilePath}`);\n\n    try {\n      const oldestLog = `${this.config.logFilePath}.${this.config.maxLogFiles - 1}`;\n      if (await fs.pathExists(oldestLog)) {\n        await fs.unlink(oldestLog);\n        this.internalLogger.info(`Deleted oldest log: ${oldestLog}`);\n      }\n\n      for (let i = this.config.maxLogFiles - 2; i >= 0; i--) {\n        const oldPath = i === 0 ? this.config.logFilePath : `${this.config.logFilePath}.${i}`;\n        const newPath = `${this.config.logFilePath}.${i + 1}`;\n        if (await fs.pathExists(oldPath)) {\n          await fs.rename(oldPath, newPath);\n          this.internalLogger.info(`Renamed ${oldPath} to ${newPath}`);\n        }\n      }\n      // Create a new empty log file. This also handles the case where the original log file didn't exist.\n      await fs.writeFile(this.config.logFilePath, ''); \n      this.internalLogger.info(`Created new log file: ${this.config.logFilePath}`);\n      this.rotationRetries = 0; // Reset retries on success\n    } catch (error) {\n      this.rotationRetries++;\n      const errorMessage = `Failed to rotate log files (attempt ${this.rotationRetries}) for ${this.config.logFilePath}: ${error instanceof Error ? error.message : String(error)}`;\n      this.internalLogger.error(errorMessage);\n\n      if (this.rotationRetries < MAX_ROTATION_RETRIES) {\n        this.internalLogger.info(`Retrying rotation in ${ROTATION_RETRY_DELAY_MS}ms...`);\n        await new Promise(resolve => setTimeout(resolve, ROTATION_RETRY_DELAY_MS));\n        await this.rotate(); // Retry\n      } else {\n        this.internalLogger.error(`Max rotation retries reached for ${this.config.logFilePath}. Rotation failed for this cycle.`);\n        // Consider if fileOutput should be disabled here for the main logger if rotation is critical.\n        // For now, it just means rotation failed, but logging might continue to the oversized file.\n      }\n    }\n  }\n}\n\n","import { logger, LogLevel } from './logger';\n\n// Define error severity levels\nexport enum ErrorSeverity {\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH',\n  CRITICAL = 'CRITICAL',\n}\n\n// Define error categories\nexport enum ErrorCategory {\n  UI = 'UI',\n  NETWORK = 'NETWORK',\n  FILESYSTEM = 'FILESYSTEM',\n  COMMAND = 'COMMAND',\n  AUTH = 'AUTH',\n  PLUGIN = 'PLUGIN',\n  VALIDATION = 'VALIDATION',\n  UNKNOWN = 'UNKNOWN',\n}\n\n// Define error report interface\n\n/**\n * Defines the structure for detailed information accompanying an error report.\n * Can include any relevant key-value pairs.\n */\nexport type ErrorDetails = Record<string, any>;\n\nexport interface ErrorReport {\n  id: string;\n  timestamp: Date;\n  message: string;\n  error: Error | null;\n  severity: ErrorSeverity;\n  category: ErrorCategory;\n  context: string | null;\n  details: ErrorDetails | null;\n  userAction: string | null;\n  handled: boolean;\n}\n\n// Define user feedback interface\nexport interface UserFeedback {\n  errorId: string;\n  timestamp: Date;\n  description: string;\n  reproduce?: string;\n  contact?: string;\n}\n\n// Define subscribers for error notifications\ntype ErrorReporterSubscriber = (error: ErrorReport) => void;\n\nconst MAX_ERROR_REPORTS = 100; // Maximum number of error reports to store\nconst ERROR_REPORT_TTL_MS = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\nconst CLEANUP_INTERVAL_MS = 60 * 60 * 1000; // 1 hour in milliseconds\n\nclass ErrorReporter {\n  private static instance: ErrorReporter;\n  private errors: Map<string, ErrorReport> = new Map(); // Stores errors by ID\n  private errorOrder: string[] = []; // Stores error IDs in the order they were reported (for FIFO eviction)\n  private subscribers: ErrorReporterSubscriber[] = [];\n  private cleanupInterval: NodeJS.Timeout | null = null;\n  private generateErrorId = (): string => `error-${Date.now()}-${Math.floor(Math.random() * 10000)}`;\n\n  private constructor() {\n    this.cleanupInterval = setInterval(() => this.cleanupOldErrors(), CLEANUP_INTERVAL_MS);\n  }\n\n  public static getInstance(): ErrorReporter {\n    if (!ErrorReporter.instance) {\n      ErrorReporter.instance = new ErrorReporter();\n    }\n    return ErrorReporter.instance;\n  }\n\n  // Subscribe to error notifications\n  public subscribe(callback: ErrorReporterSubscriber): () => void {\n    this.subscribers.push(callback);\n    \n    // Return unsubscribe function\n    return () => {\n      this.subscribers = this.subscribers.filter(sub => sub !== callback);\n    };\n  }\n\n  // Notify all subscribers of an error\n  private notifySubscribers(error: ErrorReport): void {\n    for (const subscriber of this.subscribers) {\n      try {\n        subscriber(error);\n      } catch (err) {\n        logger.error('Error in error subscriber', { subscriberError: err });\n      }\n    }\n  }\n\n  // Map severity to log level\n  private severityToLogLevel(severity: ErrorSeverity): LogLevel {\n    switch (severity) {\n      case ErrorSeverity.LOW:\n        return LogLevel.INFO;\n      case ErrorSeverity.MEDIUM:\n        return LogLevel.WARN;\n      case ErrorSeverity.HIGH:\n      case ErrorSeverity.CRITICAL:\n        return LogLevel.ERROR;\n      default:\n        return LogLevel.ERROR;\n    }\n  }\n\n  // Report a new error\n  public reportError(\n    message: string,\n    errorOrOptions?: Error | {\n      error?: Error | null;\n      severity?: ErrorSeverity;\n      category?: ErrorCategory;\n      context?: string | null;\n      details?: ErrorDetails | null;\n      userAction?: string | null;\n    } | null | undefined\n  ): ErrorReport {\n    // Clean up old errors before adding a new one to manage memory\n    this.cleanupOldErrors();\n\n    // Process the error or options\n    let errorObj: Error | null = null;\n    let errorSeverity = ErrorSeverity.MEDIUM;\n    let errorCategory = ErrorCategory.UNKNOWN;\n    let errorContext: string | null = null;\n    let errorDetails: ErrorDetails | null = null;\n    let errorUserAction: string | null = null;\n\n    if (errorOrOptions) {\n      if (errorOrOptions instanceof Error) {\n        errorObj = errorOrOptions;\n      } else {\n        const options = errorOrOptions;\n        \n        if ('error' in options) {\n          errorObj = options.error || null;\n        }\n        if ('severity' in options && options.severity !== undefined) {\n          errorSeverity = options.severity;\n        }\n        if ('category' in options && options.category !== undefined) {\n          errorCategory = options.category;\n        }\n        if ('context' in options) {\n          errorContext = options.context || null;\n        }\n        if ('details' in options) {\n          errorDetails = options.details || null;\n        }\n        if ('userAction' in options) {\n          errorUserAction = options.userAction || null;\n        }\n      }\n    }\n\n    const report: ErrorReport = {\n      id: this.generateErrorId(),\n      timestamp: new Date(),\n      message,\n      error: errorObj,\n      severity: errorSeverity,\n      category: errorCategory,\n      context: errorContext,\n      details: errorDetails,\n      userAction: errorUserAction,\n      handled: false,\n    };\n\n    // Store the error\n    this.errors.set(report.id, report);\n    this.errorOrder.push(report.id);\n\n    // Log the error using the appropriate log level\n    const currentLogLevel = this.severityToLogLevel(report.severity);\n    const errorMessage = report.error?.message ?? '';\n    const currentLogMessage = errorMessage ? `${message}: ${errorMessage}` : message;\n    \n    const currentLogDetails: Record<string, unknown> = {};\n    \n    if (errorMessage) {\n      currentLogDetails.error = errorMessage;\n    }\n    if (report.error?.stack) {\n      currentLogDetails.stack = report.error.stack;\n    }\n    if (report.details) {\n      Object.assign(currentLogDetails, report.details);\n    }\n    \n    const errorToLog = report.error ?? undefined;\n    \n    switch (currentLogLevel) {\n      case LogLevel.ERROR:\n        logger.error(currentLogMessage, currentLogDetails, errorToLog);\n        break;\n      case LogLevel.WARN:\n        logger.warn(currentLogMessage, currentLogDetails, errorToLog);\n        break;\n      case LogLevel.FATAL:\n        logger.fatal(currentLogMessage, currentLogDetails, errorToLog);\n        break;\n      default:\n        logger.info(currentLogMessage, currentLogDetails);\n        break;\n    }\n    \n    // Notify subscribers\n    this.notifySubscribers(report);\n    \n    return report;\n  }\n\n  /**\n   * Cleans up errors that are older than the defined TTL.\n   * @private\n   */\n  private cleanupOldErrors(): void {\n    const now = Date.now();\n    const newErrorOrder: string[] = [];\n    for (const errorId of this.errorOrder) {\n      const errorReport = this.errors.get(errorId);\n      if (errorReport && (now - errorReport.timestamp.getTime()) < ERROR_REPORT_TTL_MS) {\n        newErrorOrder.push(errorId); // Keep if not expired\n      } else {\n        this.errors.delete(errorId); // Delete expired from map\n      }\n    }\n    this.errorOrder = newErrorOrder;\n  }\n\n  // Mark an error as handled\n  public markAsHandled(errorId: string): void {\n    const error = this.errors.get(errorId);\n    if (error) {\n      error.handled = true;\n      this.errors.set(errorId, error);\n    }\n  }\n\n  // Get all errors\n  public getAllErrors(): ErrorReport[] {\n    return Array.from(this.errors.values());\n  }\n\n  // Get a specific error by ID\n  public getError(errorId: string): ErrorReport | undefined {\n    return this.errors.get(errorId);\n  }\n\n  // Clear all errors\n  public clearErrors(): void {\n    this.errors.clear();\n    this.errorOrder = [];\n    logger.info('All error reports cleared.');\n  }\n\n  // Submit user feedback for an error\n  public submitFeedback(feedback: UserFeedback): void {\n    // In a real implementation, this would send the feedback to a server\n    // For now, we'll just log it\n    logger.info(`User feedback received for error ${feedback.errorId}`, { feedback });\n  }\n\n  // Helper methods for common error categories\n  public reportCommandError(message: string, error?: Error | null, details: ErrorDetails | null = null): ErrorReport {\n    return this.reportError(message, {\n      error: error || null,\n      severity: ErrorSeverity.MEDIUM,\n      category: ErrorCategory.COMMAND,\n      details: details || null,\n      userAction: 'Please check the command and try again.',\n    });\n  }\n\n  public reportNetworkError(message: string, error?: Error | null, details: ErrorDetails | null = null): ErrorReport {\n    return this.reportError(message, {\n      error: error || null,\n      severity: ErrorSeverity.MEDIUM,\n      category: ErrorCategory.NETWORK,\n      details: details || null,\n      userAction: 'Please check your network connection and try again.',\n    });\n  }\n\n  public reportAuthError(message: string, error?: Error | null, details: ErrorDetails | null = null): ErrorReport {\n    return this.reportError(message, {\n      error: error || null,\n      severity: ErrorSeverity.HIGH,\n      category: ErrorCategory.AUTH,\n      details: details || null,\n      userAction: 'Please check your credentials and try again.',\n    });\n  }\n\n  public reportValidationError(message: string, error?: Error | null, details: ErrorDetails | null = null): ErrorReport {\n    return this.reportError(message, {\n      error: error || null,\n      severity: ErrorSeverity.LOW,\n      category: ErrorCategory.VALIDATION,\n      details: details || null,\n      userAction: 'Please check your input and try again.',\n    });\n  }\n\n  /**\n   * Gracefully shuts down the error reporter, clearing any intervals.\n   */\n  public shutdown(): void {\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval);\n      this.cleanupInterval = null;\n    }\n    // Perform any other cleanup if necessary\n    logger.info('ErrorReporter shutdown complete.');\n  }\n}\n\n// Export a singleton instance\nexport const errorReporter = ErrorReporter.getInstance();\n\n// Global error handler for uncaught exceptions\nexport function setupGlobalErrorHandlers(): void {\n  // Handle uncaught exceptions\n  process.on('uncaughtException', (error) => {\n    errorReporter.reportError('Uncaught exception', {\n      error,\n      severity: ErrorSeverity.CRITICAL,\n      category: ErrorCategory.UNKNOWN,\n      userAction: 'Please report this issue to the developers.',\n    });\n    \n    // Log the error and exit gracefully\n    logger.fatal('Uncaught exception', { originalError: error.message, stack: error.stack });\n    // Ensure logger flushes before exiting\n    if (typeof logger.shutdown === 'function') {\n      logger.shutdown().then(() => {\n        errorReporter.shutdown();\n        process.exit(1);\n      }).catch(() => {\n        errorReporter.shutdown();\n        process.exit(1);\n      });\n    } else {\n      errorReporter.shutdown();\n      process.exit(1);\n    }\n  });\n\n  // Handle unhandled promise rejections\n  process.on('unhandledRejection', (reason, promise) => {\n    const error = reason instanceof Error ? reason : new Error(String(reason));\n    \n    errorReporter.reportError('Unhandled promise rejection', {\n      error,\n      severity: ErrorSeverity.HIGH,\n      category: ErrorCategory.UNKNOWN,\n      userAction: 'Please report this issue to the developers.',\n    });\n    \n    // Log the error but don't exit\n    logger.error('Unhandled promise rejection', { originalError: error.message, stack: error.stack, promiseDetails: promise });\n  });\n}\n","import fs from 'fs';\nimport path from 'path';\nimport os from 'os';\nimport crypto from 'crypto';\nimport { logger } from './logger';\n\nexport interface CacheOptions {\n  /**\n   * Time-to-live in milliseconds\n   * Default: 5 minutes\n   */\n  ttl?: number;\n  \n  /**\n   * Maximum cache size in bytes\n   * Default: 10MB\n   */\n  maxSize?: number;\n  \n  /**\n   * Whether to enable caching\n   * Default: true\n   */\n  enabled?: boolean;\n  \n  /**\n   * Cache directory\n   * Default: ~/.sf-tui/cache\n   */\n  cacheDir?: string;\n}\n\nexport interface CacheEntry<T> {\n  value: T;\n  timestamp: number;\n  key: string;\n  size: number;\n}\n\nexport interface CacheStats {\n  hits: number;\n  misses: number;\n  size: number;\n  entries: number;\n}\n\nconst DEFAULT_OPTIONS: CacheOptions = {\n  ttl: 5 * 60 * 1000, // 5 minutes\n  maxSize: 10 * 1024 * 1024, // 10MB\n  enabled: true,\n  cacheDir: path.join(os.homedir(), '.sf-tui', 'cache'),\n};\n\n/**\n * Response cache service for SF TUI\n * Caches responses from Salesforce CLI commands to improve performance\n */\nexport class CacheService<T = any> {\n  private options: Required<CacheOptions>;\n  private memoryCache: Map<string, CacheEntry<T>> = new Map();\n  private stats: CacheStats = { hits: 0, misses: 0, size: 0, entries: 0 };\n  \n  constructor(options: CacheOptions = {}) {\n    this.options = { ...DEFAULT_OPTIONS, ...options } as Required<CacheOptions>;\n    this.ensureCacheDirectory();\n  }\n\n  /**\n   * Generate a cache key from the provided arguments\n   */\n  public generateKey(command: string, args: any[]): string {\n    const key = JSON.stringify({ command, args });\n    return crypto.createHash('md5').update(key).digest('hex');\n  }\n\n  /**\n   * Get a value from the cache\n   * @returns The cached value or null if not found or expired\n   */\n  public get(key: string): T | null {\n    if (!this.options.enabled) {\n      return null;\n    }\n\n    // Check memory cache first\n    const memEntry = this.memoryCache.get(key);\n    if (memEntry && this.isValid(memEntry)) {\n      this.stats.hits++;\n      return memEntry.value;\n    }\n\n    // Check file system cache if not in memory\n    try {\n      const cacheFile = path.join(this.options.cacheDir, `${key}.json`);\n      if (fs.existsSync(cacheFile)) {\n        const data = fs.readFileSync(cacheFile, 'utf8');\n        const entry = JSON.parse(data) as CacheEntry<T>;\n        \n        if (this.isValid(entry)) {\n          // Add to memory cache\n          this.memoryCache.set(key, entry);\n          this.stats.hits++;\n          return entry.value;\n        } else {\n          // Clean up expired entry\n          fs.unlinkSync(cacheFile);\n        }\n      }\n    } catch (error) {\n      logger.error('Cache read error:', error);\n    }\n\n    this.stats.misses++;\n    return null;\n  }\n\n  /**\n   * Set a value in the cache\n   */\n  public set(key: string, value: T): void {\n    if (!this.options.enabled) {\n      return;\n    }\n\n    try {\n      const serialized = JSON.stringify(value);\n      const size = Buffer.byteLength(serialized);\n      \n      // Skip if item is too large\n      if (size > this.options.maxSize * 0.1) {\n        logger.debug(`Cache item too large: ${size} bytes`);\n        return;\n      }\n\n      const entry: CacheEntry<T> = {\n        key,\n        value,\n        timestamp: Date.now(),\n        size,\n      };\n\n      // Add to memory cache\n      this.memoryCache.set(key, entry);\n      \n      // Write to file system\n      const cacheFile = path.join(this.options.cacheDir, `${key}.json`);\n      fs.writeFileSync(cacheFile, JSON.stringify(entry), 'utf8');\n      \n      // Update stats\n      this.stats.size += size;\n      this.stats.entries++;\n\n      // Check if we need to clean up\n      this.maybePruneCache();\n    } catch (error) {\n      logger.error('Cache write error:', error);\n    }\n  }\n\n  /**\n   * Check if a key exists in the cache and is valid\n   */\n  public has(key: string): boolean {\n    if (!this.options.enabled) {\n      return false;\n    }\n\n    // Check memory cache\n    if (this.memoryCache.has(key)) {\n      const entry = this.memoryCache.get(key)!;\n      return this.isValid(entry);\n    }\n\n    // Check file system\n    const cacheFile = path.join(this.options.cacheDir, `${key}.json`);\n    return fs.existsSync(cacheFile);\n  }\n\n  /**\n   * Delete a key from the cache\n   */\n  public delete(key: string): void {\n    if (!this.options.enabled) {\n      return;\n    }\n\n    // Remove from memory\n    if (this.memoryCache.has(key)) {\n      const entry = this.memoryCache.get(key)!;\n      this.stats.size -= entry.size;\n      this.stats.entries--;\n      this.memoryCache.delete(key);\n    }\n\n    // Remove from file system\n    try {\n      const cacheFile = path.join(this.options.cacheDir, `${key}.json`);\n      if (fs.existsSync(cacheFile)) {\n        fs.unlinkSync(cacheFile);\n      }\n    } catch (error) {\n      logger.error('Cache delete error:', error);\n    }\n  }\n\n  /**\n   * Clear the entire cache\n   */\n  public clear(): void {\n    if (!this.options.enabled) {\n      return;\n    }\n\n    // Clear memory cache\n    this.memoryCache.clear();\n    \n    // Clear file system cache\n    try {\n      const files = fs.readdirSync(this.options.cacheDir);\n      for (const file of files) {\n        if (file.endsWith('.json')) {\n          fs.unlinkSync(path.join(this.options.cacheDir, file));\n        }\n      }\n      \n      // Reset stats\n      this.stats = { hits: 0, misses: 0, size: 0, entries: 0 };\n    } catch (error) {\n      logger.error('Cache clear error:', error);\n    }\n  }\n\n  /**\n   * Invalidate cache entries based on a prefix or pattern\n   */\n  public invalidate(prefix: string): void {\n    if (!this.options.enabled) {\n      return;\n    }\n\n    // Invalidate memory cache\n    for (const [cacheKey, entry] of this.memoryCache.entries()) {\n      if (cacheKey.startsWith(prefix)) {\n        this.stats.size -= entry.size;\n        this.stats.entries--;\n        this.memoryCache.delete(cacheKey);\n      }\n    }\n\n    // Invalidate file system cache\n    try {\n      const files = fs.readdirSync(this.options.cacheDir);\n      for (const file of files) {\n        if (file.startsWith(prefix) && file.endsWith('.json')) {\n          fs.unlinkSync(path.join(this.options.cacheDir, file));\n        }\n      }\n    } catch (error) {\n      logger.error('Cache invalidation error:', error);\n    }\n  }\n\n  /**\n   * Get cache statistics\n   */\n  public getStats(): CacheStats {\n    return { ...this.stats };\n  }\n\n  /**\n   * Check if a cache entry is still valid\n   */\n  private isValid(entry: CacheEntry<T>): boolean {\n    const age = Date.now() - entry.timestamp;\n    return age < this.options.ttl;\n  }\n\n  /**\n   * Ensure the cache directory exists\n   */\n  private ensureCacheDirectory(): void {\n    try {\n      if (!fs.existsSync(this.options.cacheDir)) {\n        fs.mkdirSync(this.options.cacheDir, { recursive: true });\n      }\n    } catch (error) {\n      logger.error('Failed to create cache directory:', error);\n    }\n  }\n\n  /**\n   * Prune the cache if it exceeds the size limit\n   */\n  private maybePruneCache(): void {\n    if (this.stats.size <= this.options.maxSize) {\n      return;\n    }\n\n    try {\n      const files = fs.readdirSync(this.options.cacheDir)\n        .filter(file => file.endsWith('.json'))\n        .map(file => {\n          const filePath = path.join(this.options.cacheDir, file);\n          const stats = fs.statSync(filePath);\n          return {\n            path: filePath,\n            size: stats.size,\n            mtime: stats.mtime.getTime(),\n          };\n        })\n        .sort((a, b) => a.mtime - b.mtime); // Oldest first\n\n      let removedSize = 0;\n      for (const file of files) {\n        fs.unlinkSync(file.path);\n        removedSize += file.size;\n        \n        // Also remove from memory cache if present\n        const key = path.basename(file.path, '.json');\n        if (this.memoryCache.has(key)) {\n          this.memoryCache.delete(key);\n        }\n        \n        if (this.stats.size - removedSize <= this.options.maxSize * 0.8) {\n          break; // Pruned enough\n        }\n      }\n      \n      // Update stats\n      this.stats.size -= removedSize;\n    } catch (error) {\n      logger.error('Cache pruning error:', error);\n    }\n  }\n}\n\n// Export singleton instance\nexport const cacheService = new CacheService();","import fs from 'fs';\nimport path from 'path';\nimport os from 'os';\nimport { fileURLToPath } from 'url';\nimport { deepMerge } from '../utils/helpers';\nimport { Theme } from '../themes';\n\n// Get the directory name in ES module\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Import ShortcutConfig type for keyboard shortcuts\nimport { ShortcutConfig } from '../context/KeyboardShortcuts';\nimport { CacheOptions } from '../utils/cache';\n\n// Default configuration\nexport interface Config {\n  theme: string;\n  editor: string;\n  defaultOrg?: string;\n  apiVersion: string;\n  plugins: string[];\n  telemetry: boolean;\n  keyboardShortcuts?: ShortcutConfig;\n  cache: {\n    enabled: boolean;\n    ttl: number;\n    maxSize: number;\n    commandCache: {\n      enabled: boolean;\n      exclude: string[];\n    };\n  };\n  experimental: {\n    features: string[];\n  };\n  [key: string]: any;\n}\n\nconst defaultConfig: Config = {\n  theme: 'salesforce',\n  editor: process.env.EDITOR || 'code',\n  defaultOrg: undefined,\n  apiVersion: '58.0',\n  plugins: [],\n  telemetry: true,\n  keyboardShortcuts: {},\n  cache: {\n    enabled: true,\n    ttl: 5 * 60 * 1000, // 5 minutes\n    maxSize: 10 * 1024 * 1024, // 10MB\n    commandCache: {\n      enabled: true,\n      exclude: [\n        'org:create',\n        'org:delete',\n        'auth',\n        'deploy',\n        'retrieve',\n        'push',\n        'pull',\n        'data:import',\n        'data:export',\n        'apex:execute',\n      ],\n    },\n  },\n  experimental: {\n    features: [],\n  },\n};\n\n// Path to the config file\nconst CONFIG_DIR = path.join(os.homedir(), '.sftui');\nconst CONFIG_FILE = path.join(CONFIG_DIR, 'config.json');\n\n// Ensure config directory exists\nconst ensureConfigDir = () => {\n  if (!fs.existsSync(CONFIG_DIR)) {\n    fs.mkdirSync(CONFIG_DIR, { recursive: true });\n  }\n};\n\n// Load configuration from file\nconst loadConfig = (): Config => {\n  try {\n    ensureConfigDir();\n    \n    if (fs.existsSync(CONFIG_FILE)) {\n      const configData = fs.readFileSync(CONFIG_FILE, 'utf8');\n      return deepMerge({ ...defaultConfig }, JSON.parse(configData));\n    }\n    \n    // If no config file exists, create one with defaults\n    saveConfig(defaultConfig);\n    return { ...defaultConfig };\n  } catch (error) {\n    console.error('Error loading configuration:', error);\n    return { ...defaultConfig };\n  }\n};\n\n// Save configuration to file\nconst saveConfig = (config: Partial<Config>): void => {\n  try {\n    ensureConfigDir();\n    const currentConfig = loadConfig();\n    const newConfig = deepMerge(currentConfig, config);\n    fs.writeFileSync(CONFIG_FILE, JSON.stringify(newConfig, null, 2), 'utf8');\n  } catch (error) {\n    console.error('Error saving configuration:', error);\n  }\n};\n\n// Get a configuration value\nconst getConfig = <T = any>(key?: string): T => {\n  const config = loadConfig();\n  return key ? config[key] : (config as any);\n};\n\n// Set a configuration value\nconst setConfig = (key: string, value: any): void => {\n  const config = loadConfig();\n  const newConfig = { ...config, [key]: value };\n  saveConfig(newConfig);\n};\n\n// Reset configuration to defaults\nconst resetConfig = (): void => {\n  saveConfig(defaultConfig);\n};\n\n// Get cache options from config\nconst getCacheOptions = (): CacheOptions => {\n  const cacheConfig = getConfig<Config['cache']>('cache');\n  return {\n    enabled: cacheConfig.enabled,\n    ttl: cacheConfig.ttl,\n    maxSize: cacheConfig.maxSize,\n    cacheDir: path.join(CONFIG_DIR, 'cache'),\n  };\n};\n\n// Get theme configuration\nconst getTheme = (themeName?: string): Theme => {\n  const theme = themeName || getConfig<string>('theme');\n  return require('../themes').getTheme(theme);\n};\n\n// Export configuration methods\nexport const config = {\n  get: getConfig,\n  set: setConfig,\n  reset: resetConfig,\n  getTheme,\n  getCacheOptions,\n  get path() {\n    return CONFIG_FILE;\n  },\n  get dir() {\n    return CONFIG_DIR;\n  },\n};\n\n// Initialize default configuration if it doesn't exist\nensureConfigDir();\nif (!fs.existsSync(CONFIG_FILE)) {\n  saveConfig(defaultConfig);\n}\n\nexport default config;","import { cacheService, CacheService } from './cache';\nimport { config } from '../config';\nimport { logger } from './logger';\n\n// Initialize cache with config\nexport function initializeCache(): void {\n  const cacheOptions = config.getCacheOptions();\n  Object.assign(cacheService, new CacheService(cacheOptions));\n  logger.debug('Cache initialized with options:', cacheOptions);\n}\n\n// Re-initialize cache when config changes\nexport function refreshCacheConfig(): void {\n  initializeCache();\n}\n\n/**\n * Wrap a function with caching\n * \n * @param fn The function to wrap\n * @param keyGenerator Function to generate cache key from args\n * @returns Wrapped function with caching\n */\nexport function withCache<T extends (...args: any[]) => any>(\n  fn: T,\n  keyGenerator?: (...args: Parameters<T>) => string\n): (...args: Parameters<T>) => ReturnType<T> {\n  return async (...args: Parameters<T>): Promise<ReturnType<T>> => {\n    if (!config.get<Config['cache']['enabled']>('cache.enabled')) {\n      return fn(...args);\n    }\n    \n    // Generate cache key\n    const cacheKey = keyGenerator \n      ? keyGenerator(...args)\n      : cacheService.generateKey(fn.name, args);\n    \n    // Check cache\n    const cachedResult = cacheService.get(cacheKey);\n    if (cachedResult) {\n      logger.debug(`Cache hit for ${fn.name}`);\n      return cachedResult;\n    }\n    \n    // Execute function\n    const result = await fn(...args);\n    \n    // Cache result\n    cacheService.set(cacheKey, result);\n    \n    return result;\n  };\n}\n\n// Initialize cache on module load\ninitializeCache();","import { execa } from 'execa';\nimport { cacheService } from './cache';\nimport { logger } from './logger';\n\nexport interface CommandOptions {\n  /**\n   * Working directory for the command\n   */\n  cwd?: string;\n  \n  /**\n   * Environment variables for the command\n   */\n  env?: Record<string, string>;\n  \n  /**\n   * Whether to enable caching for this command\n   * Default: true\n   */\n  cache?: boolean;\n  \n  /**\n   * Cache time-to-live in milliseconds\n   * Default: 5 minutes (from cache service)\n   */\n  cacheTTL?: number;\n  \n  /**\n   * Command timeout in milliseconds\n   * Default: 60000 (1 minute)\n   */\n  timeout?: number;\n  \n  /**\n   * Whether to throw on non-zero exit code\n   * Default: true\n   */\n  throwOnError?: boolean;\n}\n\nexport interface CommandResult {\n  stdout: string;\n  stderr: string;\n  exitCode: number;\n  fromCache: boolean;\n}\n\nconst DEFAULT_OPTIONS: CommandOptions = {\n  cache: true,\n  timeout: 60000,\n  throwOnError: true,\n};\n\n/**\n * Execute a command with caching support\n * \n * @param command The command to execute\n * @param args Command arguments\n * @param options Command options\n * @returns Command result\n */\nexport async function executeCommand(\n  command: string,\n  args: string[] = [],\n  options: CommandOptions = {}\n): Promise<CommandResult> {\n  const opts = { ...DEFAULT_OPTIONS, ...options };\n  \n  // Skip cache for commands that modify state\n  const modifyingCommands = ['create', 'delete', 'deploy', 'push', 'pull', 'install', 'uninstall', 'auth'];\n  const shouldUseCache = opts.cache && \n    !args.some(arg => modifyingCommands.some(cmd => arg.includes(cmd)));\n  \n  if (shouldUseCache) {\n    const cacheKey = cacheService.generateKey(command, args);\n    const cachedResult = cacheService.get(cacheKey);\n    \n    if (cachedResult) {\n      logger.debug(`Cache hit for command: ${command} ${args.join(' ')}`);\n      return {\n        ...cachedResult,\n        fromCache: true,\n      };\n    }\n  }\n  \n  try {\n    logger.debug(`Executing command: ${command} ${args.join(' ')}`);\n    \n    const result = await execa(command, args, {\n      cwd: opts.cwd,\n      env: { ...process.env, ...opts.env },\n      timeout: opts.timeout,\n      reject: opts.throwOnError,\n    });\n    \n    const commandResult: CommandResult = {\n      stdout: result.stdout,\n      stderr: result.stderr,\n      exitCode: result.exitCode,\n      fromCache: false,\n    };\n    \n    // Cache successful results\n    if (shouldUseCache && result.exitCode === 0) {\n      const cacheKey = cacheService.generateKey(command, args);\n      cacheService.set(cacheKey, commandResult);\n    }\n    \n    return commandResult;\n  } catch (error: any) {\n    if (error.exitCode !== undefined) {\n      // This is an execa error with exit code\n      return {\n        stdout: error.stdout || '',\n        stderr: error.stderr || '',\n        exitCode: error.exitCode,\n        fromCache: false,\n      };\n    }\n    \n    // This is some other error\n    throw error;\n  }\n}\n\n/**\n * Execute a Salesforce CLI command with caching support\n * \n * @param args Command arguments\n * @param options Command options\n * @returns Command result\n */\nexport async function executeSfCommand(\n  args: string[] = [],\n  options: CommandOptions = {}\n): Promise<CommandResult> {\n  return executeCommand('sf', args, options);\n}\n\n/**\n * Invalidate cache for a specific command or command pattern\n * \n * @param command The command to invalidate cache for\n * @param args Optional arguments to include in the invalidation key\n */\nexport function invalidateCommandCache(command: string, args: string[] = []): void {\n  const cacheKey = cacheService.generateKey(command, args);\n  cacheService.invalidate(cacheKey);\n}\n\n/**\n * Clear the entire command cache\n */\nexport function clearCommandCache(): void {\n  cacheService.clear();\n}","import React, { useState } from 'react';\nimport { Box, useApp } from 'ink';\nimport { AppProvider, useAppContext } from './context/AppContext';\nimport { ThemeProvider, getTheme } from './themes';\nimport { KeyboardProvider, ShortcutAction } from './context/KeyboardShortcuts';\nimport { HelpProvider, ContextualHelp } from './context/HelpContext';\nimport { NotificationProvider, NotificationCenter } from './context/NotificationContext';\nimport Tutorial from './components/tutorial/Tutorial';\nimport MainMenu from './components/MainMenu';\nimport StatusBar from './components/common/StatusBar';\nimport HelpScreen from './components/common/HelpScreen';\nimport { ErrorProvider } from './components/common';\n\n// AppContent component that uses the context\nconst AppContent: React.FC = () => {\n  const { state, setTheme, toggleStatusBar, toggleHelp } = useAppContext();\n  const [showHelp, setShowHelp] = useState(false);\n  const { exit } = useApp();\n  \n  // Available themes in order\n  const availableThemes = ['base', 'dark', 'highContrast', 'salesforce'];\n  \n  // Action handlers for keyboard shortcuts\n  const actionHandlers: {[key in ShortcutAction]?: () => void} = {\n    help: () => setShowHelp(true),\n    quit: () => exit(),\n    toggleStatusBar: () => toggleStatusBar(),\n    toggleTheme: () => {\n      const currentIndex = availableThemes.indexOf(state.themeName);\n      const nextIndex = (currentIndex + 1) % availableThemes.length;\n      setTheme(availableThemes[nextIndex]);\n    },\n  };\n  \n  return (\n    <KeyboardProvider actionHandlers={actionHandlers}>\n      <ThemeProvider theme={state.theme}>\n        <HelpProvider>\n          <NotificationProvider>\n            <ErrorProvider position=\"top\" maxVisibleErrors={2}>\n              <Box flexDirection=\"column\" height=\"100%\">\n                <Box flexGrow={1}>\n                  <Tutorial>\n                    {showHelp ? (\n                      <HelpScreen onClose={() => setShowHelp(false)} />\n                    ) : (\n                      <>\n                        <MainMenu />\n                        <ContextualHelp />\n                        <NotificationCenter />\n                      </>\n                    )}\n                  </Tutorial>\n                </Box>\n                \n                {state.showStatusBar && (\n                  <StatusBar />\n                )}\n              </Box>\n            </ErrorProvider>\n          </NotificationProvider>\n        </HelpProvider>\n      </ThemeProvider>\n    </KeyboardProvider>\n  );\n};\n\n// Main App component that provides the context\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <AppContent />\n    </AppProvider>\n  );\n};\n\nexport default App;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { getTheme, Theme } from '../themes';\n\ninterface AppState {\n  themeName: string;\n  theme: Theme;\n  selectedOrg?: string;\n  devhubOrg?: string;\n  showStatusBar: boolean;\n  showHelp: boolean;\n}\n\ninterface AppContextType {\n  state: AppState;\n  setTheme: (themeName: string) => void;\n  setSelectedOrg: (org?: string) => void;\n  setDevhubOrg: (org?: string) => void;\n  toggleStatusBar: () => void;\n  toggleHelp: () => void;\n}\n\n// Default state\nconst defaultState: AppState = {\n  themeName: 'base',\n  theme: getTheme('base'),\n  selectedOrg: undefined,\n  devhubOrg: undefined,\n  showStatusBar: true,\n  showHelp: false,\n};\n\n// Create context with default values\nconst AppContext = createContext<AppContextType>({\n  state: defaultState,\n  setTheme: () => {},\n  setSelectedOrg: () => {},\n  setDevhubOrg: () => {},\n  toggleStatusBar: () => {},\n  toggleHelp: () => {},\n});\n\n// Provider component\nexport const AppProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [state, setState] = useState<AppState>(defaultState);\n\n  // Methods to update state\n  const setTheme = (themeName: string) => {\n    setState(prev => ({\n      ...prev,\n      themeName,\n      theme: getTheme(themeName),\n    }));\n  };\n\n  const setSelectedOrg = (org?: string) => {\n    setState(prev => ({\n      ...prev,\n      selectedOrg: org,\n    }));\n  };\n\n  const setDevhubOrg = (org?: string) => {\n    setState(prev => ({\n      ...prev,\n      devhubOrg: org,\n    }));\n  };\n\n  const toggleStatusBar = () => {\n    setState(prev => ({\n      ...prev,\n      showStatusBar: !prev.showStatusBar,\n    }));\n  };\n\n  const toggleHelp = () => {\n    setState(prev => ({\n      ...prev,\n      showHelp: !prev.showHelp,\n    }));\n  };\n\n  // Create context value\n  const contextValue: AppContextType = {\n    state,\n    setTheme,\n    setSelectedOrg,\n    setDevhubOrg,\n    toggleStatusBar,\n    toggleHelp,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Hook to use the app context\nexport const useAppContext = (): AppContextType => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n\nexport default AppContext;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useInput } from 'ink';\nimport { config } from '../config';\n\n// Define shortcut types\nexport type ShortcutAction = \n  | 'help' \n  | 'back' \n  | 'quit' \n  | 'toggleStatusBar' \n  | 'toggleTheme'\n  | 'refresh'\n  | 'save'\n  | 'create'\n  | 'delete'\n  | 'search'\n  | 'navigate';\n\nexport interface Shortcut {\n  key: string;\n  alt?: boolean;\n  ctrl?: boolean;\n  shift?: boolean;\n  description: string;\n  action: ShortcutAction;\n  global?: boolean;\n}\n\nexport interface ShortcutConfig {\n  [key: string]: Shortcut;\n}\n\ninterface KeyboardContextType {\n  shortcuts: ShortcutConfig;\n  activeShortcuts: Shortcut[];\n  registerShortcut: (id: string, shortcut: Shortcut) => void;\n  unregisterShortcut: (id: string) => void;\n  setContextShortcuts: (shortcuts: Shortcut[]) => void;\n  executeAction: (action: ShortcutAction) => void;\n}\n\n// Default global shortcuts\nconst defaultShortcuts: ShortcutConfig = {\n  'help': {\n    key: '?',\n    description: 'Show help',\n    action: 'help',\n    global: true\n  },\n  'quit': {\n    key: 'q',\n    ctrl: true,\n    description: 'Quit application',\n    action: 'quit',\n    global: true\n  },\n  'back': {\n    key: 'escape',\n    description: 'Go back',\n    action: 'back',\n    global: true\n  },\n  'toggleStatusBar': {\n    key: 's',\n    ctrl: true,\n    description: 'Toggle status bar',\n    action: 'toggleStatusBar',\n    global: true\n  },\n  'toggleTheme': {\n    key: 't',\n    ctrl: true,\n    description: 'Cycle themes',\n    action: 'toggleTheme',\n    global: true\n  }\n};\n\n// Create context\nconst KeyboardContext = createContext<KeyboardContextType>({\n  shortcuts: defaultShortcuts,\n  activeShortcuts: [],\n  registerShortcut: () => {},\n  unregisterShortcut: () => {},\n  setContextShortcuts: () => {},\n  executeAction: () => {}\n});\n\n// Action handlers must be registered by the parent component\ninterface KeyboardProviderProps {\n  children: React.ReactNode;\n  actionHandlers: {\n    [key in ShortcutAction]?: () => void;\n  };\n}\n\nexport const KeyboardProvider: React.FC<KeyboardProviderProps> = ({ \n  children, \n  actionHandlers \n}) => {\n  // Get custom shortcuts from config\n  const customShortcuts = config.get<ShortcutConfig>('keyboardShortcuts') || {};\n  \n  // Merge default shortcuts with custom ones\n  const mergedDefaultShortcuts = { ...defaultShortcuts };\n  Object.entries(customShortcuts).forEach(([action, shortcut]) => {\n    if (mergedDefaultShortcuts[action]) {\n      mergedDefaultShortcuts[action] = { \n        ...mergedDefaultShortcuts[action], \n        ...shortcut,\n        // Ensure action and description are preserved\n        action: mergedDefaultShortcuts[action].action,\n        description: mergedDefaultShortcuts[action].description\n      };\n    }\n  });\n  \n  const [shortcuts, setShortcuts] = useState<ShortcutConfig>(mergedDefaultShortcuts);\n  const [contextShortcuts, setContextShortcuts] = useState<Shortcut[]>([]);\n  \n  // Combine global shortcuts with context-specific ones\n  const activeShortcuts = [\n    ...Object.values(shortcuts).filter(s => s.global),\n    ...contextShortcuts\n  ];\n  \n  // Update shortcuts when config changes\n  useEffect(() => {\n    const updatedCustomShortcuts = config.get<ShortcutConfig>('keyboardShortcuts') || {};\n    \n    // Update shortcuts with any changed custom shortcuts\n    const updatedShortcuts = { ...shortcuts };\n    Object.entries(updatedCustomShortcuts).forEach(([action, shortcut]) => {\n      if (updatedShortcuts[action]) {\n        updatedShortcuts[action] = { \n          ...updatedShortcuts[action], \n          ...shortcut,\n          // Ensure action and description are preserved\n          action: updatedShortcuts[action].action,\n          description: updatedShortcuts[action].description\n        };\n      }\n    });\n    \n    setShortcuts(updatedShortcuts);\n  }, []);\n\n  // Register a new shortcut\n  const registerShortcut = (id: string, shortcut: Shortcut) => {\n    setShortcuts(prev => ({\n      ...prev,\n      [id]: shortcut\n    }));\n  };\n\n  // Unregister a shortcut\n  const unregisterShortcut = (id: string) => {\n    setShortcuts(prev => {\n      const newShortcuts = { ...prev };\n      delete newShortcuts[id];\n      return newShortcuts;\n    });\n  };\n\n  // Change context-specific shortcuts\n  const updateContextShortcuts = (newShortcuts: Shortcut[]) => {\n    setContextShortcuts(newShortcuts);\n  };\n\n  // Execute action for a shortcut\n  const executeAction = (action: ShortcutAction) => {\n    const handler = actionHandlers[action];\n    if (handler) {\n      handler();\n    }\n  };\n\n  // Handle keyboard input\n  useInput((input, key) => {\n    // Check if the key combination matches any active shortcuts\n    for (const shortcut of activeShortcuts) {\n      const matchesKey = \n        shortcut.key === input || \n        shortcut.key === key.name ||\n        (shortcut.key === 'escape' && key.escape);\n      \n      const matchesModifiers = \n        (shortcut.ctrl === undefined || shortcut.ctrl === key.ctrl) &&\n        (shortcut.alt === undefined || shortcut.alt === key.alt) &&\n        (shortcut.shift === undefined || shortcut.shift === key.shift);\n      \n      if (matchesKey && matchesModifiers) {\n        executeAction(shortcut.action);\n        return;\n      }\n    }\n  });\n\n  return (\n    <KeyboardContext.Provider\n      value={{\n        shortcuts,\n        activeShortcuts,\n        registerShortcut,\n        unregisterShortcut,\n        setContextShortcuts: updateContextShortcuts,\n        executeAction\n      }}\n    >\n      {children}\n    </KeyboardContext.Provider>\n  );\n};\n\n// Hook to use keyboard context\nexport const useKeyboardShortcuts = () => {\n  const context = useContext(KeyboardContext);\n  if (!context) {\n    throw new Error('useKeyboardShortcuts must be used within a KeyboardProvider');\n  }\n  return context;\n};\n\nexport default KeyboardContext;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Box, Text } from 'ink';\nimport { useInput } from 'ink';\nimport { useTheme } from '../themes';\nimport { CustomBox } from '../components/common/Box';\n\nexport interface HelpTopic {\n  id: string;\n  title: string;\n  content: string | React.ReactNode;\n  keywords: string[];\n  relatedTopics?: string[];\n}\n\ninterface HelpContextType {\n  showHelp: boolean;\n  toggleHelp: () => void;\n  currentTopic: string | null;\n  setCurrentTopic: (topicId: string | null) => void;\n  topics: HelpTopic[];\n  registerTopic: (topic: HelpTopic) => void;\n  unregisterTopic: (topicId: string) => void;\n  contextualHelp: HelpTopic[];\n  setContextualHelp: (topicIds: string[]) => void;\n}\n\nconst HelpContext = createContext<HelpContextType>({\n  showHelp: false,\n  toggleHelp: () => {},\n  currentTopic: null,\n  setCurrentTopic: () => {},\n  topics: [],\n  registerTopic: () => {},\n  unregisterTopic: () => {},\n  contextualHelp: [],\n  setContextualHelp: () => {},\n});\n\n// Predefined help topics\nconst defaultTopics: HelpTopic[] = [\n  {\n    id: 'navigation',\n    title: 'Navigation',\n    content: \n      <Box flexDirection=\"column\">\n        <Text>Navigate through the application using these keys:</Text>\n        <Text>• Arrow keys: Move through menus and lists</Text>\n        <Text>• Enter: Select an item or confirm an action</Text>\n        <Text>• Esc: Go back to the previous screen</Text>\n        <Text>• Ctrl+Q: Quit the application</Text>\n      </Box>,\n    keywords: ['navigate', 'navigation', 'menu', 'arrow', 'keys', 'back'],\n    relatedTopics: ['shortcuts']\n  },\n  {\n    id: 'shortcuts',\n    title: 'Keyboard Shortcuts',\n    content: \n      <Box flexDirection=\"column\">\n        <Text>Common keyboard shortcuts:</Text>\n        <Text>• ?: Show help</Text>\n        <Text>• Ctrl+Q: Quit application</Text>\n        <Text>• Ctrl+S: Toggle status bar</Text>\n        <Text>• Ctrl+T: Cycle through themes</Text>\n        <Text>• Ctrl+R: Refresh current view</Text>\n      </Box>,\n    keywords: ['keyboard', 'shortcuts', 'hotkeys', 'keys'],\n    relatedTopics: ['navigation']\n  },\n  {\n    id: 'orgs',\n    title: 'Managing Salesforce Orgs',\n    content: \n      <Box flexDirection=\"column\">\n        <Text>Working with Salesforce orgs:</Text>\n        <Text>• View a list of connected orgs in Org Manager</Text>\n        <Text>• Set default org or DevHub with the \"Set as Default\" option</Text>\n        <Text>• Open an org in browser with the \"Open Org\" option</Text>\n        <Text>• Log out of an org with the \"Delete Org\" option</Text>\n      </Box>,\n    keywords: ['org', 'orgs', 'salesforce', 'devhub', 'login', 'logout'],\n  },\n  {\n    id: 'metadata',\n    title: 'Working with Metadata',\n    content:\n      <Box flexDirection=\"column\">\n        <Text>Managing Salesforce metadata:</Text>\n        <Text>• Deploy metadata to an org with the \"Deploy\" option</Text>\n        <Text>• Retrieve metadata from an org with the \"Retrieve\" option</Text>\n        <Text>• Compare metadata with the \"Compare\" option</Text>\n      </Box>,\n    keywords: ['metadata', 'deploy', 'retrieve', 'compare'],\n  },\n  {\n    id: 'themes',\n    title: 'Themes',\n    content:\n      <Box flexDirection=\"column\">\n        <Text>Customizing the application appearance:</Text>\n        <Text>• Select a theme in the Settings menu</Text>\n        <Text>• Cycle through themes with Ctrl+T</Text>\n        <Text>• Available themes: Base, Dark, High Contrast, Salesforce</Text>\n      </Box>,\n    keywords: ['theme', 'themes', 'appearance', 'colors', 'dark', 'light'],\n  },\n];\n\nexport const HelpProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [showHelp, setShowHelp] = useState<boolean>(false);\n  const [currentTopic, setCurrentTopic] = useState<string | null>(null);\n  const [topics, setTopics] = useState<HelpTopic[]>(defaultTopics);\n  const [contextualHelp, setContextualHelp] = useState<HelpTopic[]>([]);\n  \n  const toggleHelp = () => {\n    setShowHelp(prev => !prev);\n    if (showHelp) {\n      setCurrentTopic(null);\n    }\n  };\n  \n  const registerTopic = (topic: HelpTopic) => {\n    setTopics(prev => {\n      // Replace if exists, otherwise add\n      const exists = prev.some(t => t.id === topic.id);\n      if (exists) {\n        return prev.map(t => t.id === topic.id ? topic : t);\n      } else {\n        return [...prev, topic];\n      }\n    });\n  };\n  \n  const unregisterTopic = (topicId: string) => {\n    setTopics(prev => prev.filter(t => t.id !== topicId));\n  };\n  \n  const updateContextualHelp = (topicIds: string[]) => {\n    const relevantTopics = topics.filter(t => topicIds.includes(t.id));\n    setContextualHelp(relevantTopics);\n  };\n  \n  // Handle ? key for help\n  useInput((input, key) => {\n    if (input === '?') {\n      toggleHelp();\n    } else if (key.escape && showHelp) {\n      if (currentTopic) {\n        setCurrentTopic(null);\n      } else {\n        setShowHelp(false);\n      }\n    }\n  });\n  \n  const contextValue = {\n    showHelp,\n    toggleHelp,\n    currentTopic,\n    setCurrentTopic,\n    topics,\n    registerTopic,\n    unregisterTopic,\n    contextualHelp,\n    setContextualHelp: updateContextualHelp,\n  };\n  \n  return (\n    <HelpContext.Provider value={contextValue}>\n      {children}\n    </HelpContext.Provider>\n  );\n};\n\n// Hook to use the help context\nexport const useHelp = () => {\n  const context = useContext(HelpContext);\n  if (!context) {\n    throw new Error('useHelp must be used within a HelpProvider');\n  }\n  return context;\n};\n\n// Contextual help component\nexport const ContextualHelp: React.FC = () => {\n  const theme = useTheme();\n  const { showHelp, toggleHelp, currentTopic, setCurrentTopic, topics, contextualHelp } = useHelp();\n  \n  if (!showHelp) return null;\n  \n  const allTopics = [...contextualHelp, ...topics.filter(t => !contextualHelp.some(ct => ct.id === t.id))];\n  \n  if (currentTopic) {\n    const topic = topics.find(t => t.id === currentTopic);\n    if (!topic) return null;\n    \n    return (\n      <CustomBox\n        title={topic.title}\n        borderStyle=\"round\"\n        borderColor={theme.colors.primary}\n        padding={1}\n      >\n        <Box flexDirection=\"column\">\n          <Box marginBottom={1}>{topic.content}</Box>\n          \n          {topic.relatedTopics && topic.relatedTopics.length > 0 && (\n            <Box flexDirection=\"column\" marginTop={1}>\n              <Text bold>Related Topics:</Text>\n              <Box>\n                {topic.relatedTopics.map((topicId, index) => {\n                  const relatedTopic = topics.find(t => t.id === topicId);\n                  if (!relatedTopic) return null;\n                  \n                  return (\n                    <Box key={topicId} marginRight={1}>\n                      <Text\n                        color={theme.colors.primary}\n                        underline\n                        onPress={() => setCurrentTopic(topicId)}\n                      >\n                        {relatedTopic.title}\n                      </Text>\n                      {index < topic.relatedTopics!.length - 1 && <Text>, </Text>}\n                    </Box>\n                  );\n                })}\n              </Box>\n            </Box>\n          )}\n          \n          <Box marginTop={1}>\n            <Text color=\"gray\" italic>Press ESC to go back</Text>\n          </Box>\n        </Box>\n      </CustomBox>\n    );\n  }\n  \n  return (\n    <CustomBox\n      title=\"Help Topics\"\n      borderStyle=\"round\"\n      borderColor={theme.colors.primary}\n      padding={1}\n    >\n      <Box flexDirection=\"column\">\n        {contextualHelp.length > 0 && (\n          <>\n            <Text bold>Contextual Help</Text>\n            <Box flexDirection=\"column\" marginY={1}>\n              {contextualHelp.map(topic => (\n                <Box key={topic.id} marginBottom={0.5}>\n                  <Text\n                    color={theme.colors.primary}\n                    underline\n                    onPress={() => setCurrentTopic(topic.id)}\n                  >\n                    {topic.title}\n                  </Text>\n                </Box>\n              ))}\n            </Box>\n          </>\n        )}\n        \n        <Text bold>All Topics</Text>\n        <Box flexDirection=\"column\" marginY={1}>\n          {allTopics.map(topic => (\n            <Box key={topic.id} marginBottom={0.5}>\n              <Text\n                color={theme.colors.primary}\n                underline\n                onPress={() => setCurrentTopic(topic.id)}\n              >\n                {topic.title}\n              </Text>\n            </Box>\n          ))}\n        </Box>\n        \n        <Box marginTop={1}>\n          <Text color=\"gray\" italic>Press ESC to close help</Text>\n        </Box>\n      </Box>\n    </CustomBox>\n  );\n};\n\nexport default HelpContext;","import React from 'react';\nimport { Box as InkBox, Text, useFocus, useInput } from 'ink';\nimport type { BoxProps as InkBoxProps } from 'ink';\nimport { useTheme } from '../../themes';\nimport { TextProps } from 'ink';\n\ntype BorderStyle = 'single' | 'double' | 'round' | 'single-double' | 'double-single' | 'classic' | 'none';\n\ntype BoxProps = {\n  title?: string;\n  titleAlign?: 'left' | 'center' | 'right';\n  borderStyle?: BorderStyle;\n  borderColor?: string;\n  padding?: number;\n  margin?: number;\n  width?: number | string;\n  height?: number | string;\n  flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n  flexGrow?: number;\n  flexShrink?: number;\n  flexBasis?: string | number;\n  alignItems?: 'flex-start' | 'center' | 'flex-end' | 'stretch';\n  justifyContent?: 'flex-start' | 'center' | 'flex-end' | 'space-between' | 'space-around';\n  children: React.ReactNode;\n  focusable?: boolean;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  onClick?: () => void;\n  style?: React.CSSProperties;\n};\n\nconst borderMap: Record<BorderStyle, [string, string, string, string, string, string, string, string]> = {\n  single: ['┌', '┐', '└', '┘', '─', '│', '├', '┤'],\n  double: ['╔', '╗', '╚', '╝', '═', '║', '╠', '╣'],\n  round: ['╭', '╮', '╰', '╯', '─', '│', '├', '┤'],\n  'single-double': ['╓', '╖', '╙', '╜', '─', '║', '╟', '╢'],\n  'double-single': ['╒', '╕', '╘', '╛', '═', '│', '╞', '╡'],\n  classic: ['+', '+', '+', '+', '-', '|', '+', '+'],\n  none: [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n};\n\nexport const CustomBox: React.FC<BoxProps> = ({\n  title,\n  titleAlign = 'left',\n  borderStyle = 'single',\n  borderColor,\n  padding = 1,\n  margin = 0,\n  width,\n  height,\n  flexDirection = 'column',\n  flexGrow,\n  flexShrink,\n  flexBasis,\n  alignItems = 'stretch',\n  justifyContent = 'flex-start',\n  children,\n  focusable = false,\n  onFocus,\n  onBlur,\n  onClick,\n  style = {},\n}) => {\n  const theme = useTheme();\n  const { isFocused } = useFocus({ isActive: focusable, autoFocus: false });\n  \n  // Handle click events\n  useInput((input, key) => {\n    if (focusable && isFocused && (input === ' ' || key.return) && onClick) {\n      onClick();\n    }\n  }, { isActive: focusable });\n  \n  // Determine border characters based on style\n  const [tl, tr, bl, br, h, v, l, r] = borderMap[borderStyle] || borderMap.single;\n  \n  // Calculate border color\n  const borderColorValue = borderColor || (isFocused ? theme.colors.primary : theme.colors.border);\n  \n  // Calculate content width based on children\n  const calculateContentWidth = () => {\n    if (typeof width === 'number') {\n      return width - 2; // Adjust for borders\n    }\n    \n    if (typeof width === 'string') {\n      // Handle percentage widths or other string formats\n      return width;\n    }\n    \n    // Estimate content width based on children\n    // This is a simplified approach; in a real app, you'd measure actual content\n    const childrenText = React.Children.toArray(children)\n      .map(child => {\n        if (typeof child === 'string') return child;\n        if (typeof child === 'number') return String(child);\n        return '';\n      })\n      .join('');\n    \n    // Get maximum line length\n    const lines = childrenText.split('\\n');\n    const maxLineLength = lines.reduce((max, line) => \n      Math.max(max, line.length), 0);\n    \n    // Return dynamic width with minimum of 30\n    return Math.max(30, maxLineLength + padding * 2);\n  };\n  \n  const contentWidth = calculateContentWidth();\n  \n  // Calculate title position\n  const renderTitle = () => {\n    if (!title) return null;\n    \n    const titleText = ` ${title} `;\n    const titleWidth = titleText.length;\n    \n    let titlePosition = 2; // Default left padding\n    const boxWidth = typeof contentWidth === 'number' ? contentWidth : 30;\n    \n    if (titleAlign === 'center') {\n      titlePosition = Math.max(2, Math.floor((boxWidth - titleWidth) / 2));\n    } else if (titleAlign === 'right') {\n      titlePosition = Math.max(2, boxWidth - titleWidth - 2);\n    }\n    \n    return (\n      <Text>\n        {h.repeat(titlePosition)}\n        <Text bold color={isFocused ? theme.colors.primary : theme.colors.text}>\n          {titleText}\n        </Text>\n        {h.repeat(Math.max(0, boxWidth - titlePosition - titleWidth))}\n      </Text>\n    );\n  };\n  \n  // Calculate content padding\n  const contentPadding = typeof padding === 'number' ? \n    { left: padding, right: padding, top: padding, bottom: padding } :\n    { left: 0, right: 0, top: 0, bottom: 0, ...padding };\n  \n  // Calculate margin\n  const marginStyle = typeof margin === 'number' ? \n    { marginLeft: margin, marginRight: margin, marginTop: margin, marginBottom: margin } :\n    { marginLeft: 0, marginRight: 0, marginTop: 0, marginBottom: 0, ...margin };\n  \n  // Calculate border styles\n  const borderStyles: React.CSSProperties = {\n    borderStyle: 'solid',\n    borderColor: borderColorValue,\n    borderLeft: isFocused ? `1 ${theme.colors.primary}` : `1 ${theme.colors.border}`,\n    borderRight: isFocused ? `1 ${theme.colors.primary}` : `1 ${theme.colors.border}`,\n    borderTop: isFocused ? `1 ${theme.colors.primary}` : `1 ${theme.colors.border}`,\n    borderBottom: isFocused ? `1 ${theme.colors.primary}` : `1 ${theme.colors.border}`,\n    ...style,\n  };\n  \n  return (\n    <InkBox \n      flexDirection=\"column\" \n      width={width}\n      height={height}\n      flexGrow={flexGrow}\n      flexShrink={flexShrink}\n      flexBasis={flexBasis}\n      {...marginStyle}\n    >\n      {/* Top border with title */}\n      <Text>\n        <Text color={borderColorValue}>{tl}</Text>\n        {title ? renderTitle() : <Text color={borderColorValue}>{h.repeat(typeof contentWidth === 'number' ? contentWidth : 30)}</Text>}\n        <Text color={borderColorValue}>{tr}</Text>\n      </Text>\n      \n      {/* Content */}\n      <InkBox \n        flexDirection={flexDirection}\n        alignItems={alignItems}\n        justifyContent={justifyContent}\n        paddingLeft={contentPadding.left}\n        paddingRight={contentPadding.right}\n        paddingTop={contentPadding.top}\n        paddingBottom={contentPadding.bottom}\n      >\n        {children}\n      </InkBox>\n      \n      {/* Bottom border */}\n      <Text>\n        <Text color={borderColorValue}>{bl}</Text>\n        <Text color={borderColorValue}>{h.repeat(typeof contentWidth === 'number' ? contentWidth : 30)}</Text>\n        <Text color={borderColorValue}>{br}</Text>\n      </Text>\n    </InkBox>\n  );\n};\n\n// BorderBox is a variant of CustomBox used for Tables and other components\nexport const BorderBox: React.FC<BoxProps> = (props) => {\n  return <CustomBox {...props} />;\n};\n\nexport default CustomBox;\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Box, Text } from 'ink';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useTheme } from '../themes';\nimport { Transition } from '../components/common';\n\n// Notification types\nexport type NotificationType = 'success' | 'error' | 'warning' | 'info' | 'progress';\n\nexport interface Notification {\n  id: string;\n  type: NotificationType;\n  title: string;\n  message: string;\n  autoDismiss?: boolean;\n  dismissAfter?: number; // ms\n  progress?: number;\n  maxProgress?: number;\n  createdAt: Date;\n  onDismiss?: () => void;\n  actions?: Array<{\n    label: string;\n    action: () => void;\n  }>;\n}\n\n// Context type\ninterface NotificationContextType {\n  notifications: Notification[];\n  showNotification: (notification: Omit<Notification, 'id' | 'createdAt'>) => string;\n  updateNotification: (id: string, updates: Partial<Notification>) => void;\n  dismissNotification: (id: string) => void;\n  dismissAll: () => void;\n}\n\n// Create context\nconst NotificationContext = createContext<NotificationContextType>({\n  notifications: [],\n  showNotification: () => '',\n  updateNotification: () => {},\n  dismissNotification: () => {},\n  dismissAll: () => {},\n});\n\n// Provider component\nexport const NotificationProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [visibleNotifications, setVisibleNotifications] = useState<string[]>([]);\n\n  // Show a new notification\n  const showNotification = (notification: Omit<Notification, 'id' | 'createdAt'>) => {\n    const id = uuidv4();\n    const newNotification: Notification = {\n      ...notification,\n      id,\n      createdAt: new Date(),\n    };\n    \n    setNotifications(prev => [...prev, newNotification]);\n    setVisibleNotifications(prev => [...prev, id]);\n    \n    // Auto-dismiss if enabled\n    if (notification.autoDismiss) {\n      const timeout = notification.dismissAfter || 5000;\n      setTimeout(() => {\n        dismissNotification(id);\n      }, timeout);\n    }\n    \n    return id;\n  };\n\n  // Update an existing notification\n  const updateNotification = (id: string, updates: Partial<Notification>) => {\n    setNotifications(prev => \n      prev.map(notification => \n        notification.id === id ? { ...notification, ...updates } : notification\n      )\n    );\n  };\n\n  // Dismiss a notification\n  const dismissNotification = (id: string) => {\n    // Trigger onDismiss callback if exists\n    const notification = notifications.find(n => n.id === id);\n    if (notification?.onDismiss) {\n      notification.onDismiss();\n    }\n    \n    // Remove from visible notifications\n    setVisibleNotifications(prev => prev.filter(notificationId => notificationId !== id));\n    \n    // Remove after animation completes\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(notification => notification.id !== id));\n    }, 300);\n  };\n\n  // Dismiss all notifications\n  const dismissAll = () => {\n    notifications.forEach(notification => {\n      if (notification.onDismiss) {\n        notification.onDismiss();\n      }\n    });\n    \n    setVisibleNotifications([]);\n    setTimeout(() => {\n      setNotifications([]);\n    }, 300);\n  };\n\n  return (\n    <NotificationContext.Provider value={{\n      notifications,\n      showNotification,\n      updateNotification,\n      dismissNotification,\n      dismissAll,\n    }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\n// Hook to use notifications\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotifications must be used within a NotificationProvider');\n  }\n  return context;\n};\n\n// Notification renderer component\nexport const NotificationCenter: React.FC = () => {\n  const { notifications, dismissNotification } = useNotifications();\n  const [visibleNotifications, setVisibleNotifications] = useState<string[]>([]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    // Update the list of visible notifications based on new notifications\n    setVisibleNotifications(prevVisible => {\n      const currentIds = notifications.map(n => n.id);\n      return [...prevVisible.filter(id => currentIds.includes(id)), ...currentIds.filter(id => !prevVisible.includes(id))];\n    });\n  }, [notifications]);\n\n  // Get notification color based on type\n  const getNotificationColor = (type: NotificationType) => {\n    switch (type) {\n      case 'success':\n        return theme.colors.success;\n      case 'error':\n        return theme.colors.error;\n      case 'warning':\n        return theme.colors.warning;\n      case 'info':\n        return theme.colors.info;\n      case 'progress':\n        return theme.colors.primary;\n      default:\n        return theme.colors.text;\n    }\n  };\n\n  // Get notification icon based on type\n  const getNotificationIcon = (type: NotificationType) => {\n    switch (type) {\n      case 'success':\n        return '✓';\n      case 'error':\n        return '✗';\n      case 'warning':\n        return '⚠';\n      case 'info':\n        return 'ℹ';\n      case 'progress':\n        return '⟳';\n      default:\n        return '•';\n    }\n  };\n\n  // Render a single notification\n  const renderNotification = (notification: Notification) => {\n    const { id, type, title, message, progress, maxProgress, actions } = notification;\n    const color = getNotificationColor(type);\n    const icon = getNotificationIcon(type);\n    const isVisible = visibleNotifications.includes(id);\n\n    // For progress notifications\n    const showProgress = type === 'progress' && typeof progress === 'number';\n    const progressPercentage = showProgress \n      ? Math.round((progress / (maxProgress || 100)) * 100) \n      : 0;\n    \n    return (\n      <Transition\n        key={id}\n        type=\"slide-left\"\n        duration={300}\n        visible={isVisible}\n      >\n        <Box\n          flexDirection=\"column\"\n          borderStyle=\"round\"\n          borderColor={color}\n          marginY={1}\n          padding={1}\n          width={60}\n        >\n          <Box>\n            <Text color={color}>{icon} </Text>\n            <Text bold>{title}</Text>\n            <Box flexGrow={1} />\n            <Text color={theme.colors.textMuted} onPress={() => dismissNotification(id)}>×</Text>\n          </Box>\n          \n          <Box marginY={1}>\n            <Text>{message}</Text>\n          </Box>\n          \n          {showProgress && (\n            <Box marginY={1}>\n              <Box width={50}>\n                <Text color={color}>\n                  {Array(Math.floor(progressPercentage / 2)).fill('█').join('')}\n                  {Array(50 - Math.floor(progressPercentage / 2)).fill('░').join('')}\n                </Text>\n              </Box>\n              <Box marginLeft={1}>\n                <Text>{progressPercentage}%</Text>\n              </Box>\n            </Box>\n          )}\n          \n          {actions && actions.length > 0 && (\n            <Box marginTop={1}>\n              {actions.map((action, index) => (\n                <Box key={index} marginRight={2}>\n                  <Text \n                    color={theme.colors.primary} \n                    underline \n                    onPress={action.action}\n                  >\n                    {action.label}\n                  </Text>\n                </Box>\n              ))}\n            </Box>\n          )}\n        </Box>\n      </Transition>\n    );\n  };\n\n  return (\n    <Box flexDirection=\"column\" position=\"absolute\" right={1} top={1} width={60}>\n      {notifications.map(renderNotification)}\n    </Box>\n  );\n};\n\nexport default NotificationContext;","import React, { useState, useEffect, useCallback } from 'react';\nimport { Text, useInput, Box } from 'ink';\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder?: string;\n  onSubmit?: (value: string) => void;\n  focus?: boolean;\n  mask?: string;\n  showCursor?: boolean;\n  highlightPastedText?: boolean;\n  validate?: (value: string) => boolean | string;\n  width?: number;\n  multiline?: boolean;\n};\n\nexport const TextInput = ({\n  value: originalValue,\n  onChange,\n  placeholder = '',\n  onSubmit,\n  focus: customFocus = true,\n  mask,\n  showCursor = true,\n  validate,\n  width,\n  multiline = false,\n}: Props) => {\n  const [cursorOffset, setCursorOffset] = useState(originalValue.length);\n  const [validationError, setValidationError] = useState<string | null>(null);\n  const [focus, setFocus] = useState(customFocus);\n  const [temporaryValue, setTemporaryValue] = useState(originalValue);\n  \n  // Handle external value changes\n  useEffect(() => {\n    setTemporaryValue(originalValue);\n    setCursorOffset(originalValue.length);\n  }, [originalValue]);\n  \n  // Handle validation\n  useEffect(() => {\n    if (validate) {\n      const validationResult = validate(temporaryValue);\n      if (validationResult === false) {\n        setValidationError('Invalid input');\n      } else if (typeof validationResult === 'string') {\n        setValidationError(validationResult);\n      } else {\n        setValidationError(null);\n      }\n    }\n  }, [temporaryValue, validate]);\n  \n  // Handle cursor position\n  const handleInput = useCallback((input: string, key: any) => {\n    if (key.upArrow || key.downArrow || (key.ctrl && input === 'c') || key.escape) {\n      return;\n    }\n    \n    let newValue = temporaryValue;\n    let newCursorOffset = cursorOffset;\n    \n    if (key.return) {\n      if (onSubmit && (!validate || !validationError)) {\n        onSubmit(temporaryValue);\n      }\n      return;\n    }\n    \n    if (key.leftArrow) {\n      if (key.ctrl) {\n        // Move to the beginning of the previous word\n        const words = temporaryValue.split(/\\s+/);\n        let currentPos = 0;\n        for (let i = 0; i < words.length; i++) {\n          if (currentPos + words[i].length >= cursorOffset) {\n            if (i > 0) {\n              newCursorOffset = temporaryValue.indexOf(words[i - 1]);\n            } else {\n              newCursorOffset = 0;\n            }\n            break;\n          }\n          currentPos += words[i].length + 1; // +1 for the space\n        }\n      } else {\n        newCursorOffset = Math.max(0, cursorOffset - 1);\n      }\n    } else if (key.rightArrow) {\n      if (key.ctrl) {\n        // Move to the beginning of the next word\n        const words = temporaryValue.split(/\\s+/);\n        let currentPos = 0;\n        for (let i = 0; i < words.length; i++) {\n          currentPos += words[i].length;\n          if (currentPos > cursorOffset) {\n            newCursorOffset = Math.min(temporaryValue.length, currentPos + 1);\n            break;\n          }\n          currentPos += 1; // for the space\n        }\n      } else {\n        newCursorOffset = Math.min(temporaryValue.length, cursorOffset + 1);\n      }\n    } else if (key.delete) {\n      // Delete forward\n      newValue = \n        temporaryValue.slice(0, cursorOffset) + \n        temporaryValue.slice(cursorOffset + 1);\n    } else if (key.backspace || key.delete) {\n      // Delete backward\n      if (cursorOffset > 0) {\n        newValue = \n          temporaryValue.slice(0, cursorOffset - 1) + \n          temporaryValue.slice(cursorOffset);\n        newCursorOffset = cursorOffset - 1;\n      }\n    } else if (key.home) {\n      newCursorOffset = 0;\n    } else if (key.end) {\n      newCursorOffset = temporaryValue.length;\n    } else if (\n      input.length > 0 &&\n      !key.ctrl &&\n      !key.meta &&\n      !key.alt\n    ) {\n      // Insert text at cursor position\n      newValue = \n        temporaryValue.slice(0, cursorOffset) + \n        input + \n        temporaryValue.slice(cursorOffset);\n      newCursorOffset = cursorOffset + input.length;\n    }\n    \n    if (newValue !== temporaryValue) {\n      setTemporaryValue(newValue);\n      onChange(newValue);\n    }\n    \n    if (newCursorOffset !== cursorOffset) {\n      setCursorOffset(newCursorOffset);\n    }\n  }, [temporaryValue, cursorOffset, onChange, onSubmit, validate, validationError]);\n  \n  useInput(handleInput, { isActive: focus });\n  \n  // Handle focus changes\n  useEffect(() => {\n    setFocus(customFocus);\n  }, [customFocus]);\n  \n  // Calculate cursor position and visible text\n  const displayValue = mask ? mask.repeat(temporaryValue.length) : temporaryValue;\n  const cursorChar = '█';\n  \n  // Split the value into before and after the cursor\n  const beforeCursor = displayValue.slice(0, cursorOffset);\n  const afterCursor = displayValue.slice(cursorOffset);\n  \n  // Calculate the visible part of the input if width is constrained\n  let visibleBeforeCursor = beforeCursor;\n  let visibleAfterCursor = afterCursor;\n  \n  if (width) {\n    const maxVisible = Math.max(0, width - 1); // Leave space for cursor\n    \n    if (beforeCursor.length > maxVisible) {\n      visibleBeforeCursor = '…' + beforeCursor.slice(-maxVisible + 1);\n    }\n    \n    if (afterCursor.length + visibleBeforeCursor.length > maxVisible) {\n      const remainingSpace = Math.max(0, maxVisible - visibleBeforeCursor.length - 1);\n      visibleAfterCursor = afterCursor.slice(0, remainingSpace) + (afterCursor.length > remainingSpace ? '…' : '');\n    }\n  }\n  \n  // Render the input field with cursor\n  return (\n    <Box flexDirection=\"column\">\n      <Box>\n        <Text>{visibleBeforeCursor}</Text>\n        {focus && showCursor && (\n          <Text inverse>{cursorChar || ' '}</Text>\n        )}\n        <Text>{visibleAfterCursor || (focus && showCursor ? ' ' : '')}</Text>\n        {!visibleBeforeCursor && !visibleAfterCursor && !focus && (\n          <Text dimColor>{placeholder}</Text>\n        )}\n      </Box>\n      {validationError && (\n        <Text color=\"red\">{validationError}</Text>\n      )}\n    </Box>\n  );\n};\n\nexport default TextInput;\n","import React, { useCallback } from 'react';\nimport { Text, useFocus, useInput, Box } from 'ink';\nimport { useTheme } from '../../themes';\nimport { \n  ButtonVariant, \n  getButtonColorScheme, \n  getButtonStyles, \n  getButtonTextStyles \n} from '../../themes/buttonStyles';\n\ntype ButtonProps = {\n  /**\n   * Button text to display\n   */\n  children: React.ReactNode;\n  \n  /**\n   * Button variant that determines the color scheme\n   * @default 'default'\n   */\n  variant?: ButtonVariant;\n  \n  /**\n   * Whether the button is disabled\n   * @default false\n   */\n  disabled?: boolean;\n  \n  /**\n   * Whether the button should take up the full width of its container\n   * @default false\n   */\n  fullWidth?: boolean;\n  \n  /**\n   * Whether the button should show a loading state\n   * @default false\n   */\n  loading?: boolean;\n  \n  /**\n   * Whether the button should be focusable\n   * @default true\n   */\n  focusable?: boolean;\n  \n  /**\n   * Callback when the button is clicked or activated with keyboard\n   */\n  onPress?: () => void;\n  \n  /**\n   * Additional styles to apply to the button\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Additional props to pass to the underlying Box component\n   */\n  boxProps?: React.ComponentProps<typeof Box>;\n};\n\n/**\n * A customizable button component for the TUI\n */\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  variant = 'default',\n  disabled = false,\n  fullWidth = false,\n  loading = false,\n  focusable = true,\n  onPress,\n  style = {},\n  boxProps = {},\n}) => {\n  const theme = useTheme();\n  const { isFocused } = useFocus({ \n    isActive: focusable && !disabled && !loading, \n    autoFocus: false \n  });\n  \n  // Handle button press (click or enter/space)\n  useInput(\n    (input, key) => {\n      if ((input === ' ' || key.return) && onPress && !disabled && !loading) {\n        onPress();\n      }\n    },\n    { isActive: focusable && !disabled && !loading }\n  );\n  \n  // Get button color scheme from theme\n  const colorScheme = getButtonColorScheme(theme, variant);\n  \n  // Get computed styles based on state\n  const buttonStyles = getButtonStyles(\n    colorScheme,\n    isFocused,\n    disabled,\n    loading,\n    style\n  );\n  \n  const textStyles = getButtonTextStyles(\n    colorScheme,\n    isFocused,\n    disabled,\n    loading\n  );\n  \n  return (\n    <Box\n      {...boxProps}\n      width={fullWidth ? '100%' : boxProps.width}\n      flexGrow={fullWidth ? 1 : boxProps.flexGrow}\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      style={buttonStyles}\n    >\n      {loading ? (\n        <Text {...textStyles}>\n          <Text>⏳ </Text>\n          <Text>Loading...</Text>\n        </Text>\n      ) : (\n        <Text {...textStyles}>\n          {isFocused && '> '}\n          {children}\n          {isFocused && ' <'}\n        </Text>\n      )}\n    </Box>\n  );\n};\n\nexport default Button;","import { Theme } from '.';\n\nexport interface ButtonColorScheme {\n  text: string;\n  background: string;\n  border: string;\n  hoverText: string;\n  hoverBackground: string;\n  activeBackground: string;\n  disabledText: string;\n  disabledBackground: string;\n  disabledBorder: string;\n}\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info' | 'default';\n\n/**\n * Generate button color schemes based on theme and variant\n */\nexport const getButtonColorScheme = (\n  theme: Theme,\n  variant: ButtonVariant\n): ButtonColorScheme => {\n  // Default color scheme\n  const defaultColorScheme: ButtonColorScheme = {\n    text: theme.colors.text,\n    background: theme.colors.background,\n    border: theme.colors.border,\n    hoverText: theme.colors.text,\n    hoverBackground: theme.colors.backgroundHover,\n    activeBackground: theme.colors.highlight,\n    disabledText: theme.colors.textMuted,\n    disabledBackground: theme.colors.background,\n    disabledBorder: theme.colors.border,\n  };\n\n  // Color schemes for each variant\n  const colorSchemes: Record<ButtonVariant, ButtonColorScheme> = {\n    default: defaultColorScheme,\n    primary: createColorScheme(theme.colors.primary),\n    secondary: createColorScheme(theme.colors.secondary),\n    success: createColorScheme(theme.colors.success),\n    warning: createColorScheme(theme.colors.warning),\n    error: createColorScheme(theme.colors.error),\n    info: createColorScheme(theme.colors.info),\n  };\n\n  return colorSchemes[variant] || defaultColorScheme;\n\n  // Helper function to create color schemes for non-default variants\n  function createColorScheme(baseColor: string): ButtonColorScheme {\n    return {\n      text: theme.colors.textInverse,\n      background: baseColor,\n      border: baseColor,\n      hoverText: theme.colors.textInverse,\n      hoverBackground: baseColor,\n      activeBackground: baseColor,\n      disabledText: theme.colors.textInverse,\n      disabledBackground: theme.colors.textMuted,\n      disabledBorder: theme.colors.textMuted,\n    };\n  }\n};\n\n/**\n * Generate button styles based on state\n */\nexport const getButtonStyles = (\n  colorScheme: ButtonColorScheme,\n  isFocused: boolean,\n  isDisabled: boolean,\n  isLoading: boolean,\n  customStyle: React.CSSProperties = {}\n): React.CSSProperties => {\n  const baseStyles: React.CSSProperties = {\n    paddingLeft: 2,\n    paddingRight: 2,\n    paddingTop: 0,\n    paddingBottom: 0,\n    height: 3,\n    minWidth: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderStyle: 'single',\n    borderColor: colorScheme.border,\n    backgroundColor: colorScheme.background,\n    ...customStyle,\n  };\n  \n  if (isDisabled || isLoading) {\n    return {\n      ...baseStyles,\n      borderColor: colorScheme.disabledBorder,\n      backgroundColor: colorScheme.disabledBackground,\n      opacity: 0.7,\n    };\n  }\n  \n  if (isFocused) {\n    return {\n      ...baseStyles,\n      backgroundColor: colorScheme.hoverBackground,\n      borderColor: colorScheme.border,\n      borderStyle: 'double',\n    };\n  }\n  \n  return baseStyles;\n};\n\n/**\n * Generate text styles based on button state\n */\nexport const getButtonTextStyles = (\n  colorScheme: ButtonColorScheme,\n  isFocused: boolean,\n  isDisabled: boolean,\n  isLoading: boolean\n): React.CSSProperties => {\n  const baseStyles: React.CSSProperties = {\n    color: colorScheme.text,\n  };\n  \n  if (isDisabled || isLoading) {\n    return {\n      ...baseStyles,\n      color: colorScheme.disabledText,\n    };\n  }\n  \n  if (isFocused) {\n    return {\n      ...baseStyles,\n      color: colorScheme.hoverText,\n      bold: true,\n    };\n  }\n  \n  return baseStyles;\n};","import React, { useEffect, useState } from 'react';\nimport { Text } from 'ink';\nimport { useTheme } from '../../themes';\n\ntype SpinnerType = 'dots' | 'line' | 'bounce' | 'arc' | 'arrow' | 'clock' | 'earth' | 'moon' | 'runner' | 'weather';\n\ntype SpinnerProps = {\n  /**\n   * Type of spinner animation\n   * @default 'dots'\n   */\n  type?: SpinnerType;\n  \n  /**\n   * Label to display next to the spinner\n   */\n  label?: string;\n  \n  /**\n   * Color of the spinner\n   * @default theme.colors.primary\n   */\n  color?: string;\n  \n  /**\n   * Whether the spinner is active\n   * @default true\n   */\n  isActive?: boolean;\n  \n  /**\n   * Speed of the spinner in milliseconds\n   * @default 100\n   */\n  speed?: number;\n};\n\n// Spinner frames for different types\nconst SPINNERS: Record<SpinnerType, string[]> = {\n  dots: ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏'],\n  line: ['-', '\\\\', '|', '/'],\n  bounce: ['⠁', '⠂', '⠄', '⠂'],\n  arc: ['◜', '◠', '◝', '◞', '◡', '◟'],\n  arrow: ['←', '↖', '↑', '↗', '→', '↘', '↓', '↙'],\n  clock: ['🕛', '🕐', '🕑', '🕒', '🕓', '🕔', '🕕', '🕖', '🕗', '🕘', '🕙', '🕚'],\n  earth: ['🌍', '🌎', '🌏'],\n  moon: ['🌑', '🌒', '🌓', '🌔', '🌕', '🌖', '🌗', '🌘'],\n  runner: ['🚶', '🏃'],\n  weather: ['☀️', '☀️', '☀️', '🌤️', '⛅', '🌥️', '☁️', '🌧️', '⛈️', '🌩️', '🌨️', '❄️'],\n};\n\n/**\n * A loading spinner component with multiple animation styles\n */\nconst Spinner: React.FC<SpinnerProps> = ({\n  type = 'dots',\n  label = '',\n  color,\n  isActive = true,\n  speed = 100,\n}) => {\n  const theme = useTheme();\n  const [frame, setFrame] = useState(0);\n  const spinnerFrames = SPINNERS[type] || SPINNERS.dots;\n  const spinnerColor = color || theme.colors.primary;\n  \n  // Animate the spinner\n  useEffect(() => {\n    if (!isActive) return;\n    \n    const timer = setInterval(() => {\n      setFrame((prevFrame) => (prevFrame + 1) % spinnerFrames.length);\n    }, speed);\n    \n    return () => {\n      clearInterval(timer);\n    };\n  }, [isActive, speed, spinnerFrames.length]);\n  \n  if (!isActive) {\n    return null;\n  }\n  \n  return (\n    <Text>\n      <Text color={spinnerColor}>\n        {spinnerFrames[frame]}\n      </Text>\n      {label && <Text> {label}</Text>}\n    </Text>\n  );\n};\n\nexport default Spinner;\n","import React, { useMemo } from 'react';\nimport { Box, Text, useFocus, useInput } from 'ink';\nimport { useTheme } from '../../themes';\n\ntype Tab = {\n  id: string;\n  label: string;\n  icon?: string;\n  disabled?: boolean;\n};\n\ntype TabsProps = {\n  /**\n   * Array of tab objects with id and label\n   */\n  tabs: Tab[];\n  \n  /**\n   * Currently active tab ID\n   */\n  activeTab: string;\n  \n  /**\n   * Callback when a tab is selected\n   */\n  onTabChange: (tabId: string) => void;\n  \n  /**\n   * Whether the tabs are focusable\n   * @default true\n   */\n  focusable?: boolean;\n  \n  /**\n   * Whether to show a border around the tabs\n   * @default true\n   */\n  bordered?: boolean;\n  \n  /**\n   * Additional styles for the tabs container\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Additional props for the tabs container\n   */\n  boxProps?: React.ComponentProps<typeof Box>;\n};\n\n/**\n * A tabbed navigation component for the TUI\n */\nconst Tabs: React.FC<TabsProps> = ({\n  tabs,\n  activeTab,\n  onTabChange,\n  focusable = true,\n  bordered = true,\n  style = {},\n  boxProps = {},\n}) => {\n  const theme = useTheme();\n  const { isFocused } = useFocus({ \n    isActive: focusable, \n    autoFocus: false \n  });\n  \n  // Find the active tab index\n  const activeIndex = useMemo(() => {\n    return Math.max(0, tabs.findIndex(tab => tab.id === activeTab));\n  }, [tabs, activeTab]);\n  \n  // Handle keyboard navigation\n  useInput(\n    (input, key) => {\n      if (!focusable) return;\n      \n      if (key.leftArrow) {\n        // Move to the previous tab\n        const prevIndex = (activeIndex - 1 + tabs.length) % tabs.length;\n        onTabChange(tabs[prevIndex].id);\n      } else if (key.rightArrow) {\n        // Move to the next tab\n        const nextIndex = (activeIndex + 1) % tabs.length;\n        onTabChange(tabs[nextIndex].id);\n      } else if (key.return || key.space) {\n        // Activate the focused tab\n        onTabChange(tabs[activeIndex].id);\n      } else if (key.tab) {\n        // Handle tab key to cycle through tabs\n        const direction = key.shift ? -1 : 1;\n        const nextIndex = (activeIndex + direction + tabs.length) % tabs.length;\n        onTabChange(tabs[nextIndex].id);\n      }\n    },\n    { isActive: focusable }\n  );\n  \n  // Calculate tab styles\n  const getTabStyles = (tab: Tab, index: number) => {\n    const isActive = tab.id === activeTab;\n    const isFocusedTab = isFocused && index === activeIndex;\n    \n    const baseStyles: React.CSSProperties = {\n      paddingLeft: 2,\n      paddingRight: 2,\n      paddingTop: 0,\n      paddingBottom: 0,\n      height: 3,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderStyle: 'single',\n      borderColor: isActive ? theme.colors.primary : theme.colors.border,\n      borderTop: true,\n      borderLeft: true,\n      borderRight: true,\n      borderBottom: !isActive,\n      backgroundColor: isActive ? theme.colors.primary : theme.colors.background,\n      marginRight: 1,\n    };\n    \n    if (isFocusedTab) {\n      baseStyles.borderStyle = 'round';\n      baseStyles.borderColor = theme.colors.primary;\n    }\n    \n    if (tab.disabled) {\n      baseStyles.opacity = 0.5;\n      baseStyles.borderColor = theme.colors.border;\n      baseStyles.backgroundColor = theme.colors.backgroundHover;\n    }\n    \n    return baseStyles;\n  };\n  \n  // Calculate tab text styles\n  const getTabTextStyles = (tab: Tab, index: number) => {\n    const isActive = tab.id === activeTab;\n    const isFocusedTab = isFocused && index === activeIndex;\n    \n    const baseStyles: React.CSSProperties = {\n      color: isActive ? theme.colors.textInverse : theme.colors.text,\n    };\n    \n    if (isFocusedTab) {\n      baseStyles.underline = true;\n      baseStyles.bold = true;\n    }\n    \n    if (tab.disabled) {\n      baseStyles.color = theme.colors.textMuted;\n    }\n    \n    return baseStyles;\n  };\n  \n  return (\n    <Box \n      flexDirection=\"column\"\n      {...boxProps}\n      style={{\n        borderStyle: bordered ? 'single' : 'none',\n        borderColor: theme.colors.border,\n        paddingLeft: 1,\n        paddingRight: 1,\n        paddingTop: 0,\n        paddingBottom: 0,\n        ...style,\n      }}\n    >\n      <Box flexDirection=\"row\" marginBottom={0}>\n        {tabs.map((tab, index) => (\n          <Box\n            key={tab.id}\n            onClick={() => !tab.disabled && onTabChange(tab.id)}\n            style={getTabStyles(tab, index)}\n          >\n            <Text {...getTabTextStyles(tab, index)}>\n              {tab.icon && <Text>{tab.icon} </Text>}\n              {tab.label}\n            </Text>\n          </Box>\n        ))}\n      </Box>\n      \n      {/* Active tab content */}\n      <Box \n        borderStyle=\"single\"\n        borderColor={theme.colors.border}\n        borderTop={false}\n        padding={1}\n      >\n        {tabs.find(tab => tab.id === activeTab)?.content}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Tabs;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Text } from 'ink';\nimport { useTheme } from '../../themes';\nimport Spinner from './Spinner';\n\ntype NotificationType = 'info' | 'success' | 'warning' | 'error' | 'loading';\n\ntype NotificationProps = {\n  /**\n   * The type of notification to display\n   * @default 'info'\n   */\n  type?: NotificationType;\n  \n  /**\n   * The notification message to display\n   */\n  message: string | React.ReactNode;\n  \n  /**\n   * Optional title for the notification\n   */\n  title?: string;\n  \n  /**\n   * Whether the notification should be dismissible\n   * @default false\n   */\n  dismissible?: boolean;\n  \n  /**\n   * Callback when the notification is dismissed\n   */\n  onDismiss?: () => void;\n  \n  /**\n   * Time in milliseconds after which the notification will auto-dismiss\n   * Set to 0 to disable auto-dismiss\n   * @default 5000\n   */\n  autoDismiss?: number;\n  \n  /**\n   * Additional styles for the notification container\n   */\n  style?: React.CSSProperties;\n};\n\n/**\n * A notification component to display messages to the user\n */\nconst Notification: React.FC<NotificationProps> = ({\n  type = 'info',\n  message,\n  title,\n  dismissible = false,\n  onDismiss,\n  autoDismiss = 5000,\n  style = {},\n}) => {\n  const theme = useTheme();\n  const [isVisible, setIsVisible] = useState(true);\n  \n  // Icons for different notification types\n  const icons = {\n    info: 'ℹ️',\n    success: '✅',\n    warning: '⚠️',\n    error: '❌',\n    loading: '⏳',\n  };\n  \n  // Colors for different notification types\n  const colors = {\n    info: theme.colors.info,\n    success: theme.colors.success,\n    warning: theme.colors.warning,\n    error: theme.colors.error,\n    loading: theme.colors.primary,\n  };\n  \n  // Handle auto-dismiss\n  useEffect(() => {\n    if (!isVisible || !autoDismiss || type === 'loading') return;\n    \n    const timer = setTimeout(() => {\n      handleDismiss();\n    }, autoDismiss);\n    \n    return () => {\n      clearTimeout(timer);\n    };\n  }, [isVisible, autoDismiss, type]);\n  \n  // Handle dismiss action\n  const handleDismiss = () => {\n    if (!dismissible && !autoDismiss) return;\n    \n    setIsVisible(false);\n    if (onDismiss) {\n      onDismiss();\n    }\n  };\n  \n  // Don't render if not visible\n  if (!isVisible) return null;\n  \n  // Determine border style based on type\n  const borderStyle = {\n    single: {\n      topLeft: '┌',\n      topRight: '┐',\n      bottomRight: '┘',\n      bottomLeft: '└',\n      horizontal: '─',\n      vertical: '│',\n    },\n  };\n  \n  return (\n    <Box \n      flexDirection=\"column\"\n      borderStyle=\"single\"\n      borderColor={colors[type]}\n      paddingX={1}\n      paddingY={0}\n      style={{\n        borderStyle: 'single',\n        borderColor: colors[type],\n        ...style,\n      }}\n    >\n      {/* Header with title and dismiss button */}\n      {(title || dismissible) && (\n        <Box flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box>\n            <Text bold color={colors[type]}>\n              {type !== 'loading' ? icons[type] + ' ' : ''}\n              {title || type.charAt(0).toUpperCase() + type.slice(1)}\n            </Text>\n          </Box>\n          {dismissible && (\n            <Box>\n              <Text \n                color={theme.colors.textMuted}\n                onClick={handleDismiss}\n                style={{ cursor: 'pointer' }}\n              >\n                ✕\n              </Text>\n            </Box>\n          )}\n        </Box>\n      )}\n      \n      {/* Message content */}\n      <Box paddingY={title || dismissible ? 1 : 0}>\n        {type === 'loading' ? (\n          <Box flexDirection=\"row\" alignItems=\"center\">\n            <Spinner type=\"dots\" color={colors[type]} />\n            <Text> </Text>\n            <Text>{message}</Text>\n          </Box>\n        ) : (\n          <Text>{message}</Text>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Notification;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Text, useInput } from 'ink';\nimport { useTheme } from '../../themes';\nimport { ErrorReport, ErrorSeverity, errorReporter } from '../../utils/errorReporter';\nimport Divider from './Divider';\nimport { truncate } from '../../utils/helpers';\n\ninterface ErrorNotificationProps {\n  /**\n   * The error report to display\n   */\n  error: ErrorReport;\n  \n  /**\n   * Whether to show detailed information\n   * @default false\n   */\n  showDetails?: boolean;\n  \n  /**\n   * Whether the notification should be dismissible\n   * @default true\n   */\n  dismissible?: boolean;\n  \n  /**\n   * Callback when the notification is dismissed\n   */\n  onDismiss?: () => void;\n  \n  /**\n   * Time in milliseconds after which the notification will auto-dismiss\n   * Set to 0 to disable auto-dismiss\n   * @default 0\n   */\n  autoDismiss?: number;\n  \n  /**\n   * Whether to mark the error as handled when dismissed\n   * @default true\n   */\n  markAsHandled?: boolean;\n}\n\n/**\n * A specialized notification component for displaying error information\n */\nconst ErrorNotification: React.FC<ErrorNotificationProps> = ({\n  error,\n  showDetails = false,\n  dismissible = true,\n  onDismiss,\n  autoDismiss = 0,\n  markAsHandled = true,\n}) => {\n  const theme = useTheme();\n  const [isVisible, setIsVisible] = useState(true);\n  const [showDetailsState, setShowDetailsState] = useState(showDetails);\n  \n  // Get the appropriate color based on error severity\n  const getSeverityColor = (severity: ErrorSeverity) => {\n    switch (severity) {\n      case ErrorSeverity.LOW:\n        return theme.colors.info;\n      case ErrorSeverity.MEDIUM:\n        return theme.colors.warning;\n      case ErrorSeverity.HIGH:\n      case ErrorSeverity.CRITICAL:\n        return theme.colors.error;\n      default:\n        return theme.colors.error;\n    }\n  };\n\n  // Get severity display name\n  const getSeverityName = (severity: ErrorSeverity) => {\n    switch (severity) {\n      case ErrorSeverity.LOW:\n        return 'Minor';\n      case ErrorSeverity.MEDIUM:\n        return 'Warning';\n      case ErrorSeverity.HIGH:\n        return 'Error';\n      case ErrorSeverity.CRITICAL:\n        return 'Critical';\n      default:\n        return 'Error';\n    }\n  };\n  \n  // Handle auto-dismiss\n  useEffect(() => {\n    if (!isVisible || !autoDismiss) return;\n    \n    const timer = setTimeout(() => {\n      handleDismiss();\n    }, autoDismiss);\n    \n    return () => {\n      clearTimeout(timer);\n    };\n  }, [isVisible, autoDismiss]);\n  \n  // Handle dismiss action\n  const handleDismiss = () => {\n    if (!dismissible && !autoDismiss) return;\n    \n    setIsVisible(false);\n    \n    if (markAsHandled) {\n      errorReporter.markAsHandled(error.id);\n    }\n    \n    if (onDismiss) {\n      onDismiss();\n    }\n  };\n  \n  // Handle keyboard input\n  useInput((input, key) => {\n    if (key.escape && dismissible) {\n      handleDismiss();\n    }\n    \n    if (input === 'd' || input === 'D') {\n      setShowDetailsState(!showDetailsState);\n    }\n  });\n  \n  // Don't render if not visible\n  if (!isVisible) return null;\n  \n  const severityColor = getSeverityColor(error.severity);\n  \n  return (\n    <Box \n      flexDirection=\"column\"\n      borderStyle=\"round\"\n      borderColor={severityColor}\n      padding={1}\n    >\n      {/* Header with severity and category */}\n      <Box flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box>\n          <Text bold color={severityColor}>\n            {getSeverityName(error.severity)}: {error.category}\n          </Text>\n        </Box>\n        {dismissible && (\n          <Box>\n            <Text \n              color={theme.colors.textMuted}\n              dimColor\n              onClick={handleDismiss}\n            >\n              [ESC to close]\n            </Text>\n          </Box>\n        )}\n      </Box>\n      \n      {/* Error message */}\n      <Box marginY={1}>\n        <Text wrap=\"wrap\">{error.message}</Text>\n      </Box>\n      \n      {/* User action suggestion if available */}\n      {error.userAction && (\n        <Box marginY={1}>\n          <Text italic color={theme.colors.info}>\n            Suggestion: {error.userAction}\n          </Text>\n        </Box>\n      )}\n      \n      {/* Show details toggle */}\n      <Box marginY={1}>\n        <Text dimColor>\n          Press 'D' to {showDetailsState ? 'hide' : 'show'} details\n        </Text>\n      </Box>\n      \n      {/* Error details when expanded */}\n      {showDetailsState && (\n        <Box flexDirection=\"column\" marginTop={1}>\n          <Divider />\n          <Box marginY={1}>\n            <Text bold>Error ID:</Text>\n            <Text> </Text>\n            <Text>{error.id}</Text>\n          </Box>\n          \n          {error.context && (\n            <Box marginY={1}>\n              <Text bold>Context:</Text>\n              <Text> </Text>\n              <Text>{error.context}</Text>\n            </Box>\n          )}\n          \n          <Box marginY={1}>\n            <Text bold>Time:</Text>\n            <Text> </Text>\n            <Text>{error.timestamp.toLocaleString()}</Text>\n          </Box>\n          \n          {error.details && Object.keys(error.details).length > 0 && (\n            <Box flexDirection=\"column\" marginY={1}>\n              <Text bold>Details:</Text>\n              {Object.entries(error.details).map(([key, value]) => (\n                <Text key={key}>\n                  {key}: {typeof value === 'object' ? JSON.stringify(value) : String(value)}\n                </Text>\n              ))}\n            </Box>\n          )}\n          \n          {error.error?.stack && (\n            <Box flexDirection=\"column\" marginY={1}>\n              <Text bold>Stack Trace:</Text>\n              <Box \n                flexDirection=\"column\"\n                borderStyle=\"single\"\n                borderColor={theme.colors.textMuted}\n                paddingX={1}\n                height={5}\n                overflow=\"auto\"\n                marginTop={1}\n              >\n                {error.error.stack.split('\\n').map((line, i) => (\n                  <Text key={i} dimColor wrap=\"wrap\">{truncate(line, 100)}</Text>\n                ))}\n              </Box>\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default ErrorNotification;","import React from 'react';\nimport { Box, Text } from 'ink';\nimport { useTheme } from '../../themes';\n\ntype DividerVariant = 'horizontal' | 'vertical';\ntype DividerOrientation = 'left' | 'center' | 'right';\n\ntype DividerProps = {\n  /**\n   * The label to display in the divider (optional)\n   */\n  label?: string | React.ReactNode;\n  \n  /**\n   * The orientation of the divider\n   * @default 'horizontal'\n   */\n  variant?: DividerVariant;\n  \n  /**\n   * The position of the label (for horizontal dividers only)\n   * @default 'center'\n   */\n  orientation?: DividerOrientation;\n  \n  /**\n   * The character(s) to use for the divider line\n   * @default '─' for horizontal, '│' for vertical\n   */\n  character?: string;\n  \n  /**\n   * The color of the divider line\n   * @default theme.colors.border\n   */\n  color?: string;\n  \n  /**\n   * The color of the label text\n   * @default theme.colors.text\n   */\n  labelColor?: string;\n  \n  /**\n   * Additional styles for the divider container\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the label\n   */\n  labelStyle?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the line\n   */\n  lineStyle?: React.CSSProperties;\n};\n\n/**\n * A divider component for visually separating content\n */\nconst Divider: React.FC<DividerProps> = ({\n  label,\n  variant = 'horizontal',\n  orientation = 'center',\n  character,\n  color,\n  labelColor,\n  style = {},\n  labelStyle = {},\n  lineStyle = {},\n}) => {\n  const theme = useTheme();\n  \n  // Default characters for divider\n  const defaultCharacter = variant === 'horizontal' ? '─' : '│';\n  const dividerChar = character || defaultCharacter;\n  \n  // Default colors\n  const dividerColor = color || theme.colors.border;\n  const textColor = labelColor || theme.colors.text;\n  \n  // Render a horizontal divider\n  const renderHorizontalDivider = () => {\n    if (!label) {\n      return (\n        <Box>\n          <Text color={dividerColor} style={lineStyle}>\n            {dividerChar.repeat(process.stdout.columns || 40)}\n          </Text>\n        </Box>\n      );\n    }\n    \n    // Calculate available width for the divider\n    const availableWidth = process.stdout.columns || 80;\n    const labelText = typeof label === 'string' ? label : '';\n    const labelLength = labelText.length;\n    const lineLength = Math.max(2, Math.floor((availableWidth - labelLength - 2) / 2));\n    \n    const leftLine = dividerChar.repeat(lineLength);\n    const rightLine = dividerChar.repeat(lineLength);\n    \n    let content;\n    \n    switch (orientation) {\n      case 'left':\n        content = (\n          <>\n            <Text color={dividerColor} style={lineStyle}>\n              {dividerChar.repeat(2)}\n            </Text>\n            <Text color={textColor} style={labelStyle}>\n              {' '}{label}{' '}\n            </Text>\n            <Text color={dividerColor} style={lineStyle}>\n              {dividerChar.repeat(availableWidth - labelLength - 6)}\n            </Text>\n          </>\n        );\n        break;\n      case 'right':\n        content = (\n          <>\n            <Text color={dividerColor} style={lineStyle}>\n              {dividerChar.repeat(availableWidth - labelLength - 6)}\n            </Text>\n            <Text color={textColor} style={labelStyle}>\n              {' '}{label}{' '}\n            </Text>\n            <Text color={dividerColor} style={lineStyle}>\n              {dividerChar.repeat(2)}\n            </Text>\n          </>\n        );\n        break;\n      case 'center':\n      default:\n        content = (\n          <>\n            <Text color={dividerColor} style={lineStyle}>\n              {leftLine}\n            </Text>\n            <Text color={textColor} style={labelStyle}>\n              {' '}{label}{' '}\n            </Text>\n            <Text color={dividerColor} style={lineStyle}>\n              {rightLine}\n            </Text>\n          </>\n        );\n    }\n    \n    return (\n      <Box>\n        {content}\n      </Box>\n    );\n  };\n  \n  // Render a vertical divider\n  const renderVerticalDivider = () => {\n    return (\n      <Box flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Text color={dividerColor} style={lineStyle}>\n          {dividerChar}\n        </Text>\n        {label && (\n          <Text color={textColor} style={labelStyle}>\n            {label}\n          </Text>\n        )}\n      </Box>\n    );\n  };\n  \n  return (\n    <Box \n      style={style}\n      flexDirection={variant === 'horizontal' ? 'row' : 'column'}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      width={variant === 'horizontal' ? '100%' : undefined}\n      height={variant === 'vertical' ? '100%' : undefined}\n    >\n      {variant === 'horizontal' ? renderHorizontalDivider() : renderVerticalDivider()}\n    </Box>\n  );\n};\n\nexport default Divider;\n","/**\n * @file ErrorBoundary.tsx\n * @description A React Error Boundary component that catches JavaScript errors in child components,\n * logs them to the error reporting service, and displays a fallback UI. This component helps prevent\n * the entire application from crashing when an error occurs in the UI.\n */\n\nimport React, { Component, ReactNode, ErrorInfo } from 'react';\nimport { Box, Text } from 'ink';\nimport { errorReporter, ErrorSeverity, ErrorCategory } from '../../utils/errorReporter';\nimport ErrorNotification from './ErrorNotification';\n\n/**\n * Props for the ErrorBoundary component\n * \n * @interface ErrorBoundaryProps\n * @property {ReactNode} children - Child components to be wrapped by the error boundary\n * @property {string} [id] - Optional identifier for the boundary (useful for debugging)\n * @property {string} [componentName] - Name of the component where the boundary is used\n * @property {boolean} [showError=true] - Whether to show the error UI\n * @property {ReactNode} [fallback] - Custom fallback UI to display when an error occurs\n */\ninterface ErrorBoundaryProps {\n  /**\n   * The child components to render\n   */\n  children: ReactNode;\n  \n  /**\n   * Optional identifier for this boundary to help with debugging\n   */\n  id?: string;\n  \n  /**\n   * Component name or context for better error reporting\n   */\n  componentName?: string;\n  \n  /**\n   * Whether to show the error UI or just silently report it\n   * @default true\n   */\n  showError?: boolean;\n  \n  /**\n   * Fallback UI to show when an error occurs\n   * If not provided, a default error UI will be shown\n   */\n  fallback?: ReactNode;\n}\n\n/**\n * Internal state of the ErrorBoundary component\n * \n * @interface ErrorBoundaryState\n * @property {boolean} hasError - Whether an error has been caught\n * @property {Error | null} error - The error that was caught\n * @property {ErrorInfo | null} errorInfo - Additional error information\n * @property {string | null} errorId - Unique identifier for the reported error\n */\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n  errorId: string | null;\n}\n\n/**\n * ErrorBoundary Component\n * \n * A reusable error boundary that catches JavaScript errors in its child component tree,\n * logs those errors, and displays a fallback UI instead of the component tree that crashed.\n * \n * @class ErrorBoundary\n * @extends {Component<ErrorBoundaryProps, ErrorBoundaryState>}\n * @example\n * <ErrorBoundary componentName=\"MyComponent\">\n *   <MyComponent />\n * </ErrorBoundary>\n */\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null,\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // Report the error to our error reporting service\n    const { id, componentName } = this.props;\n    const context = componentName || (id ? `ErrorBoundary(${id})` : 'ErrorBoundary');\n    \n    const errorReport = errorReporter.reportError(`UI Error in ${context}`, {\n      error,\n      severity: ErrorSeverity.HIGH,\n      category: ErrorCategory.UI,\n      context,\n      details: {\n        componentStack: errorInfo.componentStack,\n      },\n      userAction: 'Try refreshing the application or report this issue to the developers.',\n    });\n    \n    this.setState({\n      errorInfo,\n      errorId: errorReport.id,\n    });\n  }\n\n  render(): ReactNode {\n    const { children, showError = true, fallback } = this.props;\n    const { hasError, error, errorId } = this.state;\n\n    if (hasError) {\n      if (!showError) {\n        return null;\n      }\n\n      if (fallback) {\n        return fallback;\n      }\n\n      if (error && errorId) {\n        // Get the error report from the reporter\n        const errorReport = errorReporter.getError(errorId);\n        \n        if (errorReport) {\n          return (\n            <Box flexDirection=\"column\" paddingY={1}>\n              <ErrorNotification error={errorReport} />\n            </Box>\n          );\n        }\n      }\n\n      // Fallback error UI if we can't get the error report\n      return (\n        <Box flexDirection=\"column\" borderStyle=\"round\" borderColor=\"red\" padding={1}>\n          <Text bold color=\"red\">An error occurred in this component</Text>\n          {error && (\n            <Text wrap=\"wrap\">{error.message}</Text>\n          )}\n          <Text>Please try again or restart the application.</Text>\n        </Box>\n      );\n    }\n\n    return children;\n  }\n}\n\nexport default ErrorBoundary;","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { Box } from 'ink';\nimport { errorReporter, ErrorReport } from '../../utils/errorReporter';\nimport ErrorNotification from './ErrorNotification';\n\n// Create a context for errors\ninterface ErrorContextType {\n  // List of active errors\n  errors: ErrorReport[];\n  // Dismiss a specific error\n  dismissError: (errorId: string) => void;\n  // Clear all errors\n  clearErrors: () => void;\n}\n\nconst ErrorContext = createContext<ErrorContextType>({\n  errors: [],\n  dismissError: () => {},\n  clearErrors: () => {},\n});\n\n// Custom hook to access the error context\nexport const useErrors = () => useContext(ErrorContext);\n\ninterface ErrorProviderProps {\n  children: ReactNode;\n  \n  /**\n   * Maximum number of error notifications to show at once\n   * @default 3\n   */\n  maxVisibleErrors?: number;\n  \n  /**\n   * Whether to position the error container at the top or bottom\n   * @default 'top'\n   */\n  position?: 'top' | 'bottom';\n}\n\n/**\n * Provider component that manages error notifications throughout the app\n */\nconst ErrorProvider: React.FC<ErrorProviderProps> = ({\n  children,\n  maxVisibleErrors = 3,\n  position = 'top',\n}) => {\n  const [errors, setErrors] = useState<ErrorReport[]>([]);\n  \n  // Subscribe to error reporter\n  useEffect(() => {\n    const unsubscribe = errorReporter.subscribe((error) => {\n      setErrors((prev) => {\n        // Check if we already have this error\n        if (prev.some(e => e.id === error.id)) {\n          return prev;\n        }\n        // Add new error to the beginning of the array\n        return [error, ...prev];\n      });\n    });\n    \n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n  // Dismiss a specific error\n  const dismissError = (errorId: string) => {\n    errorReporter.markAsHandled(errorId);\n    setErrors((prev) => prev.filter(error => error.id !== errorId));\n  };\n  \n  // Clear all errors\n  const clearErrors = () => {\n    errors.forEach(error => {\n      errorReporter.markAsHandled(error.id);\n    });\n    setErrors([]);\n  };\n  \n  // Visible errors (limited by maxVisibleErrors)\n  const visibleErrors = errors.slice(0, maxVisibleErrors);\n  \n  return (\n    <ErrorContext.Provider value={{ errors, dismissError, clearErrors }}>\n      <Box flexDirection=\"column\">\n        {position === 'top' && visibleErrors.length > 0 && (\n          <Box flexDirection=\"column\" marginBottom={1}>\n            {visibleErrors.map((error) => (\n              <ErrorNotification\n                key={error.id}\n                error={error}\n                onDismiss={() => dismissError(error.id)}\n              />\n            ))}\n            {errors.length > maxVisibleErrors && (\n              <Box justifyContent=\"center\" marginY={1}>\n                <Box borderStyle=\"single\" paddingX={1}>\n                  <Box>\n                    {errors.length - maxVisibleErrors} more {errors.length - maxVisibleErrors === 1 ? 'error' : 'errors'} not shown\n                  </Box>\n                </Box>\n              </Box>\n            )}\n          </Box>\n        )}\n        \n        {children}\n        \n        {position === 'bottom' && visibleErrors.length > 0 && (\n          <Box flexDirection=\"column\" marginTop={1}>\n            {visibleErrors.map((error) => (\n              <ErrorNotification\n                key={error.id}\n                error={error}\n                onDismiss={() => dismissError(error.id)}\n              />\n            ))}\n            {errors.length > maxVisibleErrors && (\n              <Box justifyContent=\"center\" marginY={1}>\n                <Box borderStyle=\"single\" paddingX={1}>\n                  <Box>\n                    {errors.length - maxVisibleErrors} more {errors.length - maxVisibleErrors === 1 ? 'error' : 'errors'} not shown\n                  </Box>\n                </Box>\n              </Box>\n            )}\n          </Box>\n        )}\n      </Box>\n    </ErrorContext.Provider>\n  );\n};\n\nexport default ErrorProvider;","import React, { useMemo } from 'react';\nimport { Box, Text } from 'ink';\nimport { useTheme } from '../../themes';\n\ntype ProgressBarVariant = 'default' | 'success' | 'warning' | 'error' | 'info' | 'primary' | 'secondary';\n\ntype ProgressBarProps = {\n  /**\n   * Current progress value (0-100)\n   */\n  value: number;\n  \n  /**\n   * Total value (100 if not specified)\n   * @default 100\n   */\n  total?: number;\n  \n  /**\n   * Width of the progress bar in characters\n   * @default 50\n   */\n  width?: number;\n  \n  /**\n   * Whether to show the percentage\n   * @default true\n   */\n  showPercentage?: boolean;\n  \n  /**\n   * Whether to show the value and total\n   * @default false\n   */\n  showValue?: boolean;\n  \n  /**\n   * Custom label to display\n   */\n  label?: string;\n  \n  /**\n   * Visual style variant\n   * @default 'default'\n   */\n  variant?: ProgressBarVariant;\n  \n  /**\n   * Character to use for the filled portion of the bar\n   * @default '█'\n   */\n  filledChar?: string;\n  \n  /**\n   * Character to use for the unfilled portion of the bar\n   * @default '░'\n   */\n  unfilledChar?: string;\n  \n  /**\n   * Additional styles for the progress bar container\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Test ID for testing purposes\n   */\n  testId?: string;\n};\n\n/**\n * A customizable progress bar component for the TUI\n */\nconst ProgressBar: React.FC<ProgressBarProps> = ({\n  value,\n  total = 100,\n  width = 50,\n  showPercentage = true,\n  showValue = false,\n  label,\n  variant = 'default',\n  filledChar = '█',\n  unfilledChar = '░',\n  style = {},\n  testId = 'progress-bar',\n}) => {\n  const theme = useTheme();\n  \n  // Calculate the percentage and ensure it's within bounds\n  const percentage = useMemo(() => {\n    return Math.min(100, Math.max(0, (value / total) * 100));\n  }, [value, total]);\n  \n  // Calculate the number of filled and unfilled characters\n  const filledWidth = Math.round((percentage / 100) * width);\n  const unfilledWidth = width - filledWidth;\n  \n  // Generate the progress bar string\n  const progressBar = useMemo(() => {\n    const filled = filledChar.repeat(filledWidth);\n    const unfilled = unfilledChar.repeat(unfilledWidth);\n    return `${filled}${unfilled}`;\n  }, [filledWidth, unfilledWidth, filledChar, unfilledChar]);\n  \n  // Get the color based on the variant\n  const color = useMemo(() => {\n    const colors = {\n      default: theme.colors.text,\n      primary: theme.colors.primary,\n      secondary: theme.colors.secondary,\n      success: theme.colors.success,\n      warning: theme.colors.warning,\n      error: theme.colors.error,\n      info: theme.colors.info,\n    };\n    \n    return colors[variant] || colors.default;\n  }, [variant, theme]);\n  \n  // Format the value for display\n  const formattedValue = useMemo(() => {\n    if (!showValue) return null;\n    return ` ${value}/${total}`;\n  }, [value, total, showValue]);\n  \n  // Format the percentage for display\n  const formattedPercentage = useMemo(() => {\n    if (!showPercentage) return null;\n    return ` ${percentage.toFixed(1)}%`;\n  }, [percentage, showPercentage]);\n  \n  return (\n    <Box \n      flexDirection=\"column\" \n      style={style}\n      data-testid={testId}\n    >\n      {(label || showValue || showPercentage) && (\n        <Box \n          marginBottom={1}\n          data-testid={`${testId}-header`}\n        >\n          {label && <Text data-testid={`${testId}-label`}>{label}: </Text>}\n          <Text \n            color={color} \n            bold\n            data-testid={`${testId}-value`}\n          >\n            {formattedValue}\n            {formattedPercentage}\n          </Text>\n        </Box>\n      )}\n      <Box data-testid={`${testId}-bar-container`}>\n        <Text \n          color={color}\n          data-testid={`${testId}-bar`}\n          data-variant={variant}\n          data-percentage={percentage.toFixed(1)}\n        >\n          {progressBar}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Text } from 'ink';\nimport { useTheme } from '../../themes';\n\ninterface ProgressBarProps {\n  value: number;\n  width?: number;\n  maxValue?: number;\n  label?: string;\n  showPercentage?: boolean;\n  filledChar?: string;\n  unfilledChar?: string;\n  color?: string;\n  backgroundColor?: string;\n  animated?: boolean;\n  colorTransition?: boolean;\n  steps?: number;\n  pulsate?: boolean;\n}\n\nexport const EnhancedProgressBar: React.FC<ProgressBarProps> = ({\n  value,\n  width = 30,\n  maxValue = 100,\n  label,\n  showPercentage = true,\n  filledChar = '█',\n  unfilledChar = '░',\n  color,\n  backgroundColor,\n  animated = false,\n  colorTransition = false,\n  steps = 0,\n  pulsate = false,\n}) => {\n  const theme = useTheme();\n  const [animatedValue, setAnimatedValue] = useState(0);\n  const [pulsePhase, setPulsePhase] = useState(0);\n  \n  // Normalize value to ensure it's between 0 and maxValue\n  const normalizedValue = Math.max(0, Math.min(value, maxValue));\n  const percentage = Math.round((normalizedValue / maxValue) * 100);\n  \n  // Animation effect\n  useEffect(() => {\n    if (animated) {\n      // If the value changed, animate to the new value\n      const animationStep = (normalizedValue - animatedValue) / 10;\n      if (Math.abs(normalizedValue - animatedValue) > 0.5) {\n        const timer = setTimeout(() => {\n          setAnimatedValue(prev => prev + animationStep);\n        }, 20);\n        return () => clearTimeout(timer);\n      } else {\n        setAnimatedValue(normalizedValue);\n      }\n    } else {\n      setAnimatedValue(normalizedValue);\n    }\n  }, [normalizedValue, animated, animatedValue]);\n  \n  // Pulsate effect\n  useEffect(() => {\n    if (pulsate) {\n      const timer = setInterval(() => {\n        setPulsePhase(prev => (prev + 1) % 20);\n      }, 100);\n      return () => clearInterval(timer);\n    }\n  }, [pulsate]);\n  \n  // Calculate the number of filled and unfilled characters\n  const displayValue = animated ? animatedValue : normalizedValue;\n  const filledWidth = Math.round((displayValue / maxValue) * width);\n  const unfilledWidth = width - filledWidth;\n  \n  // Determine colors based on progress\n  let barColor = color || theme.colors.primary;\n  const bgColor = backgroundColor || theme.colors.backgroundHover;\n  \n  if (colorTransition) {\n    if (percentage < 30) {\n      barColor = theme.colors.error;\n    } else if (percentage < 70) {\n      barColor = theme.colors.warning;\n    } else {\n      barColor = theme.colors.success;\n    }\n  }\n  \n  // Apply pulsation effect\n  const pulseOffset = pulsate ? Math.sin(pulsePhase * Math.PI / 10) * 2 : 0;\n  const pulseAdjustedWidth = Math.max(0, filledWidth + Math.round(pulseOffset));\n  \n  // Generate the progress bar string\n  const bar = \n    (pulseAdjustedWidth > 0 ? filledChar.repeat(pulseAdjustedWidth) : '') +\n    (width - pulseAdjustedWidth > 0 ? unfilledChar.repeat(width - pulseAdjustedWidth) : '');\n  \n  // Generate step markers if requested\n  let stepMarkers = '';\n  if (steps > 0) {\n    const stepSize = width / steps;\n    for (let i = 1; i < steps; i++) {\n      const pos = Math.floor(i * stepSize);\n      stepMarkers += ' '.repeat(pos - stepMarkers.length) + '|';\n    }\n    stepMarkers += ' '.repeat(width - stepMarkers.length);\n  }\n  \n  return (\n    <Box flexDirection=\"column\">\n      {label && (\n        <Box justifyContent=\"space-between\">\n          <Text bold>{label}</Text>\n          {showPercentage && (\n            <Text> {percentage}%</Text>\n          )}\n        </Box>\n      )}\n      \n      <Box flexDirection=\"column\">\n        <Text color={barColor} backgroundColor={bgColor}>{bar}</Text>\n        \n        {steps > 0 && (\n          <Text color=\"gray\">{stepMarkers}</Text>\n        )}\n        \n        {!label && showPercentage && (\n          <Text> {percentage}%</Text>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default EnhancedProgressBar;","import React, { useState, useEffect } from 'react';\nimport { Box, Text } from 'ink';\nimport EnhancedProgressBar from './EnhancedProgressBar';\nimport { useTheme } from '../../themes';\n\ninterface Stage {\n  name: string;\n  value: number;\n  maxValue: number;\n  status: 'pending' | 'in_progress' | 'completed' | 'error';\n}\n\ninterface MultiStageProgressProps {\n  stages: Stage[];\n  width?: number;\n  showPercentages?: boolean;\n  animated?: boolean;\n}\n\nexport const MultiStageProgress: React.FC<MultiStageProgressProps> = ({\n  stages,\n  width = 40,\n  showPercentages = true,\n  animated = true,\n}) => {\n  const theme = useTheme();\n  const [currentStageIndex, setCurrentStageIndex] = useState(0);\n  \n  // Calculate overall progress\n  const totalStages = stages.length;\n  const completedStages = stages.filter(s => s.status === 'completed').length;\n  const overallProgress = Math.round((completedStages / totalStages) * 100);\n  \n  // Determine the current stage\n  useEffect(() => {\n    const inProgressIndex = stages.findIndex(s => s.status === 'in_progress');\n    if (inProgressIndex !== -1) {\n      setCurrentStageIndex(inProgressIndex);\n    } else {\n      // If no stage is in progress, find the first pending stage\n      const pendingIndex = stages.findIndex(s => s.status === 'pending');\n      if (pendingIndex !== -1) {\n        setCurrentStageIndex(pendingIndex);\n      }\n    }\n  }, [stages]);\n  \n  // Get status icon and color\n  const getStatusIndicator = (status: Stage['status']) => {\n    switch (status) {\n      case 'completed':\n        return { icon: '✓', color: theme.colors.success };\n      case 'in_progress':\n        return { icon: '●', color: theme.colors.primary };\n      case 'error':\n        return { icon: '✗', color: theme.colors.error };\n      case 'pending':\n      default:\n        return { icon: '○', color: theme.colors.textMuted };\n    }\n  };\n  \n  return (\n    <Box flexDirection=\"column\">\n      <Box>\n        <Text bold>Overall Progress: </Text>\n        <Text>{overallProgress}%</Text>\n      </Box>\n      \n      <EnhancedProgressBar \n        value={completedStages}\n        maxValue={totalStages}\n        width={width}\n        showPercentage={false}\n        animated={animated}\n        colorTransition\n        steps={totalStages}\n      />\n      \n      <Box marginY={1}>\n        <Text bold>Stages:</Text>\n      </Box>\n      \n      <Box flexDirection=\"column\">\n        {stages.map((stage, index) => {\n          const { icon, color } = getStatusIndicator(stage.status);\n          const isCurrentStage = index === currentStageIndex;\n          \n          return (\n            <Box key={index} flexDirection=\"column\" marginBottom={1}>\n              <Box>\n                <Text color={color}>{icon} </Text>\n                <Text bold={isCurrentStage} color={isCurrentStage ? theme.colors.primary : undefined}>\n                  {stage.name}\n                </Text>\n                \n                {showPercentages && stage.status !== 'pending' && (\n                  <Text> {Math.round((stage.value / stage.maxValue) * 100)}%</Text>\n                )}\n              </Box>\n              \n              {stage.status === 'in_progress' && (\n                <Box marginLeft={2} marginTop={0}>\n                  <EnhancedProgressBar \n                    value={stage.value}\n                    maxValue={stage.maxValue}\n                    width={width - 2}\n                    showPercentage={false}\n                    animated={animated}\n                    pulsate={true}\n                  />\n                </Box>\n              )}\n            </Box>\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MultiStageProgress;","import React, { useState, useEffect } from 'react';\nimport { Box, Text } from 'ink';\nimport { useTheme } from '../../themes';\nimport { execa } from 'execa';\nimport pkg from '../../../package.json';\n\ninterface StatusBarProps {\n  width?: number;\n}\n\ninterface StatusInfo {\n  currentOrg?: string;\n  defaultOrg?: string;\n  devhubOrg?: string;\n  version: string;\n  time: string;\n}\n\nexport const StatusBar: React.FC<StatusBarProps> = ({ width = process.stdout.columns || 100 }) => {\n  const theme = useTheme();\n  const [status, setStatus] = useState<StatusInfo>({\n    currentOrg: undefined,\n    defaultOrg: undefined,\n    devhubOrg: undefined,\n    version: pkg.version,\n    time: new Date().toLocaleTimeString()\n  });\n\n  // Update time every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setStatus(prev => ({\n        ...prev,\n        time: new Date().toLocaleTimeString()\n      }));\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  // Fetch Salesforce org info on mount\n  useEffect(() => {\n    const fetchOrgInfo = async () => {\n      try {\n        // Get default org\n        const { stdout: orgInfoJson } = await execa('sf', ['config', 'get', 'target-org', '--json']);\n        const orgInfo = JSON.parse(orgInfoJson);\n        const defaultOrg = orgInfo?.result?.[0]?.value;\n\n        // Get default devhub\n        const { stdout: devhubInfoJson } = await execa('sf', ['config', 'get', 'target-dev-hub', '--json']);\n        const devhubInfo = JSON.parse(devhubInfoJson);\n        const devhubOrg = devhubInfo?.result?.[0]?.value;\n\n        setStatus(prev => ({\n          ...prev,\n          currentOrg: defaultOrg,\n          defaultOrg,\n          devhubOrg\n        }));\n      } catch (error) {\n        // Silently fail - this is just a status bar\n        console.error('Failed to get org info:', error);\n      }\n    };\n\n    fetchOrgInfo();\n  }, []);\n\n  return (\n    <Box \n      flexDirection=\"row\" \n      width={width} \n      height={1}\n      justifyContent=\"space-between\"\n      backgroundColor={theme.colors.primary}\n      padding={0}\n    >\n      <Box>\n        <Text backgroundColor={theme.colors.primary} color={theme.colors.textInverse}>\n          {` SF TUI v${status.version} `}\n        </Text>\n        {status.defaultOrg && (\n          <Text backgroundColor={theme.colors.secondary} color={theme.colors.textInverse}>\n            {` Org: ${status.defaultOrg} `}\n          </Text>\n        )}\n        {status.devhubOrg && (\n          <Text backgroundColor={theme.colors.info} color={theme.colors.textInverse}>\n            {` DevHub: ${status.devhubOrg} `}\n          </Text>\n        )}\n      </Box>\n      \n      <Box>\n        <Text backgroundColor={theme.colors.warning} color={theme.colors.textInverse}>\n          {` ?: Help `}\n        </Text>\n        <Text backgroundColor={theme.colors.primary} color={theme.colors.textInverse}>\n          {` ${status.time} `}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default StatusBar;","{\n  \"name\": \"sf-tui\",\n  \"version\": \"0.1.0\",\n  \"description\": \"A modern, interactive terminal UI for Salesforce CLI\",\n  \"main\": \"dist/index.js\",\n  \"bin\": {\n    \"sft\": \"./bin/run\"\n  },\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"dev\": \"tsup --watch\",\n    \"test\": \"vitest run\",\n    \"test:watch\": \"vitest\",\n    \"test:ui\": \"vitest --ui\",\n    \"test:coverage\": \"vitest run --coverage\",\n    \"test:errors\": \"vitest run 'tests/(utils|components|integration)/*error*'\",\n    \"test:e2e\": \"vitest run 'tests/e2e/*.e2e.test.tsx'\",\n    \"test:all\": \"vitest run\",\n    \"lint\": \"eslint . --ext .ts\",\n    \"prepack\": \"rm -rf dist && npm run build\",\n    \"version\": \"git add -A src\",\n    \"postversion\": \"git push && git push --tags\"\n  },\n  \"vitest\": {\n    \"environment\": \"jsdom\",\n    \"setupFiles\": \"./tests/setup.ts\",\n    \"globals\": true,\n    \"coverage\": {\n      \"provider\": \"v8\",\n      \"reporter\": [\n        \"text\",\n        \"json\",\n        \"html\"\n      ],\n      \"exclude\": [\n        \"**/node_modules/**\",\n        \"**/dist/**\",\n        \"**/tests/**\",\n        \"**/*.test.ts\",\n        \"**/*.test.tsx\"\n      ]\n    }\n  },\n  \"dependencies\": {\n    \"@oclif/core\": \"^3.0.0\",\n    \"@types/fs-extra\": \"^11.0.4\",\n    \"chalk\": \"^5.0.0\",\n    \"execa\": \"^8.0.0\",\n    \"fs-extra\": \"^11.3.0\",\n    \"ink\": \"^4.4.0\",\n    \"ink-box\": \"^2.0.0\",\n    \"ink-select-input\": \"^5.0.0\",\n    \"ink-spinner\": \"^4.0.0\",\n    \"ink-text-input\": \"^5.0.0\",\n    \"inquirer\": \"^9.0.0\",\n    \"open\": \"^9.0.0\",\n    \"ora\": \"^7.0.0\",\n    \"react\": \"^18.0.0\",\n    \"react-reconciler\": \"^0.29.0\",\n    \"uuid\": \"^11.1.0\",\n    \"yoga-layout-prebuilt\": \"^1.10.0\"\n  },\n  \"devDependencies\": {\n    \"@testing-library/jest-dom\": \"^6.6.3\",\n    \"@testing-library/react\": \"^14.2.1\",\n    \"@types/chai\": \"^4.3.0\",\n    \"@types/execa\": \"^0.9.0\",\n    \"@types/jest\": \"^29.5.12\",\n    \"@types/mocha\": \"^10.0.0\",\n    \"@types/node\": \"^20.17.48\",\n    \"@types/react\": \"^18.0.0\",\n    \"@types/react-dom\": \"^18.0.0\",\n    \"@types/react-reconciler\": \"^0.18.0\",\n    \"@types/resize-observer-browser\": \"^0.1.11\",\n    \"@types/testing-library__react\": \"^10.0.1\",\n    \"@types/uuid\": \"^10.0.0\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.0.0\",\n    \"@typescript-eslint/parser\": \"^6.0.0\",\n    \"@vitest/ui\": \"^1.6.0\",\n    \"eslint\": \"^8.0.0\",\n    \"eslint-config-prettier\": \"^9.0.0\",\n    \"eslint-plugin-react\": \"^7.30.0\",\n    \"ink-testing-library\": \"^4.0.0\",\n    \"jsdom\": \"^24.0.0\",\n    \"prettier\": \"^3.0.0\",\n    \"tsup\": \"^8.0.0\",\n    \"typescript\": \"^5.0.0\",\n    \"vitest\": \"^1.6.0\"\n  },\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"oclif\": {\n    \"commands\": \"./dist/commands\",\n    \"bin\": \"sft\"\n  },\n  \"type\": \"module\"\n}\n","import React from 'react';\nimport { Box, Text, useInput } from 'ink';\nimport { useTheme } from '../../themes';\nimport { useKeyboardShortcuts, Shortcut } from '../../context/KeyboardShortcuts';\nimport { CustomBox } from './Box';\n\ninterface HelpScreenProps {\n  onClose: () => void;\n  title?: string;\n}\n\nexport const HelpScreen: React.FC<HelpScreenProps> = ({ \n  onClose,\n  title = 'Keyboard Shortcuts'\n}) => {\n  const theme = useTheme();\n  const { activeShortcuts } = useKeyboardShortcuts();\n  \n  // Group shortcuts by section\n  const globalShortcuts = activeShortcuts.filter(s => s.global);\n  const contextShortcuts = activeShortcuts.filter(s => !s.global);\n  \n  // Handle ESC key to close\n  useInput((input, key) => {\n    if (key.escape || input === 'q') {\n      onClose();\n    }\n  });\n  \n  // Render a shortcut row\n  const renderShortcut = (shortcut: Shortcut) => {\n    const keyText = [\n      shortcut.ctrl ? 'Ctrl+' : '',\n      shortcut.alt ? 'Alt+' : '',\n      shortcut.shift ? 'Shift+' : '',\n      shortcut.key.toUpperCase()\n    ].join('');\n    \n    return (\n      <Box key={shortcut.action} marginY={0}>\n        <Box width={16}>\n          <Text bold color={theme.colors.primary}>{keyText}</Text>\n        </Box>\n        <Box>\n          <Text>{shortcut.description}</Text>\n        </Box>\n      </Box>\n    );\n  };\n  \n  return (\n    <CustomBox \n      title={title}\n      borderStyle=\"round\"\n      borderColor={theme.colors.primary}\n      padding={1}\n      width={60}\n    >\n      <Box flexDirection=\"column\">\n        {globalShortcuts.length > 0 && (\n          <>\n            <Text bold>Global Shortcuts</Text>\n            <Box flexDirection=\"column\" marginY={1}>\n              {globalShortcuts.map(renderShortcut)}\n            </Box>\n          </>\n        )}\n        \n        {contextShortcuts.length > 0 && (\n          <>\n            <Text bold>Context Shortcuts</Text>\n            <Box flexDirection=\"column\" marginY={1}>\n              {contextShortcuts.map(renderShortcut)}\n            </Box>\n          </>\n        )}\n        \n        <Box marginTop={1}>\n          <Text color=\"gray\" italic>Press ESC or q to close</Text>\n        </Box>\n      </Box>\n    </CustomBox>\n  );\n};\n\nexport default HelpScreen;","import React, { useCallback, useEffect } from 'react';\nimport { Box, Text, useFocus, useInput } from 'ink';\nimport { useTheme } from '../../themes';\nimport Button from './Button';\n\ntype ModalProps = {\n  /**\n   * Whether the modal is open\n   * @default false\n   */\n  isOpen?: boolean;\n  \n  /**\n   * Modal title\n   */\n  title: string;\n  \n  /**\n   * Modal content\n   */\n  children: React.ReactNode;\n  \n  /**\n   * Width of the modal\n   * @default 60\n   */\n  width?: number;\n  \n  /**\n   * Height of the modal\n   */\n  height?: number | 'auto';\n  \n  /**\n   * Whether to show a close button\n   * @default true\n   */\n  showCloseButton?: boolean;\n  \n  /**\n   * Label for the close button\n   * @default 'Close'\n   */\n  closeButtonLabel?: string;\n  \n  /**\n   * Whether to show a backdrop\n   * @default true\n   */\n  showBackdrop?: boolean;\n  \n  /**\n   * Callback when the modal is closed\n   */\n  onClose?: () => void;\n  \n  /**\n   * Additional styles for the modal container\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Additional props for the modal content\n   */\n  contentProps?: React.ComponentProps<typeof Box>;\n};\n\n/**\n * A modal dialog component for the TUI\n */\nconst Modal: React.FC<ModalProps> = ({\n  isOpen = false,\n  title,\n  children,\n  width = 60,\n  height = 'auto',\n  showCloseButton = true,\n  closeButtonLabel = 'Close',\n  showBackdrop = true,\n  onClose,\n  style = {},\n  contentProps = {},\n}) => {\n  const theme = useTheme();\n  \n  // Handle escape key to close modal\n  useInput(\n    (input, key) => {\n      if (key.escape && onClose) {\n        onClose();\n      }\n    },\n    { isActive: isOpen }\n  );\n  \n  // Prevent scrolling when modal is open\n  useEffect(() => {\n    if (isOpen) {\n      // Add any necessary side effects when modal opens\n      return () => {\n        // Cleanup when modal closes\n      };\n    }\n  }, [isOpen]);\n  \n  // Don't render if not open\n  if (!isOpen) return null;\n  \n  // Calculate modal position and dimensions\n  const modalStyles: React.CSSProperties = {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: `${width}%`,\n    maxWidth: '90%',\n    minHeight: typeof height === 'number' ? `${height}%` : 'auto',\n    maxHeight: '90%',\n    backgroundColor: theme.colors.background,\n    borderStyle: 'single',\n    borderColor: theme.colors.border,\n    flexDirection: 'column',\n    ...style,\n  };\n  \n  // Backdrop styles\n  const backdropStyles: React.CSSProperties = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n  };\n  \n  // Header styles\n  const headerStyles: React.CSSProperties = {\n    borderBottomStyle: 'single',\n    borderBottomColor: theme.colors.border,\n    paddingX: 1,\n    paddingY: 0,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 3,\n  };\n  \n  // Content styles\n  const contentStyles: React.CSSProperties = {\n    padding: 1,\n    flexGrow: 1,\n    overflow: 'hidden',\n  };\n  \n  // Footer styles\n  const footerStyles: React.CSSProperties = {\n    borderTopStyle: 'single',\n    borderTopColor: theme.colors.border,\n    padding: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    height: 4,\n  };\n  \n  return (\n    <Box {...(showBackdrop ? { style: backdropStyles } : {})}>\n      <Box style={modalStyles}>\n        {/* Header */}\n        <Box style={headerStyles}>\n          <Text bold>{title}</Text>\n          {showCloseButton && onClose && (\n            <Button \n              variant=\"text\" \n              onPress={onClose}\n              style={{ padding: 0, height: 1 }}\n            >\n              ✕\n            </Button>\n          )}\n        </Box>\n        \n        {/* Content */}\n        <Box {...contentProps} style={{ ...contentStyles, ...contentProps.style }}>\n          {children}\n        </Box>\n        \n        {/* Footer */}\n        <Box style={footerStyles}>\n          {onClose && (\n            <Button \n              variant=\"secondary\" \n              onPress={onClose}\n            >\n              {closeButtonLabel}\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Modal;\n","import React, { useCallback, useMemo } from 'react';\nimport { Box, Text } from 'ink';\nimport { useTheme } from '../../themes';\nimport Button from './Button';\nimport Modal from './Modal';\n\ntype ConfirmDialogProps = {\n  /**\n   * Whether the dialog is open\n   * @default false\n   */\n  isOpen?: boolean;\n  \n  /**\n   * Dialog title\n   * @default 'Confirm'\n   */\n  title?: string;\n  \n  /**\n   * The confirmation message to display\n   */\n  message: string | React.ReactNode;\n  \n  /**\n   * Label for the confirm button\n   * @default 'Confirm'\n   */\n  confirmLabel?: string;\n  \n  /**\n   * Label for the cancel button\n   * @default 'Cancel'\n   */\n  cancelLabel?: string;\n  \n  /**\n   * Variant for the confirm button\n   * @default 'primary'\n   */\n  confirmVariant?: 'primary' | 'danger' | 'success' | 'warning' | 'info' | 'default';\n  \n  /**\n   * Variant for the cancel button\n   * @default 'default'\n   */\n  cancelVariant?: 'primary' | 'danger' | 'success' | 'warning' | 'info' | 'default';\n  \n  /**\n   * Whether to show the cancel button\n   * @default true\n   */\n  showCancel?: boolean;\n  \n  /**\n   * Whether the dialog should close when clicking the backdrop\n   * @default true\n   */\n  closeOnBackdropClick?: boolean;\n  \n  /**\n   * Callback when the dialog is confirmed\n   */\n  onConfirm: () => void;\n  \n  /**\n   * Callback when the dialog is cancelled or closed\n   */\n  onCancel: () => void;\n  \n  /**\n   * Additional styles for the dialog container\n   */\n  style?: React.CSSProperties;\n};\n\n/**\n * A confirmation dialog component for the TUI\n */\nconst ConfirmDialog: React.FC<ConfirmDialogProps> = ({\n  isOpen = false,\n  title = 'Confirm',\n  message,\n  confirmLabel = 'Confirm',\n  cancelLabel = 'Cancel',\n  confirmVariant = 'primary',\n  cancelVariant = 'default',\n  showCancel = true,\n  closeOnBackdropClick = true,\n  onConfirm,\n  onCancel,\n  style = {},\n}) => {\n  const theme = useTheme();\n  \n  // Handle confirm action\n  const handleConfirm = useCallback(() => {\n    onConfirm();\n  }, [onConfirm]);\n  \n  // Handle cancel action\n  const handleCancel = useCallback(() => {\n    onCancel();\n  }, [onCancel]);\n  \n  // Handle backdrop click\n  const handleBackdropClick = useCallback(() => {\n    if (closeOnBackdropClick) {\n      onCancel();\n    }\n  }, [closeOnBackdropClick, onCancel]);\n  \n  // Footer with action buttons\n  const footer = useMemo(() => (\n    <Box justifyContent=\"flex-end\" gap={1}>\n      {showCancel && (\n        <Button \n          variant={cancelVariant} \n          onPress={handleCancel}\n        >\n          {cancelLabel}\n        </Button>\n      )}\n      <Button \n        variant={confirmVariant} \n        onPress={handleConfirm}\n      >\n        {confirmLabel}\n      </Button>\n    </Box>\n  ), [\n    showCancel, \n    cancelVariant, \n    cancelLabel, \n    confirmVariant, \n    confirmLabel, \n    handleCancel, \n    handleConfirm\n  ]);\n  \n  // Content with message\n  const content = useMemo(() => (\n    <Box flexDirection=\"column\" gap={1}>\n      {typeof message === 'string' ? (\n        <Text>{message}</Text>\n      ) : (\n        message\n      )}\n    </Box>\n  ), [message]);\n  \n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={handleCancel}\n      style={style}\n      showBackdrop={true}\n      showCloseButton={false}\n    >\n      <Box flexDirection=\"column\" gap={2}>\n        {content}\n        {footer}\n      </Box>\n    </Modal>\n  );\n};\n\nexport default ConfirmDialog;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Box, Text, useFocus, useInput } from 'ink';\nimport { useTheme } from '../../themes';\n\ntype TooltipPosition = 'top' | 'right' | 'bottom' | 'left';\n\ntype TooltipProps = {\n  /**\n   * The content that will trigger the tooltip on hover/focus\n   */\n  children: React.ReactNode;\n  \n  /**\n   * The tooltip content to display\n   */\n  content: string | React.ReactNode;\n  \n  /**\n   * Position of the tooltip relative to the trigger element\n   * @default 'top'\n   */\n  position?: TooltipPosition;\n  \n  /**\n   * Delay in milliseconds before showing the tooltip\n   * @default 300\n   */\n  delay?: number;\n  \n  /**\n   * Whether the tooltip is disabled\n   * @default false\n   */\n  disabled?: boolean;\n  \n  /**\n   * Additional styles for the tooltip container\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the tooltip content\n   */\n  contentStyle?: React.CSSProperties;\n  \n  /**\n   * Whether to show an arrow pointing to the trigger element\n   * @default true\n   */\n  showArrow?: boolean;\n};\n\n/**\n * A tooltip component that displays additional information on hover or focus\n */\nconst Tooltip: React.FC<TooltipProps> = ({\n  children,\n  content,\n  position = 'top',\n  delay = 300,\n  disabled = false,\n  style = {},\n  contentStyle = {},\n  showArrow = true,\n}) => {\n  const theme = useTheme();\n  const [isVisible, setIsVisible] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isDelayed, setIsDelayed] = useState(true);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  \n  // Handle mouse enter\n  const handleMouseEnter = () => {\n    if (disabled) return;\n    \n    setIsHovered(true);\n    \n    if (delay > 0) {\n      setIsDelayed(true);\n      timeoutRef.current = setTimeout(() => {\n        setIsDelayed(false);\n      }, delay);\n    } else {\n      setIsDelayed(false);\n    }\n  };\n  \n  // Handle mouse leave\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n    setIsDelayed(true);\n    \n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n  \n  // Handle focus\n  const handleFocus = () => {\n    if (disabled) return;\n    setIsFocused(true);\n    setIsDelayed(false);\n  };\n  \n  // Handle blur\n  const handleBlur = () => {\n    setIsFocused(false);\n  };\n  \n  // Update visibility based on hover/focus state\n  useEffect(() => {\n    setIsVisible((isHovered || isFocused) && !isDelayed);\n  }, [isHovered, isFocused, isDelayed]);\n  \n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n  \n  // Calculate tooltip position styles\n  const getPositionStyles = (): React.CSSProperties => {\n    const baseStyles: React.CSSProperties = {\n      position: 'absolute',\n      zIndex: 1000,\n      backgroundColor: theme.colors.backgroundInverse,\n      color: theme.colors.textInverse,\n      paddingLeft: 1,\n      paddingRight: 1,\n      paddingTop: 0,\n      paddingBottom: 0,\n      borderStyle: 'single',\n      borderColor: theme.colors.border,\n      ...contentStyle,\n    };\n    \n    const arrowSize = 1;\n    const arrow = showArrow ? '▶' : ''; // Simple arrow, can be styled better\n    \n    switch (position) {\n      case 'top':\n        return {\n          ...baseStyles,\n          bottom: '100%',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          marginBottom: arrowSize,\n          '::after': {\n            content: `'${arrow}'`,\n            position: 'absolute',\n            top: '100%',\n            left: '50%',\n            transform: 'translateX(-50%) rotate(90deg)',\n          },\n        };\n      case 'right':\n        return {\n          ...baseStyles,\n          left: '100%',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          marginLeft: arrowSize,\n          '::after': {\n            content: `'${arrow}'`,\n            position: 'absolute',\n            left: `-${arrowSize}`,\n            top: '50%',\n            transform: 'translateY(-50%) rotate(180deg)',\n          },\n        };\n      case 'bottom':\n        return {\n          ...baseStyles,\n          top: '100%',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          marginTop: arrowSize,\n          '::after': {\n            content: `'${arrow}'`,\n            position: 'absolute',\n            bottom: '100%',\n            left: '50%',\n            transform: 'translateX(-50%) rotate(-90deg)',\n          },\n        };\n      case 'left':\n        return {\n          ...baseStyles,\n          right: '100%',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          marginRight: arrowSize,\n          '::after': {\n            content: `'${arrow}'`,\n            position: 'absolute',\n            right: `-${arrowSize}`,\n            top: '50%',\n            transform: 'translateY(-50%)',\n          },\n        };\n      default:\n        return baseStyles;\n    }\n  };\n  \n  // Don't render anything if disabled\n  if (disabled) {\n    return <>{children}</>;\n  }\n  \n  return (\n    <Box \n      position=\"relative\" \n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={style}\n    >\n      <Box \n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        tabIndex={0} // Make the trigger focusable\n      >\n        {children}\n      </Box>\n      \n      {isVisible && (\n        <Box {...getPositionStyles()}>\n          {typeof content === 'string' ? (\n            <Text>{content}</Text>\n          ) : (\n            content\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Tooltip;\n","import React from 'react';\nimport { Text } from 'ink';\nimport { useTheme } from '../../themes';\n\ntype BadgeVariant = \n  | 'default'\n  | 'primary'\n  | 'secondary'\n  | 'success'\n  | 'warning'\n  | 'error'\n  | 'info'\n  | 'outline';\n\ntype BadgeSize = 'sm' | 'md' | 'lg';\n\ntype BadgeProps = {\n  /**\n   * The content to display inside the badge\n   */\n  children: React.ReactNode;\n  \n  /**\n   * The visual style variant of the badge\n   * @default 'default'\n   */\n  variant?: BadgeVariant;\n  \n  /**\n   * The size of the badge\n   * @default 'md'\n   */\n  size?: BadgeSize;\n  \n  /**\n   * Whether the badge should have a border\n   * @default true\n   */\n  bordered?: boolean;\n  \n  /**\n   * Whether the badge should have rounded corners\n   * @default true\n   */\n  rounded?: boolean;\n  \n  /**\n   * Custom styles for the badge\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Additional class name for the badge\n   */\n  className?: string;\n};\n\n/**\n * A badge component for displaying status, tags, or labels in the TUI\n */\nconst Badge: React.FC<BadgeProps> = ({\n  children,\n  variant = 'default',\n  size = 'md',\n  bordered = true,\n  rounded = true,\n  style = {},\n  className = '',\n}) => {\n  const theme = useTheme();\n  \n  // Get size-based styles\n  const getSizeStyles = (): React.CSSProperties => {\n    switch (size) {\n      case 'sm':\n        return {\n          paddingLeft: 1,\n          paddingRight: 1,\n          paddingTop: 0,\n          paddingBottom: 0,\n        };\n      case 'lg':\n        return {\n          paddingLeft: 2,\n          paddingRight: 2,\n          paddingTop: 1,\n          paddingBottom: 1,\n        };\n      case 'md':\n      default:\n        return {\n          paddingLeft: 1,\n          paddingRight: 1,\n          paddingTop: 0,\n          paddingBottom: 0,\n        };\n    }\n  };\n  \n  // Get variant-based styles\n  const getVariantStyles = (): React.CSSProperties => {\n    switch (variant) {\n      case 'primary':\n        return {\n          color: theme.colors.primaryForeground,\n          backgroundColor: theme.colors.primary,\n          borderColor: theme.colors.primaryBorder,\n        };\n      case 'secondary':\n        return {\n          color: theme.colors.secondaryForeground,\n          backgroundColor: theme.colors.secondary,\n          borderColor: theme.colors.secondaryBorder,\n        };\n      case 'success':\n        return {\n          color: theme.colors.successForeground,\n          backgroundColor: theme.colors.success,\n          borderColor: theme.colors.successBorder,\n        };\n      case 'warning':\n        return {\n          color: theme.colors.warningForeground,\n          backgroundColor: theme.colors.warning,\n          borderColor: theme.colors.warningBorder,\n        };\n      case 'error':\n        return {\n          color: theme.colors.errorForeground,\n          backgroundColor: theme.colors.error,\n          borderColor: theme.colors.errorBorder,\n        };\n      case 'info':\n        return {\n          color: theme.colors.infoForeground,\n          backgroundColor: theme.colors.info,\n          borderColor: theme.colors.infoBorder,\n        };\n      case 'outline':\n        return {\n          color: theme.colors.text,\n          backgroundColor: 'transparent',\n          borderColor: theme.colors.border,\n        };\n      case 'default':\n      default:\n        return {\n          color: theme.colors.text,\n          backgroundColor: theme.colors.backgroundHover,\n          borderColor: theme.colors.border,\n        };\n    }\n  };\n  \n  // Combine all styles\n  const badgeStyles: React.CSSProperties = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderStyle: bordered ? 'single' : 'hidden',\n    borderRadius: rounded ? 1 : 0,\n    whiteSpace: 'nowrap',\n    ...getSizeStyles(),\n    ...getVariantStyles(),\n    ...style,\n  };\n  \n  return (\n    <Text style={badgeStyles} className={className}>\n      {children}\n    </Text>\n  );\n};\n\nexport default Badge;\n","import React from 'react';\nimport { Box, Text } from 'ink';\nimport { useTheme } from '../../themes';\nimport { BorderBox } from './Box';\n\ntype ColumnDefinition<T> = {\n  /**\n   * Unique key for the column\n   */\n  key: string;\n  \n  /**\n   * Header label for the column\n   */\n  header: string;\n  \n  /**\n   * Function to render the cell content\n   */\n  render: (item: T) => React.ReactNode;\n  \n  /**\n   * Width of the column (in characters or percentage)\n   * @default 'auto'\n   */\n  width?: number | string;\n  \n  /**\n   * Whether the column should be right-aligned\n   * @default false\n   */\n  alignRight?: boolean;\n  \n  /**\n   * Whether the column should be truncated with an ellipsis if content is too long\n   * @default false\n   */\n  truncate?: boolean;\n};\n\ntype TableProps<T> = {\n  /**\n   * Array of data items to display in the table\n   */\n  data: T[];\n  \n  /**\n   * Column definitions for the table\n   */\n  columns: ColumnDefinition<T>[];\n  \n  /**\n   * Key to use for each row (should be unique)\n   */\n  rowKey: keyof T | ((item: T) => string | number);\n  \n  /**\n   * Whether to show the header row\n   * @default true\n   */\n  showHeader?: boolean;\n  \n  /**\n   * Whether to show borders around the table\n   * @default true\n   */\n  bordered?: boolean;\n  \n  /**\n   * Whether to add zebra striping to rows\n   * @default true\n   */\n  striped?: boolean;\n  \n  /**\n   * Whether to highlight rows on hover\n   * @default false\n   */\n  highlightHover?: boolean;\n  \n  /**\n   * Additional styles for the table container\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the header row\n   */\n  headerStyle?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the table rows\n   */\n  rowStyle?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the table cells\n   */\n  cellStyle?: React.CSSProperties;\n};\n\n/**\n * A table component for displaying tabular data in the TUI\n */\nfunction Table<T>({\n  data,\n  columns,\n  rowKey,\n  showHeader = true,\n  bordered = true,\n  striped = true,\n  highlightHover = false,\n  style = {},\n  headerStyle = {},\n  rowStyle = {},\n  cellStyle = {},\n}: TableProps<T>) {\n  const theme = useTheme();\n  \n  // Get the row key from the item\n  const getRowKey = (item: T): string => {\n    if (typeof rowKey === 'function') {\n      return String(rowKey(item));\n    }\n    return String(item[rowKey as keyof T]);\n  };\n  \n  // Calculate column widths\n  const columnWidths = columns.map(col => {\n    if (col.width) return col.width;\n    return 'auto';\n  });\n  \n  // Render the header row\n  const renderHeader = () => {\n    if (!showHeader) return null;\n    \n    return (\n      <Box \n        flexDirection=\"row\"\n        borderStyle={bordered ? 'single' : undefined}\n        borderBottom={bordered}\n        borderColor={theme.colors.border}\n        paddingX={bordered ? 1 : 0}\n        paddingY={bordered ? 0.5 : 0}\n        style={{\n          backgroundColor: theme.colors.backgroundHover,\n          ...headerStyle,\n        }}\n      >\n        {columns.map((col, colIndex) => (\n          <Box\n            key={col.key}\n            width={columnWidths[colIndex]}\n            justifyContent={col.alignRight ? 'flex-end' : 'flex-start'}\n            paddingX={1}\n          >\n            <Text bold>{col.header}</Text>\n          </Box>\n        ))}\n      </Box>\n    );\n  };\n  \n  // Render a single row\n  const renderRow = (item: T, rowIndex: number) => {\n    const key = getRowKey(item);\n    const isEvenRow = rowIndex % 2 === 0;\n    \n    return (\n      <Box\n        key={key}\n        flexDirection=\"row\"\n        borderStyle={bordered && rowIndex < data.length - 1 ? 'single' : undefined}\n        borderBottom={bordered && rowIndex === data.length - 1 ? 'single' : undefined}\n        borderColor={theme.colors.border}\n        paddingX={bordered ? 1 : 0}\n        paddingY={0.5}\n        style={{\n          backgroundColor: striped && isEvenRow ? theme.colors.backgroundHover : 'transparent',\n          ...rowStyle,\n        }}\n        hoverStyle={highlightHover ? { backgroundColor: theme.colors.primaryMuted } : undefined}\n      >\n        {columns.map((col, colIndex) => (\n          <Box\n            key={`${key}-${col.key}`}\n            width={columnWidths[colIndex]}\n            justifyContent={col.alignRight ? 'flex-end' : 'flex-start'}\n            paddingX={1}\n            style={cellStyle}\n          >\n            {col.truncate ? (\n              <Text>{String(col.render(item))}</Text>\n            ) : (\n              <Text>{col.render(item)}</Text>\n            )}\n          </Box>\n        ))}\n      </Box>\n    );\n  };\n  \n  return (\n    <BorderBox \n      borderStyle={bordered ? 'single' : 'hidden'}\n      borderColor={theme.colors.border}\n      style={style}\n    >\n      {renderHeader()}\n      <Box flexDirection=\"column\">\n        {data.map((item, index) => renderRow(item, index))}\n      </Box>\n    </BorderBox>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport { Box, Text } from 'ink';\nimport { useTheme } from '../../themes';\n\ntype CardVariant = 'default' | 'outline' | 'filled' | 'elevated';\n\ntype CardProps = {\n  /**\n   * The content of the card\n   */\n  children: React.ReactNode;\n  \n  /**\n   * The title of the card (optional)\n   */\n  title?: string | React.ReactNode;\n  \n  /**\n   * The footer content of the card (optional)\n   */\n  footer?: string | React.ReactNode;\n  \n  /**\n   * The visual style variant of the card\n   * @default 'default'\n   */\n  variant?: CardVariant;\n  \n  /**\n   * Whether the card is hoverable\n   * @default false\n   */\n  hoverable?: boolean;\n  \n  /**\n   * Whether the card is selected\n   * @default false\n   */\n  selected?: boolean;\n  \n  /**\n   * Whether the card is clickable\n   * @default false\n   */\n  clickable?: boolean;\n  \n  /**\n   * Callback when the card is clicked\n   */\n  onClick?: () => void;\n  \n  /**\n   * Additional styles for the card container\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the card header\n   */\n  headerStyle?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the card body\n   */\n  bodyStyle?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the card footer\n   */\n  footerStyle?: React.CSSProperties;\n  \n  /**\n   * Padding around the card content\n   * @default 1\n   */\n  padding?: number;\n  \n  /**\n   * Border radius of the card\n   * @default 1\n   */\n  borderRadius?: number;\n};\n\n/**\n * A card component for displaying content in a contained, visually distinct area\n */\nconst Card: React.FC<CardProps> = ({\n  children,\n  title,\n  footer,\n  variant = 'default',\n  hoverable = false,\n  selected = false,\n  clickable = false,\n  onClick,\n  style = {},\n  headerStyle = {},\n  bodyStyle = {},\n  footerStyle = {},\n  padding = 1,\n  borderRadius = 1,\n}) => {\n  const theme = useTheme();\n  \n  // Handle click events\n  const handleClick = () => {\n    if (clickable && onClick) {\n      onClick();\n    }\n  };\n  \n  // Get variant styles\n  const getVariantStyles = (): React.CSSProperties => {\n    switch (variant) {\n      case 'outline':\n        return {\n          borderStyle: 'single',\n          borderColor: selected ? theme.colors.primary : theme.colors.border,\n          backgroundColor: 'transparent',\n        };\n      case 'filled':\n        return {\n          borderStyle: 'single',\n          borderColor: selected ? theme.colors.primary : theme.colors.border,\n          backgroundColor: theme.colors.backgroundHover,\n        };\n      case 'elevated':\n        return {\n          borderStyle: 'single',\n          borderColor: selected ? theme.colors.primary : theme.colors.border,\n          borderLeft: 'single',\n          borderRight: 'single',\n          borderBottom: 'single',\n          borderTop: 'single',\n          shadow: true,\n        };\n      case 'default':\n      default:\n        return {\n          borderStyle: 'single',\n          borderColor: selected ? theme.colors.primary : theme.colors.border,\n          backgroundColor: theme.colors.background,\n        };\n    }\n  };\n  \n  // Get hover styles\n  const getHoverStyles = (): React.CSSProperties => {\n    if (!hoverable && !clickable) return {};\n    \n    return {\n      borderColor: theme.colors.primary,\n      cursor: clickable ? 'pointer' : 'default',\n    };\n  };\n  \n  // Render the title\n  const renderTitle = () => {\n    if (!title) return null;\n    \n    return (\n      <Box\n        borderBottomStyle=\"single\"\n        borderColor={theme.colors.border}\n        paddingX={padding}\n        paddingY={0.5}\n        style={{\n          ...headerStyle,\n        }}\n      >\n        {typeof title === 'string' ? (\n          <Text bold>{title}</Text>\n        ) : (\n          title\n        )}\n      </Box>\n    );\n  };\n  \n  // Render the footer\n  const renderFooter = () => {\n    if (!footer) return null;\n    \n    return (\n      <Box\n        borderTopStyle=\"single\"\n        borderColor={theme.colors.border}\n        paddingX={padding}\n        paddingY={0.5}\n        style={{\n          ...footerStyle,\n        }}\n      >\n        {typeof footer === 'string' ? (\n          <Text>{footer}</Text>\n        ) : (\n          footer\n        )}\n      </Box>\n    );\n  };\n  \n  // Base card styles\n  const cardStyles: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius,\n    overflow: 'hidden',\n    ...getVariantStyles(),\n    ...(hoverable || clickable ? {\n      ':hover': getHoverStyles(),\n    } : {}),\n    ...style,\n  };\n  \n  // Body styles\n  const bodyStyles: React.CSSProperties = {\n    padding,\n    ...bodyStyle,\n  };\n  \n  return (\n    <Box \n      style={cardStyles}\n      onClick={handleClick}\n      flexDirection=\"column\"\n    >\n      {renderTitle()}\n      <Box style={bodyStyles}>\n        {children}\n      </Box>\n      {renderFooter()}\n    </Box>\n  );\n};\n\nexport default Card;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Box, Text } from 'ink';\nimport { useTheme } from '../../themes';\nimport { useMeasure } from '../../hooks/useMeasure';\n\ntype CollapsibleProps = {\n  /**\n   * The content to display when expanded\n   */\n  children: React.ReactNode;\n  \n  /**\n   * The title or trigger element that toggles the content\n   */\n  title: string | React.ReactNode;\n  \n  /**\n   * Whether the content is initially expanded\n   * @default false\n   */\n  defaultExpanded?: boolean;\n  \n  /**\n   * Whether the component is controlled externally\n   * @default false\n   */\n  isExpanded?: boolean;\n  \n  /**\n   * Callback when the expanded state changes\n   */\n  onToggle?: (isExpanded: boolean) => void;\n  \n  /**\n   * The character to show when collapsed\n   * @default '▶'\n   */\n  collapsedIcon?: string;\n  \n  /**\n   * The character to show when expanded\n   * @default '▼'\n   */\n  expandedIcon?: string;\n  \n  /**\n   * Additional styles for the container\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the header\n   */\n  headerStyle?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the content\n   */\n  contentStyle?: React.CSSProperties;\n  \n  /**\n   * Whether to show a border around the collapsible\n   * @default false\n   */\n  bordered?: boolean;\n};\n\n/**\n * A collapsible component that can show/hide content with a smooth animation\n */\nconst Collapsible: React.FC<CollapsibleProps> = ({\n  children,\n  title,\n  defaultExpanded = false,\n  isExpanded: controlledExpanded,\n  onToggle,\n  collapsedIcon = '▶',\n  expandedIcon = '▼',\n  style = {},\n  headerStyle = {},\n  contentStyle = {},\n  bordered = false,\n}) => {\n  const theme = useTheme();\n  const [internalExpanded, setInternalExpanded] = useState(defaultExpanded);\n  const [contentHeight, setContentHeight] = useState(0);\n  const contentRef = useRef<HTMLDivElement>(null);\n  \n  // Determine if we're in controlled mode\n  const isControlled = controlledExpanded !== undefined;\n  const expanded = isControlled ? controlledExpanded : internalExpanded;\n  \n  // Measure the content height when it changes\n  const [_, dimensions] = useMeasure(contentRef);\n  const measuredHeight = dimensions?.height || 0;\n  \n  // Update content height when children change\n  useEffect(() => {\n    if (measuredHeight > 0) {\n      setContentHeight(expanded ? measuredHeight : 0);\n    }\n  }, [expanded, measuredHeight]);\n  \n  // Handle toggle\n  const handleToggle = () => {\n    const newExpanded = !expanded;\n    \n    if (!isControlled) {\n      setInternalExpanded(newExpanded);\n    }\n    \n    if (onToggle) {\n      onToggle(newExpanded);\n    }\n  };\n  \n  // Render the header\n  const renderHeader = () => {\n    const icon = expanded ? expandedIcon : collapsedIcon;\n    \n    return (\n      <Box\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        onClick={handleToggle}\n        style={{\n          cursor: 'pointer',\n          paddingLeft: 1,\n          paddingRight: 1,\n          paddingTop: 0.5,\n          paddingBottom: 0.5,\n          ...headerStyle,\n        }}\n      >\n        <Text color={theme.colors.text}>\n          {` ${icon} `}\n        </Text>\n        {typeof title === 'string' ? (\n          <Text>{title}</Text>\n        ) : (\n          title\n        )}\n      </Box>\n    );\n  };\n  \n  // Render the content\n  const renderContent = () => {\n    return (\n      <Box\n        ref={contentRef}\n        style={{\n          overflow: 'hidden',\n          height: contentHeight,\n          transition: 'height 0.2s ease-in-out',\n          ...contentStyle,\n        }}\n      >\n        <Box>\n          {children}\n        </Box>\n      </Box>\n    );\n  };\n  \n  return (\n    <Box\n      flexDirection=\"column\"\n      borderStyle={bordered ? 'single' : undefined}\n      borderColor={theme.colors.border}\n      style={style}\n    >\n      {renderHeader()}\n      {renderContent()}\n    </Box>\n  );\n};\n\n// Named export \nexport { Collapsible };\n// Default export\nexport default Collapsible;\n","import { useState, useRef, useLayoutEffect } from 'react';\n\ntype Dimensions = {\n  width: number;\n  height: number;\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n  x: number;\n  y: number;\n};\n\nconst defaultDims: Dimensions = {\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  x: 0,\n  y: 0,\n};\n\n/**\n * A hook to measure the dimensions of a DOM element\n * @param deps Dependencies that should trigger a re-measure\n * @returns An array containing a ref to attach to the element and its dimensions\n */\nconst useMeasure = <T extends HTMLElement = HTMLDivElement>(\n  deps: React.DependencyList = []\n): [React.RefObject<T>, Dimensions] => {\n  const [dimensions, setDimensions] = useState<Dimensions>(defaultDims);\n  const ref = useRef<T>(null);\n\n  useLayoutEffect(() => {\n    if (!ref.current) return;\n\n    const measure = () => {\n      if (!ref.current) return;\n\n      const rect = ref.current.getBoundingClientRect();\n      \n      setDimensions({\n        width: rect.width,\n        height: rect.height,\n        top: rect.top,\n        left: rect.left,\n        right: rect.right,\n        bottom: rect.bottom,\n        x: rect.x,\n        y: rect.y,\n      });\n    };\n\n    // Initial measurement\n    measure();\n\n    // Set up resize observer for responsive elements\n    // Polyfill for ResizeObserver might be needed in some environments\n    if (typeof ResizeObserver !== 'undefined') {\n      const resizeObserver = new ResizeObserver(measure);\n      if (ref.current) {\n        resizeObserver.observe(ref.current);\n      }\n\n      // Clean up\n      return () => {\n        if (ref.current) {\n          resizeObserver.unobserve(ref.current);\n        }\n        resizeObserver.disconnect();\n      };\n    }\n    \n    // Return empty cleanup function if ResizeObserver is not available\n    return () => {};\n  }, [ref, ...deps]);\n\n  return [ref, dimensions];\n};\n\nexport { useMeasure };\n","import React, { useState, useCallback } from 'react';\nimport { Box, BoxProps, Text } from 'ink';\nimport { useTheme } from '../../themes';\nimport { Collapsible } from './Collapsible';\n\n// Extend BoxProps to include ARIA attributes\ninterface AccessibleBoxProps extends BoxProps {\n  role?: string;\n  'aria-selected'?: boolean;\n  'data-testid'?: string;\n  'data-selected'?: boolean;\n}\n\n// Define TreeNode interface\ninterface TreeNode {\n  /**\n   * The unique identifier for the node\n   */\n  id: string;\n  \n  /**\n   * The display label for the node\n   */\n  label: string;\n  \n  /**\n   * Optional icon to display before the label\n   */\n  icon?: string;\n  \n  /**\n   * Whether the node is expanded by default\n   * @default false\n   */\n  isExpanded?: boolean;\n  \n  /**\n   * Child nodes (for nested structures)\n   */\n  children?: TreeNode[];\n  \n  /**\n   * Additional data associated with the node\n   */\n  data?: Record<string, any>;\n  \n  /**\n   * Whether the node is selectable\n   * @default true\n   */\n  selectable?: boolean;\n  \n  /**\n   * Whether the node is currently selected\n   * @default false\n   */\n  isSelected?: boolean;\n};\n\n// Define TreeViewProps interface\ninterface TreeViewProps {\n  /**\n   * The tree data to display\n   */\n  data: TreeNode[];\n  \n  /**\n   * Callback when a node is selected\n   */\n  onSelect: (node: TreeNode) => void;\n  \n  /**\n   * Callback when a node is expanded/collapsed\n   */\n  onToggle: (node: TreeNode, isExpanded: boolean) => void;\n  \n  /**\n   * The ID of the currently selected node\n   */\n  selectedId?: string | null;\n  \n  /**\n   * The depth of the current level in the tree (used internally for recursion)\n   * @default 0\n   */\n  depth?: number;\n  \n  /**\n   * Additional styles for the tree container\n   */\n  style?: React.CSSProperties;\n  \n  /**\n   * Additional styles for each node\n   */\n  nodeStyle?: React.CSSProperties;\n  \n  /**\n   * Additional styles for node labels\n   */\n  labelStyle?: React.CSSProperties;\n  \n  /**\n   * Additional styles for the selected node\n   */\n  selectedStyle?: React.CSSProperties;\n}\n\n/**\n * A recursive tree view component for displaying hierarchical data\n */\nconst TreeView: React.FC<TreeViewProps> = ({\n  data,\n  onSelect,\n  onToggle,\n  selectedId = null,\n  depth = 0,\n  style = {},\n  nodeStyle: nodeStyleProp = {},\n  labelStyle: labelStyleProp = {},\n  selectedStyle = { backgroundColor: 'yellow' },\n}) => {\n  const theme = useTheme();\n  \n  // Handle node selection\n  const handleSelect = useCallback((node: TreeNode) => {\n    if (node.selectable !== false) {\n      onSelect(node);\n    }\n  }, [onSelect]);\n  \n  // Handle node toggle (expand/collapse)\n  const handleToggle = useCallback((node: TreeNode, isExpanded: boolean) => {\n    onToggle(node, isExpanded);\n  }, [onToggle]);\n  \n  // Render a single tree node\n  const renderNode = (node: TreeNode, index: number): React.ReactNode => {\n    const isSelected = node.id === selectedId;\n    const hasChildren = node.children && node.children.length > 0;\n    \n    // Default styles\n    const defaultNodeStyle: React.CSSProperties = {\n      marginLeft: depth * 2,\n      paddingLeft: 1,\n      paddingRight: 1,\n      ...(node.selectable !== false ? {} : { opacity: 0.7 }),\n    };\n    \n    const defaultLabelStyle: React.CSSProperties = {\n      color: isSelected ? theme.colors.primary : theme.colors.text,\n    };\n    \n    const selectedNodeStyle: React.CSSProperties = isSelected ? {\n      backgroundColor: theme.colors.primaryBackground,\n      ...selectedStyle,\n    } : {};\n    \n    const nodeStyle = {\n      ...defaultNodeStyle,\n      ...(isSelected ? selectedNodeStyle : {}),\n      ...nodeStyleProp,\n      ...(isSelected && selectedStyle ? selectedStyle : {}),\n    };\n\n    const labelStyle = {\n      ...defaultLabelStyle,\n      ...labelStyleProp,\n    };\n\n    // If the node has children, render it as a collapsible\n    if (hasChildren) {\n      return (\n        <Collapsible\n          key={node.id || index}\n          title={\n            <Text style={labelStyle}>\n              {node.icon && <Text>{node.icon} </Text>}\n              {node.label}\n            </Text>\n          }\n          defaultExpanded={node.isExpanded ?? false}\n          onToggle={(isExpanded) => handleToggle(node, isExpanded)}\n          headerStyle={{\n            ...nodeStyle,\n            paddingLeft: 0,\n          }}\n          contentStyle={{\n            paddingLeft: 0,\n          }}\n          data-testid={`collapsible-${node.id}`}\n        >\n          <TreeView\n            data={node.children || []}\n            onSelect={onSelect}\n            onToggle={onToggle}\n            selectedId={selectedId}\n            depth={depth + 1}\n            style={style}\n            nodeStyle={nodeStyleProp}\n            labelStyle={labelStyleProp}\n            selectedStyle={selectedStyle}\n          />\n        </Collapsible>\n      );\n    }\n\n    // Render a leaf node\n    return (\n      <Box \n        key={node.id || index}\n        borderStyle=\"none\"\n        style={nodeStyle}\n        {...{\n          'role': 'treeitem',\n          'aria-selected': isSelected,\n          'data-testid': `tree-item-${node.id}`,\n          'data-selected': isSelected\n        } as AccessibleBoxProps}\n      >\n        <Text \n          style={labelStyle}\n          onClick={() => handleSelect(node)}\n        >\n          {node.icon && <Text>{node.icon} </Text>}\n          {node.label}\n        </Text>\n      </Box>\n    );\n  };\n\n  return (\n    <Box \n      flexDirection=\"column\" \n      style={style}\n      {...{\n        'role': 'tree',\n        'data-testid': 'tree-view'\n      } as AccessibleBoxProps}\n    >\n      {data.map((node, index) => renderNode(node, index))}\n    </Box>\n  );\n};\n\nexport { TreeView };\nexport type { TreeNode, TreeViewProps };\n","import React, { useState, useEffect } from 'react';\nimport { Box, DOMElement } from 'ink';\nimport { useTheme } from '../../themes';\n\ntype TransitionType = 'fade' | 'slide-left' | 'slide-right' | 'slide-up' | 'slide-down' | 'zoom';\n\ninterface TransitionProps {\n  children: React.ReactNode;\n  type?: TransitionType;\n  duration?: number;\n  visible?: boolean;\n  onComplete?: () => void;\n}\n\nexport const Transition: React.FC<TransitionProps> = ({\n  children,\n  type = 'fade',\n  duration = 300,\n  visible = true,\n  onComplete,\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [animationPhase, setAnimationPhase] = useState(0);\n  const theme = useTheme();\n\n  // Ensure animation steps are smooth\n  const ANIMATION_STEPS = 8;\n  const ANIMATION_INTERVAL = duration / ANIMATION_STEPS;\n\n  useEffect(() => {\n    // Start animation when visibility changes\n    if (visible !== isVisible) {\n      setIsAnimating(true);\n      setAnimationPhase(visible ? 0 : ANIMATION_STEPS);\n      \n      // Animation timer\n      const timer = setInterval(() => {\n        setAnimationPhase(prev => {\n          const newPhase = visible ? prev + 1 : prev - 1;\n          \n          // Check if animation is complete\n          if ((visible && newPhase >= ANIMATION_STEPS) || (!visible && newPhase <= 0)) {\n            setIsAnimating(false);\n            setIsVisible(visible);\n            clearInterval(timer);\n            \n            if (onComplete) {\n              onComplete();\n            }\n            \n            return visible ? ANIMATION_STEPS : 0;\n          }\n          \n          return newPhase;\n        });\n      }, ANIMATION_INTERVAL);\n      \n      return () => clearInterval(timer);\n    }\n  }, [visible, isVisible, duration, onComplete]);\n\n  // Calculate animation styles based on type and phase\n  const getAnimationStyles = () => {\n    // Animation progress from 0 to 1\n    const progress = animationPhase / ANIMATION_STEPS;\n    \n    // Fading\n    const opacity = type === 'fade' ? (visible ? progress : 1 - progress) : 1;\n    \n    // Translation\n    let transform = {};\n    const distance = 10; // Distance to translate in characters\n    \n    switch (type) {\n      case 'slide-left':\n        transform = { translateX: visible ? -distance * (1 - progress) : -distance * progress };\n        break;\n      case 'slide-right':\n        transform = { translateX: visible ? distance * (1 - progress) : distance * progress };\n        break;\n      case 'slide-up':\n        transform = { translateY: visible ? distance * (1 - progress) : distance * progress };\n        break;\n      case 'slide-down':\n        transform = { translateY: visible ? -distance * (1 - progress) : -distance * progress };\n        break;\n      case 'zoom':\n        const scale = visible ? 0.5 + (0.5 * progress) : 0.5 + (0.5 * (1 - progress));\n        transform = { scale };\n        break;\n    }\n    \n    return {\n      opacity,\n      ...transform,\n    };\n  };\n\n  // If animation is complete and element is not visible, don't render\n  if (!isAnimating && !isVisible) {\n    return null;\n  }\n\n  // Apply animation styles\n  const styles = getAnimationStyles();\n\n  return (\n    <Box\n      style={{\n        opacity: styles.opacity,\n        transform: styles.transform,\n        transition: `all ${duration}ms`\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default Transition;","import React, { useState, useEffect } from 'react';\nimport { Box, Text } from 'ink';\nimport TutorialOverlay from './TutorialOverlay';\nimport { useTheme } from '../../themes';\n\n// Tutorial steps\nconst tutorialSteps = [\n  {\n    id: 'welcome',\n    element: 'main-menu',\n    title: 'Welcome to SF TUI',\n    content: (\n      <Box flexDirection=\"column\">\n        <Text>Welcome to Salesforce Terminal UI! This tutorial will guide you through the main features of the application.</Text>\n        <Text> </Text>\n        <Text>Press <Text color=\"cyan\" bold>Next</Text> to continue or <Text color=\"red\">Skip Tutorial</Text> to exit.</Text>\n      </Box>\n    ),\n    position: 'right',\n  },\n  {\n    id: 'navigation',\n    element: 'main-menu',\n    title: 'Basic Navigation',\n    content: (\n      <Box flexDirection=\"column\">\n        <Text>You can navigate through the application using:</Text>\n        <Text>• <Text bold>Arrow keys</Text>: Move through menus and lists</Text>\n        <Text>• <Text bold>Enter</Text>: Select an item or confirm an action</Text>\n        <Text>• <Text bold>Esc</Text>: Go back to the previous screen</Text>\n      </Box>\n    ),\n    position: 'right',\n  },\n  {\n    id: 'orgs',\n    element: 'org-manager',\n    title: 'Managing Orgs',\n    content: (\n      <Box flexDirection=\"column\">\n        <Text>The <Text bold>Org Manager</Text> allows you to:</Text>\n        <Text>• View all connected Salesforce orgs</Text>\n        <Text>• Set default orgs and DevHubs</Text>\n        <Text>• Open orgs directly in your browser</Text>\n        <Text>• Log out of orgs when needed</Text>\n      </Box>\n    ),\n    position: 'bottom',\n  },\n  {\n    id: 'metadata',\n    element: 'metadata-tools',\n    title: 'Metadata Tools',\n    content: (\n      <Box flexDirection=\"column\">\n        <Text>The <Text bold>Metadata Tools</Text> help you:</Text>\n        <Text>• Deploy code and configurations to orgs</Text>\n        <Text>• Retrieve metadata from orgs</Text>\n        <Text>• Compare metadata between different environments</Text>\n      </Box>\n    ),\n    position: 'left',\n  },\n  {\n    id: 'run',\n    element: 'run-tools',\n    title: 'Run Tools',\n    content: (\n      <Box flexDirection=\"column\">\n        <Text>The <Text bold>Run Tools</Text> allow you to:</Text>\n        <Text>• Execute Apex code directly</Text>\n        <Text>• Run SOQL queries</Text>\n        <Text>• Trigger flows and processes</Text>\n        <Text>• Analyze results in a structured format</Text>\n      </Box>\n    ),\n    position: 'top',\n  },\n  {\n    id: 'shortcuts',\n    element: 'keyboard-shortcuts',\n    title: 'Keyboard Shortcuts',\n    content: (\n      <Box flexDirection=\"column\">\n        <Text>SF TUI supports keyboard shortcuts:</Text>\n        <Text>• <Text bold>?</Text>: Show help</Text>\n        <Text>• <Text bold>Ctrl+Q</Text>: Quit application</Text>\n        <Text>• <Text bold>Ctrl+S</Text>: Toggle status bar</Text>\n        <Text>• <Text bold>Ctrl+T</Text>: Cycle through themes</Text>\n      </Box>\n    ),\n    position: 'left',\n  },\n  {\n    id: 'settings',\n    element: 'settings',\n    title: 'Settings',\n    content: (\n      <Box flexDirection=\"column\">\n        <Text>The <Text bold>Settings</Text> menu lets you:</Text>\n        <Text>• Change the application theme</Text>\n        <Text>• Configure keyboard shortcuts</Text>\n        <Text>• View and manage other preferences</Text>\n      </Box>\n    ),\n    position: 'right',\n  },\n  {\n    id: 'completion',\n    element: 'main-menu',\n    title: 'Tutorial Complete!',\n    content: (\n      <Box flexDirection=\"column\">\n        <Text>Congratulations! You've completed the basic tutorial.</Text>\n        <Text> </Text>\n        <Text>Remember, you can press <Text bold>?</Text> at any time to get context-sensitive help.</Text>\n        <Text> </Text>\n        <Text>Happy Salesforce development!</Text>\n      </Box>\n    ),\n    position: 'bottom',\n  },\n];\n\n// Persistent storage key\nconst TUTORIAL_COMPLETED_KEY = 'sf-tui-tutorial-completed';\n\ninterface TutorialProps {\n  children: React.ReactNode;\n}\n\nexport const Tutorial: React.FC<TutorialProps> = ({ children }) => {\n  const [showTutorial, setShowTutorial] = useState(false);\n  const [initialStep, setInitialStep] = useState(0);\n  const theme = useTheme();\n\n  // Check if this is first run\n  useEffect(() => {\n    // In a real implementation, this would use localStorage or a config file\n    // For now, we'll just show the tutorial\n    const shouldShowTutorial = true;\n    \n    if (shouldShowTutorial) {\n      // Small delay to let the UI render first\n      const timer = setTimeout(() => {\n        setShowTutorial(true);\n      }, 1000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  // Handle tutorial completion\n  const handleComplete = () => {\n    setShowTutorial(false);\n    \n    // In a real implementation, this would save to localStorage or a config file\n    console.log('Tutorial completed and marked as done');\n  };\n\n  // Handle tutorial skip\n  const handleSkip = () => {\n    setShowTutorial(false);\n    \n    // In a real implementation, this would save to localStorage or a config file\n    console.log('Tutorial skipped and marked as done');\n  };\n\n  // Jump to a specific tutorial step\n  const jumpToStep = (stepId: string) => {\n    const stepIndex = tutorialSteps.findIndex(step => step.id === stepId);\n    if (stepIndex !== -1) {\n      setInitialStep(stepIndex);\n      setShowTutorial(true);\n    }\n  };\n\n  return (\n    <Box position=\"relative\">\n      {children}\n      \n      <TutorialOverlay\n        steps={tutorialSteps}\n        isActive={showTutorial}\n        onComplete={handleComplete}\n        onSkip={handleSkip}\n        initialStep={initialStep}\n      />\n    </Box>\n  );\n};\n\nexport default Tutorial;","import React, { useState, useEffect } from 'react';\nimport { Box, Text } from 'ink';\nimport { useTheme } from '../../themes';\nimport { Transition, CustomBox, Button } from '../common';\n\ninterface TutorialStep {\n  id: string;\n  element: string; // Selector or element identifier\n  title: string;\n  content: string | React.ReactNode;\n  position?: 'top' | 'bottom' | 'left' | 'right';\n}\n\ninterface TutorialOverlayProps {\n  steps: TutorialStep[];\n  isActive: boolean;\n  onComplete: () => void;\n  onSkip: () => void;\n  initialStep?: number;\n}\n\nexport const TutorialOverlay: React.FC<TutorialOverlayProps> = ({\n  steps,\n  isActive,\n  onComplete,\n  onSkip,\n  initialStep = 0,\n}) => {\n  const [currentStepIndex, setCurrentStepIndex] = useState(initialStep);\n  const [showStep, setShowStep] = useState(false);\n  const theme = useTheme();\n\n  // Control visibility based on active state\n  useEffect(() => {\n    if (isActive) {\n      setShowStep(true);\n    } else {\n      setShowStep(false);\n    }\n  }, [isActive]);\n\n  // Get current step\n  const currentStep = steps[currentStepIndex];\n\n  // Handle navigation\n  const nextStep = () => {\n    if (currentStepIndex < steps.length - 1) {\n      setCurrentStepIndex(prev => prev + 1);\n    } else {\n      onComplete();\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStepIndex > 0) {\n      setCurrentStepIndex(prev => prev - 1);\n    }\n  };\n\n  // Skip the tutorial\n  const handleSkip = () => {\n    setShowStep(false);\n    setTimeout(() => {\n      onSkip();\n    }, 300);\n  };\n\n  if (!isActive || !currentStep) return null;\n\n  // Calculate progress\n  const progress = ((currentStepIndex + 1) / steps.length) * 100;\n\n  return (\n    <Transition\n      type=\"fade\"\n      duration={300}\n      visible={showStep}\n    >\n      <Box \n        position=\"absolute\"\n        top={2}\n        right={2}\n        flexDirection=\"column\"\n        width={60}\n      >\n        <CustomBox\n          title={`Tutorial: ${currentStep.title}`}\n          borderStyle=\"round\"\n          borderColor={theme.colors.primary}\n          padding={1}\n        >\n          <Box flexDirection=\"column\">\n            <Box marginBottom={1}>\n              {typeof currentStep.content === 'string' ? (\n                <Text>{currentStep.content}</Text>\n              ) : (\n                currentStep.content\n              )}\n            </Box>\n            \n            {/* Progress bar */}\n            <Box marginY={1}>\n              <Text>\n                {Array(Math.floor(progress / 5)).fill('█').join('')}\n                {Array(20 - Math.floor(progress / 5)).fill('░').join('')}\n                {` ${Math.round(progress)}%`}\n              </Text>\n            </Box>\n            \n            {/* Navigation buttons */}\n            <Box justifyContent=\"space-between\" marginTop={1}>\n              <Box>\n                {currentStepIndex > 0 && (\n                  <Button \n                    label=\"← Back\" \n                    onPress={prevStep} \n                    variant=\"secondary\" \n                    size=\"small\"\n                  />\n                )}\n              </Box>\n              \n              <Box>\n                <Button \n                  label=\"Skip Tutorial\" \n                  onPress={handleSkip} \n                  variant=\"danger\" \n                  size=\"small\"\n                />\n              </Box>\n              \n              <Box>\n                <Button \n                  label={currentStepIndex < steps.length - 1 ? \"Next →\" : \"Finish\"} \n                  onPress={nextStep} \n                  variant=\"primary\" \n                  size=\"small\"\n                />\n              </Box>\n            </Box>\n          </Box>\n        </CustomBox>\n      </Box>\n    </Transition>\n  );\n};\n\nexport default TutorialOverlay;","/**\n * @file MainMenu.tsx\n * @description Main navigation component for SF TUI. Handles the primary menu rendering and routing\n * to different application sections. This is the root component that users interact with after initialization.\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Text, useInput, useApp } from 'ink';\nimport SelectInput, { SelectInputItem } from 'ink-select-input';\nimport chalk from 'chalk';\nimport Spinner from 'ink-spinner';\nimport { OrgManager } from './org/OrgManager';\nimport { ProjectGenerator } from './project/ProjectGenerator';\nimport { AliasManager } from './alias/AliasManager';\nimport { AuthManager } from './auth/AuthManager';\nimport { MetadataTools } from './metadata/MetadataTools';\nimport { RunTools } from './run/RunTools';\nimport { PluginsPanel } from './plugins/PluginsPanel';\nimport { SettingsMenu } from './settings/SettingsMenu';\nimport { ErrorProvider, ErrorBoundary, Transition } from './common';\nimport { Breadcrumb } from './common/Breadcrumb';\nimport { KeyboardShortcuts } from './common/KeyboardShortcuts';\n// Import help context\nimport { useHelp } from '../context/HelpContext';\n// Import package.json version \nimport pkg from '../../package.json';\n\n/**\n * Represents a menu item in the main navigation\n * @interface MenuItem\n * @extends SelectInputItem<string>\n * @property {string} label - Display text for the menu item\n * @property {string} value - Unique identifier for the menu item\n * @property {string} description - Help text shown when the item is selected\n */\ninterface MenuItem extends SelectInputItem<string> {\n  label: string;\n  value: string;\n  description: string;\n}\n\n/**\n * Main navigation menu items configuration\n * Defines the structure and order of items in the main menu\n */\nconst menuItems: MenuItem[] = [\n  {\n    label: '🔄  Org Manager',\n    value: 'org',\n    description: 'Manage your Salesforce orgs (scratch, sandbox, production)'\n  },\n  {\n    label: '🚀  Project Generator',\n    value: 'project',\n    description: 'Create new Salesforce projects and packages'\n  },\n  {\n    label: '🔑  Auth Manager',\n    value: 'auth',\n    description: 'Authenticate with Salesforce orgs'\n  },\n  {\n    label: '🏷️  Alias Manager',\n    value: 'alias',\n    description: 'Manage your Salesforce CLI aliases'\n  },\n  {\n    label: '📦  Metadata Tools',\n    value: 'metadata',\n    description: 'Deploy, retrieve, and manage metadata'\n  },\n  {\n    label: '⚡  Run Tools',\n    value: 'run',\n    description: 'Run Apex, Flows, and more'\n  },\n  {\n    label: '🧩  Plugins',\n    value: 'plugins',\n    description: 'Manage CLI plugins'\n  },\n  {\n    label: '⚙️  Settings',\n    value: 'settings',\n    description: 'Configure application preferences and appearance'\n  },\n  {\n    label: '❌  Exit',\n    value: 'exit',\n    description: 'Exit SF TUI'\n  },\n];\n\n/**\n * MainMenu Component\n * \n * The root navigation component that renders the main menu and handles routing\n * between different sections of the application. It manages:\n * - Menu state and selection\n * - Contextual help display\n * - Splash screen animation\n * - Keyboard navigation\n * \n * @component\n * @example\n * return <MainMenu />\n */\n// Map of menu item values to their display names\nconst MENU_ITEM_NAMES: Record<string, string> = {\n  org: 'Org Manager',\n  project: 'Project Generator',\n  auth: 'Auth Manager',\n  alias: 'Alias Manager',\n  metadata: 'Metadata Tools',\n  run: 'Run Tools',\n  plugins: 'Plugins',\n  settings: 'Settings'\n};\n\nexport const MainMenu = () => {\n  const [selectedItem, setSelectedItem] = useState<string | null>(null);\n  const [showSplash, setShowSplash] = useState<boolean>(true);\n  const [animationFrame, setAnimationFrame] = useState<number>(0);\n  const [showContent, setShowContent] = useState<boolean>(false);\n  const [transitionComplete, setTransitionComplete] = useState<boolean>(false);\n  const [showShortcuts, setShowShortcuts] = useState<boolean>(false);\n  const { exit } = useApp();\n  const { setContextualHelp } = useHelp();\n  \n  /**\n   * Updates the contextual help based on the currently selected menu item\n   * This effect runs whenever the selectedItem changes to ensure help content is relevant\n   * to the current context.\n   */\n  useEffect(() => {\n    if (!selectedItem) {\n      setContextualHelp(['navigation', 'shortcuts', 'themes']);\n    } else {\n      switch (selectedItem) {\n        case 'org':\n          setContextualHelp(['orgs', 'navigation']);\n          break;\n        case 'metadata':\n          setContextualHelp(['metadata', 'orgs']);\n          break;\n        case 'settings':\n          setContextualHelp(['themes', 'shortcuts']);\n          break;\n        default:\n          setContextualHelp(['navigation', 'shortcuts']);\n      }\n    }\n  }, [selectedItem, setContextualHelp]);\n  \n  // Initial splash screen animation effect\n  useEffect(() => {\n    if (showSplash) {\n      const timer = setTimeout(() => {\n        setShowSplash(false);\n      }, 2000);\n      \n      // Animation frames\n      const animation = setInterval(() => {\n        setAnimationFrame(prev => (prev + 1) % 10);\n      }, 100);\n      \n      return () => {\n        clearTimeout(timer);\n        clearInterval(animation);\n      };\n    }\n  }, [showSplash]);\n  \n  // Handle content transitions after splash screen\n  useEffect(() => {\n    if (!showSplash && !showContent) {\n      // Small delay before showing content\n      const timer = setTimeout(() => {\n        setShowContent(true);\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [showSplash, showContent]);\n\n  const renderSplashScreen = () => {\n    // Animated elements\n    const spinnerTypes = ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏'];\n    const spinner = spinnerTypes[animationFrame];\n    \n    return (\n      <Box flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" marginY={2}>\n        <Text color=\"blue\">\n          {chalk.bold.blue('   ████████╗███████╗ █████╗ ███╗   ███╗')}\n        </Text>\n        <Text color=\"blue\">\n          {chalk.bold.blue('   ╚══██╔══╝██╔════╝██╔══██╗████╗ ████║')}\n        </Text>\n        <Text color=\"cyan\">\n          {chalk.bold.cyan('      ██║   █████╗  ███████║██╔████╔██║')}\n        </Text>\n        <Text color=\"cyan\">\n          {chalk.bold.cyan('      ██║   ██╔══╝  ██╔══██║██║╚██╔╝██║')}\n        </Text>\n        <Text color=\"cyanBright\">\n          {chalk.bold.cyanBright('      ██║   ███████╗██║  ██║██║ ╚═╝ ██║')}\n        </Text>\n        <Text color=\"cyanBright\">\n          {chalk.bold.cyanBright('      ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝')}\n        </Text>\n        <Text> </Text>\n        <Text bold color=\"blue\">\n          {chalk.bold.blue('███████╗ █████╗ ██╗     ███████╗███████╗ ██████╗ ██████╗  ██████╗███████╗')}\n        </Text>\n        <Text bold color=\"cyan\">\n          {chalk.bold.cyan('██╔════╝██╔══██╗██║     ██╔════╝██╔════╝██╔═══██╗██╔══██╗██╔════╝██╔════╝')}\n        </Text>\n        <Text bold color=\"cyanBright\">\n          {chalk.bold.cyanBright('███████╗███████║██║     █████╗  ███████╗██║   ██║██████╔╝██║     █████╗  ')}\n        </Text>\n        <Text bold color=\"cyanBright\">\n          {chalk.bold.cyanBright('╚════██║██╔══██║██║     ██╔══╝  ╚════██║██║   ██║██╔══██╗██║     ██╔══╝  ')}\n        </Text>\n        <Text bold color=\"blueBright\">\n          {chalk.bold.blueBright('███████║██║  ██║███████╗███████╗███████║╚██████╔╝██║  ██║╚██████╗███████╗')}\n        </Text>\n        <Text bold color=\"blueBright\">\n          {chalk.bold.blueBright('╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝ ╚═════╝ ╚═╝  ╚═╝ ╚═════╝╚══════╝')}\n        </Text>\n        <Text> </Text>\n        <Text color=\"cyanBright\">\n          {`${spinner} Loading Terminal User Interface...`}\n        </Text>\n      </Box>\n    );\n  };\n\n  const renderHeader = () => (\n    <Box flexDirection=\"column\" marginBottom={1} borderStyle=\"round\" borderColor=\"cyanBright\" padding={1}>\n      <Text bold color=\"cyan\">\n        {chalk.bold.cyanBright('╔═══╗╔═══╗     ╔════╗╔╗ ╔╗╔═══╗')}\n      </Text>\n      <Text bold color=\"cyan\">\n        {chalk.bold.cyanBright('║╔═╗║║╔══╝     ║╔╗╔╗║║║ ║║║╔═╗║')}\n      </Text>\n      <Text bold color=\"cyan\">\n        {chalk.bold.cyanBright('║╚══╗║╚══╗     ╚╝║║╚╝║║ ║║║║ ║║')}\n      </Text>\n      <Text bold color=\"cyan\">\n        {chalk.bold.cyanBright('╚══╗║║╔══╝       ║║  ║║ ║║║║ ║║')}\n      </Text>\n      <Text bold color=\"cyan\">\n        {chalk.bold.cyanBright('║╚═╝║║║          ║║  ║╚═╝║║╚═╝║')}\n      </Text>\n      <Text bold color=\"cyan\">\n        {chalk.bold.cyanBright('╚═══╝╚╝          ╚╝  ╚═══╝╚═══╝')}\n      </Text>\n      <Text> </Text>\n      <Text color=\"gray\" italic>Salesforce Terminal User Interface - Interactive CLI</Text>\n      <Text color=\"gray\" italic>v{pkg.version}</Text>\n      <Text> </Text>\n    </Box>\n  );\n\n  const renderContent = () => {\n    if (!selectedItem) {\n      return (\n        <Box flexDirection=\"column\">\n          <Text bold>What would you like to do?</Text>\n          <SelectInput\n            items={menuItems}\n            onSelect={(item) => {\n              if (item.value === 'exit') {\n                exit();\n                return;\n              }\n              setSelectedItem(item.value);\n            }}\n            itemComponent={({ isSelected = false, label = '' }) => {\n              // Find the menu item to get its description\n              const item = menuItems.find(item => item.label === label);\n              return (\n                <Box>\n                  <Text color={isSelected ? 'cyan' : 'white'}>{label}</Text>\n                  <Text>  </Text>\n                  <Text color=\"gray\">{item?.description}</Text>\n                </Box>\n              );\n            }}\n          />\n        </Box>\n      );\n    }\n\n    // Render the selected component\n    switch (selectedItem) {\n      case 'org':\n        return <OrgManager onBack={() => setSelectedItem(null)} />;\n      case 'project':\n        return <ProjectGenerator onBack={() => setSelectedItem(null)} />;\n      case 'auth':\n        return <AuthManager onBack={() => setSelectedItem(null)} />;\n      case 'alias':\n        return <AliasManager onBack={() => setSelectedItem(null)} />;\n      case 'metadata':\n        return <MetadataTools onBack={() => setSelectedItem(null)} />;\n      case 'run':\n        return <RunTools onBack={() => setSelectedItem(null)} />;\n      case 'plugins':\n        return <PluginsPanel onBack={() => setSelectedItem(null)} />;\n      case 'settings':\n        return <SettingsMenu onBack={() => setSelectedItem(null)} />;\n      default:\n        return null;\n    }\n  };\n\n  // Toggle keyboard shortcuts help\n  const toggleShortcuts = useCallback(() => {\n    setShowShortcuts(prev => !prev);\n  }, []);\n\n  // Handle global keyboard shortcuts\n  useInput((input, key) => {\n    // Toggle shortcuts help\n    if (input === '?') {\n      toggleShortcuts();\n      return;\n    }\n\n    // Handle splash screen\n    if (showSplash && key.return) {\n      setShowSplash(false);\n    }\n  });\n\n  // Get current breadcrumb items\n  const getBreadcrumbs = () => {\n    const items = [{ label: 'Main Menu', active: !selectedItem }];\n    \n    if (selectedItem) {\n      items.push({\n        label: MENU_ITEM_NAMES[selectedItem] || selectedItem,\n        active: true\n      });\n    }\n    \n    return items;\n  };\n\n  // Common keyboard shortcuts\n  const shortcuts = [\n    { key: '↑↓', description: 'Navigate menu items' },\n    { key: 'Enter', description: 'Select menu item' },\n    { key: 'Esc', description: 'Go back' },\n    { key: '?', description: 'Show/hide keyboard shortcuts' },\n  ];\n\n  // Render either splash screen or main menu with transitions\n  return (\n    <ErrorProvider position=\"top\" maxVisibleErrors={2}>\n      <ErrorBoundary componentName=\"MainMenu\">\n        {showSplash ? (\n          <Box flexDirection=\"column\" padding={1} alignItems=\"center\" justifyContent=\"center\">\n            {renderSplashScreen()}\n            <Text color=\"gray\" italic>\n              Press Enter to continue\n            </Text>\n          </Box>\n        ) : (\n          <Box flexDirection=\"column\" padding={1}>\n            <Transition \n              type=\"fade\" \n              duration={400} \n              visible={showContent}\n              onComplete={() => setTransitionComplete(true)}\n            >\n              {renderHeader()}\n            </Transition>\n            \n            <Transition \n              type=\"slide-up\" \n              duration={500} \n              visible={showContent && transitionComplete}\n            >\n              <Box flexDirection=\"column\">\n                {/* Breadcrumb Navigation */}\n                <Breadcrumb items={getBreadcrumbs()} />\n                \n                {/* Main Content */}\n                {renderContent()}\n                \n                {/* Keyboard Shortcuts Help */}\n                <KeyboardShortcuts \n                  shortcuts={shortcuts}\n                  visible={showShortcuts}\n                  onClose={toggleShortcuts}\n                />\n                \n                {/* Help Text */}\n                {!showShortcuts && (\n                  <>\n                    <Text> </Text>\n                    <Text color=\"gray\" italic>\n                      Press <Text bold>?</Text> for keyboard shortcuts\n                    </Text>\n                  </>\n                )}\n              </Box>\n            </Transition>\n          </Box>\n        )}\n      </ErrorBoundary>\n    </ErrorProvider>\n  );\n};\n\nexport default MainMenu;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Text, useInput, useApp } from 'ink';\nimport SelectInput from 'ink-select-input';\nimport chalk from 'chalk';\nimport { execa, ExecaChildProcess } from 'execa';\nimport Spinner from 'ink-spinner';\nimport { ErrorBoundary, useErrors, EnhancedProgressBar } from '../common';\nimport { errorReporter, ErrorCategory, ErrorSeverity } from '../../utils';\nimport { useNotifications } from '../../context/NotificationContext';\n\ntype Org = {\n  alias?: string;\n  username: string;\n  orgId: string;\n  instanceUrl: string;\n  isActive: boolean;\n  isDefaultDevHub: boolean;\n  isDefaultUsername: boolean;\n  connectedStatus: string;\n  status: string;\n};\n\ntype OrgManagerProps = {\n  onBack: () => void;\n};\n\nexport const OrgManager = ({ onBack }: OrgManagerProps) => {\n  // Get access to the error handling system\n  const { errors, dismissError } = useErrors();\n  const { showNotification, updateNotification, dismissNotification } = useNotifications();\n  const [orgs, setOrgs] = useState<Org[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedOrg, setSelectedOrg] = useState<Org | null>(null);\n  const [output, setOutput] = useState<string>('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(false);\n  const [activeNotifications, setActiveNotifications] = useState<Record<string, string>>({});\n\n  // Load orgs on component mount\n  useEffect(() => {\n    loadOrgs();\n  }, []);\n\n  const loadOrgs = async () => {\n    let notificationId = '';\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Show notification for loading orgs\n      notificationId = showNotification({\n        type: 'info',\n        title: 'Loading Orgs',\n        message: 'Fetching org list from Salesforce CLI...',\n        progress: 0,\n        maxProgress: 100\n      });\n      \n      // Run sf org list command\n      const { stdout } = await execa('sf', ['org', 'list', '--json']);\n      \n      // Update notification progress\n      updateNotification(notificationId, {\n        progress: 50,\n        message: 'Processing org data...'\n      });\n      \n      const result = JSON.parse(stdout);\n      \n      if (result.status === 0 && result.result) {\n        const orgList = result.result.nonScratchOrgs.concat(result.result.scratchOrgs || []);\n        setOrgs(orgList);\n        \n        // Complete notification with org count\n        updateNotification(notificationId, {\n          type: 'success',\n          title: 'Orgs Loaded',\n          message: `Found ${orgList.length} Salesforce orgs`,\n          progress: 100,\n          autoDismiss: true,\n          dismissAfter: 3000\n        });\n      } else {\n        setOrgs([]);\n        // Report a warning if no orgs found\n        if (!result.result || \n            ((!result.result.nonScratchOrgs || result.result.nonScratchOrgs.length === 0) && \n             (!result.result.scratchOrgs || result.result.scratchOrgs.length === 0))) {\n          \n          // Update notification to warning\n          updateNotification(notificationId, {\n            type: 'warning',\n            title: 'No Orgs Found',\n            message: 'Use the Auth Manager to log in to a Salesforce org.',\n            progress: 100,\n            autoDismiss: true,\n            dismissAfter: 5000\n          });\n          \n          errorReporter.reportError('No Salesforce orgs found', {\n            severity: ErrorSeverity.LOW,\n            category: ErrorCategory.AUTH,\n            context: 'OrgManager',\n            userAction: 'Use the Auth Manager to log in to a Salesforce org.'\n          });\n        }\n      }\n    } catch (err) {\n      // Update local state for backward compatibility\n      const errorMessage = `Failed to load orgs: ${err instanceof Error ? err.message : String(err)}`;\n      setError(errorMessage);\n      setOrgs([]);\n      \n      // Update notification to error\n      if (notificationId) {\n        updateNotification(notificationId, {\n          type: 'error',\n          title: 'Error Loading Orgs',\n          message: errorMessage,\n          autoDismiss: true,\n          dismissAfter: 5000,\n          actions: [\n            {\n              label: 'Retry',\n              action: loadOrgs\n            }\n          ]\n        });\n      }\n      \n      // Report error to the error reporting system\n      errorReporter.reportError('Failed to load Salesforce orgs', {\n        error: err instanceof Error ? err : new Error(String(err)),\n        severity: ErrorSeverity.HIGH,\n        category: ErrorCategory.COMMAND,\n        context: 'OrgManager.loadOrgs',\n        userAction: 'Check if Salesforce CLI is installed and properly configured.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleOrgSelect = (org: Org) => {\n    setSelectedOrg(org);\n  };\n\n  const runCommand = async (command: string, args: string[] = []) => {\n    try {\n      setIsProcessing(true);\n      setOutput('');\n      \n      // Show notification for long-running operation\n      const notificationTitle = getCommandTitle(command, args);\n      const notificationId = showNotification({\n        type: 'progress',\n        title: notificationTitle,\n        message: `Running: sf ${command} ${args.join(' ')}`,\n        progress: 0,\n        maxProgress: 100,\n        autoDismiss: false\n      });\n      \n      // Track this notification\n      setActiveNotifications(prev => ({ ...prev, [command]: notificationId }));\n      \n      const process = execa('sf', [command, ...args]);\n      let outputText = '';\n      \n      // Stream output\n      process.stdout?.on('data', (data) => {\n        const newOutput = data.toString();\n        outputText += newOutput;\n        setOutput(prev => prev + newOutput);\n        \n        // Update notification progress (approximate)\n        updateNotification(notificationId, {\n          progress: Math.min(95, (outputText.length / 500) * 100),\n          message: `Running: sf ${command} ${args.join(' ')}\\n${newOutput.slice(-50)}`\n        });\n      });\n      \n      process.stderr?.on('data', (data) => {\n        const newOutput = data.toString();\n        outputText += newOutput;\n        setOutput(prev => prev + newOutput);\n        \n        // Update notification with warning\n        updateNotification(notificationId, {\n          type: 'warning',\n          message: `Warning: ${newOutput.slice(-50)}`\n        });\n      });\n      \n      await process;\n      \n      // Complete notification\n      updateNotification(notificationId, {\n        type: 'success',\n        title: `${notificationTitle} - Completed`,\n        message: 'Command completed successfully',\n        progress: 100,\n        autoDismiss: true,\n        dismissAfter: 5000\n      });\n      \n      // Remove notification from tracking\n      setActiveNotifications(prev => {\n        const newState = { ...prev };\n        delete newState[command];\n        return newState;\n      });\n      \n      // Refresh org list after command completes\n      await loadOrgs();\n    } catch (err) {\n      const errorMessage = `Error: ${err instanceof Error ? err.message : String(err)}`;\n      setOutput(errorMessage);\n      \n      // Update notification with error\n      const notificationId = activeNotifications[command];\n      if (notificationId) {\n        updateNotification(notificationId, {\n          type: 'error',\n          title: `Error: ${getCommandTitle(command, args)}`,\n          message: errorMessage,\n          autoDismiss: true,\n          dismissAfter: 8000,\n          actions: [\n            {\n              label: 'Retry',\n              action: () => runCommand(command, args)\n            }\n          ]\n        });\n        \n        // Remove notification from tracking\n        setActiveNotifications(prev => {\n          const newState = { ...prev };\n          delete newState[command];\n          return newState;\n        });\n      }\n      \n      // Report error to the error reporting system\n      errorReporter.reportCommandError(\n        `Failed to execute Salesforce CLI command: sf ${command} ${args.join(' ')}`,\n        err instanceof Error ? err : new Error(String(err)),\n        { command, args }\n      );\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  \n  // Helper to get a user-friendly title for command notifications\n  const getCommandTitle = (command: string, args: string[]): string => {\n    switch (command) {\n      case 'org':\n        if (args.includes('open')) return 'Opening Org';\n        if (args.includes('display')) return 'Refreshing Org';\n        if (args.includes('delete')) return 'Deleting Org';\n        return 'Org Operation';\n        \n      case 'config':\n        if (args.includes('target-org')) return 'Setting Default Org';\n        if (args.includes('target-dev-hub')) return 'Setting Default DevHub';\n        return 'Config Operation';\n        \n      case 'auth':\n        if (args.includes('logout')) return 'Logging Out';\n        return 'Auth Operation';\n        \n      default:\n        return 'Salesforce CLI Operation';\n    }\n  };\n\n  const openOrg = (org: Org) => {\n    runCommand('org', ['open', '-o', org.username]);\n  };\n\n  const setDefaultOrg = (org: Org) => {\n    runCommand('config', ['set', 'target-org', org.username, '--global']);\n  };\n\n  const setDefaultDevHub = (org: Org) => {\n    runCommand('config', ['set', 'target-dev-hub', org.username, '--global']);\n  };\n\n  const refreshOrg = (org: Org) => {\n    runCommand('org', ['display', '-o', org.username, '--verbose']);\n  };\n\n  const deleteOrg = async (org: Org) => {\n    // Check if it's a scratch org first\n    const isScratchOrg = org.status === 'Active' && org.username.includes('test.com');\n    \n    if (isScratchOrg) {\n      // For scratch orgs, use delete command\n      await runCommand('org', ['delete', 'scratch', '-o', org.username, '--no-prompt']);\n    } else {\n      // For other orgs, just remove the auth information\n      await runCommand('auth', ['logout', '-o', org.username, '--no-prompt']);\n    }\n    \n    // Refresh org list after deletion\n    await loadOrgs();\n    setSelectedOrg(null);\n  };\n\n  useInput((input, key) => {\n    if (key.escape) {\n      if (confirmDelete) {\n        setConfirmDelete(false);\n      } else if (selectedOrg) {\n        setSelectedOrg(null);\n      } else {\n        onBack();\n      }\n    }\n  });\n\n  if (isLoading) {\n    return (\n      <Box>\n        <Text><Spinner type=\"dots\" /> Loading orgs...</Text>\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box flexDirection=\"column\">\n        <Text color=\"red\">Error: {error}</Text>\n        <Text>Press ESC to go back</Text>\n      </Box>\n    );\n  }\n\n  if (selectedOrg) {\n    if (confirmDelete) {\n      return (\n        <Box flexDirection=\"column\">\n          <Box marginBottom={1}>\n            <Text bold color=\"red\">⚠️  Delete Org Confirmation</Text>\n          </Box>\n          \n          <Box marginBottom={2}>\n            <Text>Are you sure you want to delete the org <Text bold>{selectedOrg.alias || selectedOrg.username}</Text>?</Text>\n            <Text>This action {selectedOrg.username.includes('test.com') ? 'will PERMANENTLY delete the scratch org' : 'will revoke authentication for this org'}.</Text>\n          </Box>\n          \n          <Box flexDirection=\"column\" marginBottom={2}>\n            <SelectInput\n              items={[\n                { label: '❌ Cancel - Keep this org', value: 'cancel' },\n                { label: '⚠️ Yes, DELETE this org', value: 'confirm' },\n              ]}\n              onSelect={(item) => {\n                if (item.value === 'confirm') {\n                  deleteOrg(selectedOrg);\n                } else {\n                  setConfirmDelete(false);\n                }\n              }}\n            />\n          </Box>\n          \n          <Text color=\"gray\" italic>\n            Press ESC to cancel\n          </Text>\n        </Box>\n      );\n    }\n    \n    return (\n      <Box flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text bold>Org: {selectedOrg.alias || selectedOrg.username}</Text>\n          <Text>  </Text>\n          {selectedOrg.isDefaultUsername && <Text color=\"green\">[Default]</Text>}\n          {selectedOrg.isDefaultDevHub && <Text color=\"blue\"> [DevHub]</Text>}\n        </Box>\n        \n        <Box marginBottom={1}>\n          <Text>Status: {selectedOrg.status}</Text>\n        </Box>\n        \n        <Box marginBottom={2}>\n          <Text>Instance: {selectedOrg.instanceUrl}</Text>\n        </Box>\n        \n        <Box flexDirection=\"column\" marginBottom={2}>\n          <SelectInput\n            items={[\n              { label: 'Open Org in Browser', value: 'open' },\n              { label: 'Set as Default Org', value: 'set-default' },\n              { label: 'Set as Default Dev Hub', value: 'set-dev-hub' },\n              { label: 'Refresh Org Info', value: 'refresh' },\n              { label: 'Delete Org', value: 'delete' },\n              { label: 'Back to List', value: 'back' },\n            ]}\n            onSelect={(item) => {\n              switch (item.value) {\n                case 'open':\n                  openOrg(selectedOrg);\n                  break;\n                case 'set-default':\n                  setDefaultOrg(selectedOrg);\n                  break;\n                case 'set-dev-hub':\n                  setDefaultDevHub(selectedOrg);\n                  break;\n                case 'refresh':\n                  refreshOrg(selectedOrg);\n                  break;\n                case 'delete':\n                  setConfirmDelete(true);\n                  break;\n                case 'back':\n                  setSelectedOrg(null);\n                  break;\n              }\n            }}\n          />\n        </Box>\n        \n        {isProcessing && (\n          <Box>\n            <Text><Spinner type=\"dots\" /> Processing...</Text>\n          </Box>\n        )}\n        \n        {output && (\n          <Box flexDirection=\"column\" borderStyle=\"round\" padding={1}>\n            <Text bold>Output:</Text>\n            <Text>{output}</Text>\n          </Box>\n        )}\n        \n        <Text color=\"gray\" italic>\n          Press ESC to go back\n        </Text>\n      </Box>\n    );\n  }\n\n  return (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Your Salesforce Orgs</Text>\n      </Box>\n      \n      {orgs.length === 0 ? (\n        <Text>No orgs found. Use 'sf org login web' to authenticate with an org.</Text>\n      ) : (\n        <Box flexDirection=\"column\">\n          <SelectInput\n            items={orgs.map(org => ({\n              label: `${org.isDefaultUsername ? '★ ' : '  '}${org.alias || org.username}`,\n              value: org.username,\n              org\n            }))}\n            onSelect={(item: any) => handleOrgSelect(item.org)}\n            itemComponent={({ isSelected, label, org }: { isSelected: boolean, label: string, org: Org }) => (\n              <Box>\n                <Text color={isSelected ? 'cyan' : 'white'}>{label}</Text>\n                <Text>  </Text>\n                <Text color=\"gray\">\n                  {org.instanceUrl} {org.isDefaultDevHub && '(DevHub)'}\n                </Text>\n              </Box>\n            )}\n          />\n        </Box>\n      )}\n      \n      <Box marginTop={1}>\n        <Text>Press ESC to go back</Text>\n      </Box>\n    </Box>\n  );\n};\n\n// Export with ErrorBoundary\nexport default function OrgManagerWithErrorBoundary(props: OrgManagerProps) {\n  return (\n    <ErrorBoundary componentName=\"OrgManager\">\n      <OrgManager {...props} />\n    </ErrorBoundary>\n  );\n};\n","import React, { useState } from 'react';\nimport { Box, Text, useInput, useApp, Newline } from 'ink';\nimport SelectInput from 'ink-select-input';\nimport chalk from 'chalk';\nimport { execa } from 'execa';\nimport Spinner from 'ink-spinner';\nimport { TextInput } from '../common/TextInput';\n\ntype ProjectManagerProps = {\n  onBack: () => void;\n};\n\ntype ProjectType = 'standard' | 'empty' | 'analytics' | 'functions' | 'lwc' | 'pkg';\n\nconst PROJECT_TYPES = [\n  {\n    label: 'Standard Project',\n    value: 'standard',\n    description: 'A standard Salesforce project with the default settings',\n  },\n  {\n    label: 'Empty Project',\n    value: 'empty',\n    description: 'Create an empty Salesforce project',\n  },\n  {\n    label: 'Analytics Project',\n    value: 'analytics',\n    description: 'A project with Analytics (Wave) templates',\n  },\n  {\n    label: 'Functions Project',\n    value: 'functions',\n    description: 'A project with Salesforce Functions support',\n  },\n  {\n    label: 'LWC Project',\n    value: 'lwc',\n    description: 'A project optimized for Lightning Web Components',\n  },\n  {\n    label: 'Package Project',\n    value: 'pkg',\n    description: 'A project for developing unlocked or managed packages',\n  },\n];\n\nexport const ProjectGenerator = ({ onBack }: ProjectManagerProps) => {\n  const [step, setStep] = useState<'type' | 'name' | 'directory' | 'creating'>('type');\n  const [projectType, setProjectType] = useState<ProjectType>('standard');\n  const [projectName, setProjectName] = useState('my-sfdx-project');\n  const [directory, setDirectory] = useState(process.cwd());\n  const [output, setOutput] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [createdProjectPath, setCreatedProjectPath] = useState('');\n\n  useInput((input, key) => {\n    if (key.escape) {\n      if (step === 'type') {\n        onBack();\n      } else {\n        setStep('type');\n      }\n    }\n  });\n\n  const createProject = async () => {\n    setIsCreating(true);\n    setOutput('');\n    \n    try {\n      const args = ['project', 'generate', '--name', projectName];\n      \n      // Add project type specific flags\n      switch (projectType) {\n        case 'empty':\n          args.push('--empty');\n          break;\n        case 'analytics':\n          args.push('--template', 'analytics');\n          break;\n        case 'functions':\n          args.push('--template', 'functions');\n          break;\n        case 'lwc':\n          args.push('--template', 'lwc');\n          break;\n        case 'pkg':\n          args.push('--template', 'package');\n          break;\n        // 'standard' is the default\n      }\n      \n      // Set output directory\n      const projectPath = `${directory}/${projectName}`.replace(/\\/\\//g, '/');\n      args.push('--output-dir', directory);\n      \n      const process = execa('sf', args);\n      \n      // Stream output\n      process.stdout?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      process.stderr?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      await process;\n      \n      setCreatedProjectPath(projectPath);\n      setStep('creating');\n    } catch (error) {\n      setOutput(`Error: ${error instanceof Error ? error.message : String(error)}`);\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  const renderProjectTypeStep = () => (\n    <Box flexDirection=\"column\">\n      <Text bold>Select Project Type</Text>\n      <Text>Choose the type of Salesforce project you'd like to create:</Text>\n      \n      <Box marginTop={1} marginBottom={2}>\n        <SelectInput\n          items={PROJECT_TYPES.map(type => ({\n            ...type,\n            key: type.value,\n          }))}\n          onSelect={(item) => {\n            setProjectType(item.value as ProjectType);\n            setStep('name');\n          }}\n          itemComponent={({ isSelected, label, description }: { isSelected: boolean, label: string, description: string }) => (\n            <Box>\n              <Text color={isSelected ? 'cyan' : 'white'}>{label}</Text>\n              <Text>  </Text>\n              <Text color=\"gray\">{description}</Text>\n            </Box>\n          )}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>Use arrow keys to navigate, Enter to select, ESC to go back</Text>\n    </Box>\n  );\n\n  const renderProjectNameStep = () => (\n    <Box flexDirection=\"column\">\n      <Text bold>Project Name</Text>\n      <Text>Enter a name for your project (alphanumeric and hyphens only):</Text>\n      \n      <Box marginTop={1} marginBottom={2}>\n        <Text>Project name: </Text>\n        <TextInput\n          value={projectName}\n          onChange={setProjectName}\n          onSubmit={() => setStep('directory')}\n          validate={(value) => /^[a-zA-Z0-9-]+$/.test(value) || 'Project name can only contain letters, numbers, and hyphens'}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>Press Enter to continue, ESC to go back</Text>\n    </Box>\n  );\n\n  const renderDirectoryStep = () => (\n    <Box flexDirection=\"column\">\n      <Text bold>Project Directory</Text>\n      <Text>Where would you like to create the project?</Text>\n      \n      <Box marginTop={1} marginBottom={1}>\n        <Text>Directory: </Text>\n        <TextInput\n          value={directory}\n          onChange={setDirectory}\n          onSubmit={createProject}\n        />\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Full path: {directory}/{projectName}</Text>\n      </Box>\n      \n      <Box flexDirection=\"column\" marginBottom={2}>\n        <SelectInput\n          items={[\n            { label: 'Create Project', value: 'create' },\n            { label: 'Change Project Type', value: 'type' },\n            { label: 'Change Project Name', value: 'name' },\n            { label: 'Cancel', value: 'cancel' },\n          ]}\n          onSelect={(item) => {\n            switch (item.value) {\n              case 'create':\n                createProject();\n                break;\n              case 'type':\n                setStep('type');\n                break;\n              case 'name':\n                setStep('name');\n                break;\n              case 'cancel':\n                onBack();\n                break;\n            }\n          }}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>ESC to go back</Text>\n    </Box>\n  );\n\n  const renderCreatingStep = () => (\n    <Box flexDirection=\"column\">\n      {isCreating ? (\n        <>\n          <Text><Spinner type=\"dots\" /> Creating project...</Text>\n          <Box marginTop={1} borderStyle=\"round\" padding={1} height={10} overflow=\"hidden\">\n            <Text>{output || 'Initializing project...'}</Text>\n          </Box>\n        </>\n      ) : createdProjectPath ? (\n        <Box flexDirection=\"column\">\n          <Text color=\"green\">✓ Project created successfully!</Text>\n          <Newline />\n          <Text>Project location: {createdProjectPath}</Text>\n          <Newline />\n          <Text>Next steps:</Text>\n          <Text>  1. <Text color=\"cyan\">cd {createdProjectPath.split('/').pop()}</Text></Text>\n          <Text>  2. <Text color=\"cyan\">sft</Text> to open the TUI in your new project</Text>\n          <Newline />\n          <Text>Press any key to continue...</Text>\n        </Box>\n      ) : (\n        <Box flexDirection=\"column\">\n          <Text color=\"red\">Error creating project</Text>\n          <Box marginTop={1} borderStyle=\"round\" padding={1} height={10} overflow=\"hidden\">\n            <Text>{output || 'Unknown error occurred'}</Text>\n          </Box>\n          <Newline />\n          <Text>Press any key to continue...</Text>\n        </Box>\n      )}\n    </Box>\n  );\n\n  return (\n    <Box flexDirection=\"column\" padding={1}>\n      <Box marginBottom={1}>\n        <Text bold>New Salesforce Project</Text>\n      </Box>\n      \n      {step === 'type' && renderProjectTypeStep()}\n      {step === 'name' && renderProjectNameStep()}\n      {step === 'directory' && renderDirectoryStep()}\n      {step === 'creating' && renderCreatingStep()}\n      \n      {step !== 'creating' && (\n        <Text color=\"gray\" italic>\n          ESC to go back\n        </Text>\n      )}\n    </Box>\n  );\n};\n\nexport default ProjectGenerator;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Text, useInput, useApp, Newline } from 'ink';\nimport SelectInput from 'ink-select-input';\nimport chalk from 'chalk';\nimport { execa } from 'execa';\nimport Spinner from 'ink-spinner';\nimport { TextInput } from '../common/TextInput';\n\ntype Alias = {\n  alias: string;\n  value: string;\n};\n\ntype AliasManagerProps = {\n  onBack: () => void;\n};\n\nexport const AliasManager = ({ onBack }: AliasManagerProps) => {\n  const [aliases, setAliases] = useState<Alias[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [output, setOutput] = useState('');\n  const [selectedAlias, setSelectedAlias] = useState<Alias | null>(null);\n  const [view, setView] = useState<'list' | 'add' | 'edit' | 'delete' | 'info'>('list');\n  const [newAlias, setNewAlias] = useState('');\n  const [aliasValue, setAliasValue] = useState('');\n\n  // Load aliases on component mount\n  useEffect(() => {\n    loadAliases();\n  }, []);\n\n  const loadAliases = async () => {\n    try {\n      setIsLoading(true);\n      setError('');\n      \n      // Run sf alias list command\n      const { stdout } = await execa('sf', ['alias', 'list', '--json']);\n      const result = JSON.parse(stdout);\n      \n      if (result.status === 0 && result.result) {\n        // Convert the result to an array of aliases\n        const aliasList = Object.entries(result.result).map(([alias, value]) => ({\n          alias,\n          value: String(value)\n        }));\n        \n        setAliases(aliasList);\n      } else {\n        setAliases([]);\n      }\n    } catch (err) {\n      setError(`Failed to load aliases: ${err instanceof Error ? err.message : String(err)}`);\n      setAliases([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const runCommand = async (command: string, args: string[] = []) => {\n    try {\n      setOutput('');\n      \n      const process = execa('sf', [command, ...args]);\n      \n      // Stream output\n      process.stdout?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      process.stderr?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      await process;\n      \n      // Refresh aliases after command completes\n      await loadAliases();\n      return true;\n    } catch (err) {\n      setOutput(`Error: ${err instanceof Error ? err.message : String(err)}`);\n      return false;\n    }\n  };\n\n  const handleAddAlias = async () => {\n    if (!newAlias || !aliasValue) {\n      setError('Both alias name and value are required');\n      return;\n    }\n    \n    const success = await runCommand('alias', ['set', newAlias, aliasValue]);\n    if (success) {\n      setNewAlias('');\n      setAliasValue('');\n      setView('list');\n    }\n  };\n\n  const handleDeleteAlias = async (alias: string) => {\n    const success = await runCommand('alias', ['unset', alias]);\n    if (success) {\n      setSelectedAlias(null);\n      setView('list');\n    }\n  };\n\n  useInput((input, key) => {\n    if (key.escape) {\n      if (view !== 'list') {\n        setView('list');\n        setSelectedAlias(null);\n      } else {\n        onBack();\n      }\n    }\n  });\n\n  const renderList = () => (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Your Salesforce CLI Aliases</Text>\n      </Box>\n      \n      {isLoading ? (\n        <Box>\n          <Text><Spinner type=\"dots\" /> Loading aliases...</Text>\n        </Box>\n      ) : error ? (\n        <Text color=\"red\">Error: {error}</Text>\n      ) : aliases.length === 0 ? (\n        <Text>No aliases found. Create one to get started.</Text>\n      ) : (\n        <Box flexDirection=\"column\">\n          <Box marginBottom={1}>\n            <SelectInput\n              items={[\n                ...aliases.map(alias => ({\n                  label: `${alias.alias} = ${alias.value}`,\n                  value: alias.alias,\n                  alias\n                })),\n                { label: '➕ Add New Alias', value: 'add' }\n              ]}\n              onSelect={(item) => {\n                if (item.value === 'add') {\n                  setView('add');\n                } else {\n                  setSelectedAlias((item as any).alias);\n                  setView('info');\n                }\n              }}\n              itemComponent={({ isSelected, label }) => (\n                <Text color={isSelected ? 'cyan' : 'white'}>{label}</Text>\n              )}\n            />\n          </Box>\n        </Box>\n      )}\n      \n      <Box marginTop={1}>\n        <Text>Press ESC to go back</Text>\n      </Box>\n    </Box>\n  );\n\n  const renderAddForm = () => (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Add New Alias</Text>\n      </Box>\n      \n      <Box marginBottom={1} flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text>Alias Name: </Text>\n          <TextInput\n            value={newAlias}\n            onChange={setNewAlias}\n            placeholder=\"my-alias\"\n          />\n        </Box>\n        \n        <Box marginBottom={2}>\n          <Text>Alias Value: </Text>\n          <TextInput\n            value={aliasValue}\n            onChange={setAliasValue}\n            placeholder=\"user@example.com or 00D...\"\n          />\n        </Box>\n        \n        <Box flexDirection=\"column\" marginBottom={2}>\n          <SelectInput\n            items={[\n              { label: 'Create Alias', value: 'create' },\n              { label: 'Cancel', value: 'cancel' },\n            ]}\n            onSelect={(item) => {\n              if (item.value === 'create') {\n                handleAddAlias();\n              } else {\n                setView('list');\n              }\n            }}\n          />\n        </Box>\n      </Box>\n      \n      <Text color=\"gray\" italic>ESC to go back</Text>\n    </Box>\n  );\n\n  const renderAliasInfo = () => {\n    if (!selectedAlias) return null;\n    \n    return (\n      <Box flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text bold>Alias: {selectedAlias.alias}</Text>\n        </Box>\n        \n        <Box marginBottom={2}>\n          <Text>Value: {selectedAlias.value}</Text>\n        </Box>\n        \n        <Box flexDirection=\"column\" marginBottom={2}>\n          <SelectInput\n            items={[\n              { label: 'Edit Alias', value: 'edit' },\n              { label: 'Delete Alias', value: 'delete' },\n              { label: 'Back to List', value: 'back' },\n            ]}\n            onSelect={(item) => {\n              switch (item.value) {\n                case 'edit':\n                  setNewAlias(selectedAlias.alias);\n                  setAliasValue(selectedAlias.value);\n                  setView('edit');\n                  break;\n                case 'delete':\n                  setView('delete');\n                  break;\n                case 'back':\n                  setView('list');\n                  setSelectedAlias(null);\n                  break;\n              }\n            }}\n          />\n        </Box>\n        \n        <Text color=\"gray\" italic>ESC to go back</Text>\n      </Box>\n    );\n  };\n\n  const renderDeleteConfirmation = () => {\n    if (!selectedAlias) return null;\n    \n    return (\n      <Box flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text bold>Delete Alias</Text>\n        </Box>\n        \n        <Box marginBottom={2}>\n          <Text>Are you sure you want to delete the alias '{selectedAlias.alias}'?</Text>\n          <Text>Value: {selectedAlias.value}</Text>\n        </Box>\n        \n        <Box flexDirection=\"column\" marginBottom={2}>\n          <SelectInput\n            items={[\n              { label: '✅ Yes, delete it', value: 'confirm' },\n              { label: '❌ No, keep it', value: 'cancel' },\n            ]}\n            onSelect={(item) => {\n              if (item.value === 'confirm') {\n                handleDeleteAlias(selectedAlias.alias);\n              } else {\n                setView('info');\n              }\n            }}\n          />\n        </Box>\n        \n        <Text color=\"gray\" italic>ESC to go back</Text>\n      </Box>\n    );\n  };\n\n  return (\n    <Box flexDirection=\"column\" padding={1}>\n      <Box marginBottom={1}>\n        <Text bold>Salesforce CLI Alias Manager</Text>\n      </Box>\n      \n      {view === 'list' && renderList()}\n      {view === 'add' && renderAddForm()}\n      {view === 'info' && renderAliasInfo()}\n      {view === 'delete' && renderDeleteConfirmation()}\n      \n      {output && (\n        <Box marginTop={1} borderStyle=\"round\" padding={1}>\n          <Text>{output}</Text>\n        </Box>\n      )}\n      \n      {error && (\n        <Box marginTop={1}>\n          <Text color=\"red\">{error}</Text>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default AliasManager;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Text, useInput, useApp, Newline } from 'ink';\nimport SelectInput from 'ink-select-input';\nimport chalk from 'chalk';\nimport { execa } from 'execa';\nimport Spinner from 'ink-spinner';\nimport open from 'open';\nimport { TextInput } from '../common/TextInput';\nimport { SelectInputItem } from 'ink-select-input';\n\ninterface AuthMethodItem extends SelectInputItem {\n  description: string;\n  requiresInput: boolean;\n}\n\ntype AuthManagerProps = {\n  onBack: () => void;\n};\n\ntype AuthMethod = 'web' | 'jwt' | 'device' | 'token' | 'soap';\n\nconst AUTH_METHODS = [\n  {\n    label: 'Web Login (Recommended)',\n    value: 'web',\n    description: 'Opens a browser window to log in to your org',\n    requiresInput: false,\n  },\n  {\n    label: 'JWT Bearer Flow',\n    value: 'jwt',\n    description: 'Authenticate using a JWT bearer token',\n    requiresInput: true,\n  },\n  {\n    label: 'Device Code Flow',\n    value: 'device',\n    description: 'Authenticate using a device code',\n    requiresInput: false,\n  },\n  {\n    label: 'Access Token',\n    value: 'token',\n    description: 'Authenticate with an existing access token',\n    requiresInput: true,\n  },\n  {\n    label: 'SOAP Username-Password',\n    value: 'soap',\n    description: 'Authenticate with username and password (not recommended)',\n    requiresInput: true,\n  },\n];\n\nexport const AuthManager = ({ onBack }: AuthManagerProps) => {\n  const [step, setStep] = useState<'method' | 'input' | 'authenticating' | 'success' | 'error'>('method');\n  const [selectedMethod, setSelectedMethod] = useState<AuthMethod>('web');\n  const [alias, setAlias] = useState('');\n  const [username, setUsername] = useState('');\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [authUrl, setAuthUrl] = useState('');\n  const [deviceCode, setDeviceCode] = useState('');\n\n  useInput((input, key) => {\n    if (key.escape) {\n      if (step === 'method') {\n        onBack();\n      } else {\n        setStep('method');\n      }\n    }\n  });\n\n  const startAuthFlow = async () => {\n    setIsProcessing(true);\n    setOutput('');\n    setError('');\n    \n    try {\n      const args = ['org', 'login'];\n      let process;\n      \n      switch (selectedMethod) {\n        case 'web':\n          args.push('web', '--browser', 'chrome');\n          if (alias) args.push('--alias', alias);\n          if (username) args.push('--username', username);\n          break;\n          \n        case 'jwt':\n          // This is a simplified example - in a real app, you'd collect these values\n          args.push('jwt', '--username', username, '--jwt-key-file', 'path/to/server.key');\n          if (alias) args.push('--alias', alias);\n          break;\n          \n        case 'device':\n          args.push('device', '--browser', 'chrome');\n          if (alias) args.push('--alias', alias);\n          break;\n          \n        case 'token':\n          // This would be collected from user input\n          args.push('access-token', '--instance-url', 'https://login.salesforce.com', '--access-token', 'YOUR_TOKEN');\n          if (alias) args.push('--alias', alias);\n          break;\n          \n        case 'soap':\n          // This would be collected from user input\n          args.push('soap', '--username', username, '--password', 'YOUR_PASSWORD');\n          if (alias) args.push('--alias', alias);\n          break;\n      }\n      \n      process = execa('sf', args);\n      \n      // Handle output\n      process.stdout?.on('data', (data) => {\n        const output = data.toString();\n        setOutput(prev => prev + output);\n        \n        // Handle web login URL\n        if (selectedMethod === 'web' && output.includes('https://')) {\n          const urlMatch = output.match(/https?:\\/\\/[^\\s]+/);\n          if (urlMatch) {\n            setAuthUrl(urlMatch[0]);\n            open(urlMatch[0]);\n          }\n        }\n        \n        // Handle device code flow\n        if (selectedMethod === 'device') {\n          if (output.includes('https://')) {\n            const urlMatch = output.match(/https?:\\/\\/[^\\s]+/);\n            if (urlMatch) setAuthUrl(urlMatch[0]);\n          }\n          if (output.includes('code:')) {\n            const codeMatch = output.match(/code:\\s*([^\\s]+)/);\n            if (codeMatch) setDeviceCode(codeMatch[1]);\n          }\n        }\n      });\n      \n      process.stderr?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      await process;\n      \n      // If we get here, authentication was successful\n      setStep('success');\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Unknown error occurred');\n      setStep('error');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const renderMethodStep = () => (\n    <Box flexDirection=\"column\">\n      <Text bold>Authentication Method</Text>\n      <Text>Choose how you'd like to authenticate with Salesforce:</Text>\n      \n      <Box marginTop={1} marginBottom={2}>\n        <SelectInput\n          items={AUTH_METHODS.map(method => ({\n            ...method,\n            key: method.value,\n          })) as AuthMethodItem[]}\n          onSelect={(item: AuthMethodItem) => {\n            setSelectedMethod(item.value as AuthMethod);\n            if (item.requiresInput) {\n              setStep('input');\n            } else {\n              setStep('authenticating');\n              startAuthFlow();\n            }\n          }}\n          itemComponent={({ isSelected, label, item }: { isSelected: boolean, label: string, item: AuthMethodItem }) => (\n            <Box>\n              <Text color={isSelected ? 'cyan' : 'white'}>{label}</Text>\n              <Text>  </Text>\n              <Text color=\"gray\">{item.description}</Text>\n            </Box>\n          )}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>Use arrow keys to navigate, Enter to select, ESC to go back</Text>\n    </Box>\n  );\n\n  const renderInputStep = () => {\n    // In a real app, you'd have proper form handling for each auth method\n    return (\n      <Box flexDirection=\"column\">\n        <Text bold>Authentication Details</Text>\n        <Text>Please provide the required information for {selectedMethod} authentication:</Text>\n        \n        <Box marginTop={1} marginBottom={2} flexDirection=\"column\">\n          <Box marginBottom={1}>\n            <Text>Alias (optional): </Text>\n            <TextInput\n              value={alias}\n              onChange={setAlias}\n              placeholder=\"my-org-alias\"\n            />\n          </Box>\n          \n          <Box marginBottom={2}>\n            <Text>Username: </Text>\n            <TextInput\n              value={username}\n              onChange={setUsername}\n              placeholder=\"user@example.com\"\n            />\n          </Box>\n          \n          {/* Additional fields would be rendered here based on auth method */}\n          \n          <Box flexDirection=\"column\" marginTop={1}>\n            <SelectInput\n              items={[\n                { label: 'Authenticate', value: 'auth' },\n                { label: 'Back', value: 'back' },\n              ]}\n              onSelect={(item) => {\n                if (item.value === 'auth') {\n                  setStep('authenticating');\n                  startAuthFlow();\n                } else {\n                  setStep('method');\n                }\n              }}\n            />\n          </Box>\n        </Box>\n        \n        <Text color=\"gray\" italic>ESC to go back</Text>\n      </Box>\n    );\n  };\n\n  const renderAuthenticatingStep = () => (\n    <Box flexDirection=\"column\">\n      {isProcessing ? (\n        <>\n          <Text><Spinner type=\"dots\" /> Authenticating...</Text>\n          \n          {authUrl && (\n            <Box marginTop={1} marginBottom={1}>\n              <Text>Please complete authentication in your browser:</Text>\n              <Text color=\"cyan\" underline>{authUrl}</Text>\n            </Box>\n          )}\n          \n          {deviceCode && (\n            <Box marginTop={1} marginBottom={1}>\n              <Text>Your device code: <Text bold>{deviceCode}</Text></Text>\n            </Box>\n          )}\n          \n          <Box marginTop={1} borderStyle=\"round\" padding={1} height={10} overflow=\"hidden\">\n            <Text>{output || 'Starting authentication...'}</Text>\n          </Box>\n        </>\n      ) : (\n        <Text>Authentication complete!</Text>\n      )}\n    </Box>\n  );\n\n  const renderSuccessStep = () => (\n    <Box flexDirection=\"column\">\n      <Text color=\"green\">✓ Authentication successful!</Text>\n      <Newline />\n      <Text>You are now authenticated with Salesforce.</Text>\n      {alias && <Text>Alias: <Text bold>{alias}</Text></Text>}\n      <Newline />\n      <Text>Press any key to continue...</Text>\n    </Box>\n  );\n\n  const renderErrorStep = () => (\n    <Box flexDirection=\"column\">\n      <Text color=\"red\">✗ Authentication failed</Text>\n      <Newline />\n      <Text>Error: {error || 'Unknown error occurred'}</Text>\n      <Newline />\n      <Box borderStyle=\"round\" padding={1} height={10} overflow=\"hidden\">\n        <Text>{output || 'No additional details available'}</Text>\n      </Box>\n      <Newline />\n      <Text>Press any key to continue...</Text>\n    </Box>\n  );\n\n  return (\n    <Box flexDirection=\"column\" padding={1}>\n      <Box marginBottom={1}>\n        <Text bold>Salesforce Authentication</Text>\n      </Box>\n      \n      {step === 'method' && renderMethodStep()}\n      {step === 'input' && renderInputStep()}\n      {step === 'authenticating' && renderAuthenticatingStep()}\n      {step === 'success' && renderSuccessStep()}\n      {step === 'error' && renderErrorStep()}\n      \n      {(step === 'success' || step === 'error') && (\n        <Box marginTop={1}>\n          <Text>Press any key to continue...</Text>\n        </Box>\n      )}\n      \n      {step !== 'success' && step !== 'error' && step !== 'authenticating' && (\n        <Text color=\"gray\" italic>\n          ESC to go back\n        </Text>\n      )}\n    </Box>\n  );\n};\n\nexport default AuthManager;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Text, useInput, useApp, Newline } from 'ink';\nimport SelectInput from 'ink-select-input';\nimport chalk from 'chalk';\nimport { execa } from 'execa';\nimport Spinner from 'ink-spinner';\nimport { TextInput } from '../common/TextInput';\nimport { ErrorBoundary, useErrors } from '../common';\nimport { errorReporter, ErrorCategory, ErrorSeverity } from '../../utils';\n\ntype MetadataTool = {\n  id: string;\n  label: string;\n  description: string;\n  requiresTargetOrg?: boolean;\n  requiresSourceOrg?: boolean;\n  requiresManifest?: boolean;\n  requiresMetadata?: boolean;\n};\n\ntype MetadataToolsProps = {\n  onBack: () => void;\n};\n\nconst METADATA_TOOLS: MetadataTool[] = [\n  {\n    id: 'deploy',\n    label: 'Deploy Metadata',\n    description: 'Deploy metadata to an org',\n    requiresTargetOrg: true,\n    requiresManifest: true,\n  },\n  {\n    id: 'retrieve',\n    label: 'Retrieve Metadata',\n    description: 'Retrieve metadata from an org',\n    requiresSourceOrg: true,\n    requiresManifest: true,\n  },\n  {\n    id: 'deploy-dir',\n    label: 'Deploy Directory',\n    description: 'Deploy all metadata from a directory',\n    requiresTargetOrg: true,\n  },\n  {\n    id: 'retrieve-dir',\n    label: 'Retrieve to Directory',\n    description: 'Retrieve metadata to a directory',\n    requiresSourceOrg: true,\n  },\n  {\n    id: 'validate',\n    label: 'Validate Deployment',\n    description: 'Validate a deployment without making changes',\n    requiresTargetOrg: true,\n    requiresManifest: true,\n  },\n  {\n    id: 'list',\n    label: 'List Metadata',\n    description: 'List metadata in an org',\n    requiresSourceOrg: true,\n  },\n  {\n    id: 'describe',\n    label: 'Describe Metadata',\n    description: 'Describe metadata types in an org',\n    requiresSourceOrg: true,\n  },\n];\n\ntype Org = {\n  username: string;\n  isDefault: boolean;\n  alias?: string;\n  connectedStatus?: string;\n  isScratch?: boolean;\n};\n\nexport const MetadataTools = ({ onBack }: MetadataToolsProps) => {\n  // Get access to the error handling system\n  const { errors, dismissError } = useErrors();\n  const [selectedTool, setSelectedTool] = useState<MetadataTool | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [targetOrg, setTargetOrg] = useState('');\n  const [sourceOrg, setSourceOrg] = useState('');\n  const [manifestFile, setManifestFile] = useState('manifest/package.xml');\n  const [metadata, setMetadata] = useState('');\n  const [directory, setDirectory] = useState('force-app/main/default');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [orgs, setOrgs] = useState<Org[]>([]);\n\n  // Load orgs from SF CLI\n  const loadOrgs = async () => {\n    try {\n      setIsLoading(true);\n      const { stdout } = await execa('sf', ['org', 'list', '--json']);\n      \n      // Parse the JSON output\n      const result = JSON.parse(stdout);\n      \n      if (result.status === 0 && result.result && Array.isArray(result.result.nonScratchOrgs)) {\n        // Return both scratch and non-scratch orgs\n        const allOrgs = [\n          ...(result.result.nonScratchOrgs || []).map((org: any) => ({\n            username: org.username,\n            isDefault: org.isDefaultUsername || false,\n            alias: org.alias || '',\n            connectedStatus: org.connectedStatus || '',\n          })),\n          ...(result.result.scratchOrgs || []).map((org: any) => ({\n            username: org.username,\n            isDefault: org.isDefaultUsername || false,\n            alias: org.alias || '',\n            connectedStatus: org.connectedStatus || '',\n            isScratch: true,\n          })),\n        ];\n        \n        return allOrgs;\n      }\n      \n      errorReporter.reportError('Failed to load orgs', {\n        severity: ErrorSeverity.MEDIUM,\n        category: ErrorCategory.SYSTEM,\n        context: 'MetadataTools.loadOrgs',\n        details: { result },\n      });\n      \n      return [];\n    } catch (err) {\n      errorReporter.reportCommandError(\n        'Failed to load orgs from Salesforce CLI',\n        err instanceof Error ? err : new Error(String(err)),\n        { command: 'sf org list --json' }\n      );\n      return [];\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const runCommand = async (command: string, args: string[] = []) => {\n    try {\n      setIsProcessing(true);\n      setOutput('');\n      setError('');\n      \n      const process = execa('sf', [command, ...args]);\n      \n      // Stream output\n      process.stdout?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      process.stderr?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      await process;\n      return true;\n    } catch (err) {\n      const errorMessage = `Error: ${err instanceof Error ? err.message : String(err)}`;\n      setError(errorMessage);\n      \n      // Report error to the error reporting system\n      errorReporter.reportCommandError(\n        `Failed to execute Salesforce CLI command: sf ${command} ${args.join(' ')}`,\n        err instanceof Error ? err : new Error(String(err)),\n        { command, args }\n      );\n      \n      return false;\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleToolSelect = (tool: MetadataTool) => {\n    setSelectedTool(tool);\n  };\n\n  const executeTool = async () => {\n    if (!selectedTool) return;\n    \n    try {\n      setIsProcessing(true);\n      setOutput('');\n      setError('');\n      \n      let command = 'project';\n      const args: string[] = [];\n      \n      // Validate required fields\n      if (selectedTool.requiresTargetOrg && !targetOrg) {\n        setError('Target org is required for this operation');\n        errorReporter.reportValidationError(\n          `Target org is required for the ${selectedTool.label} operation`,\n          undefined,\n          { tool: selectedTool.id }\n        );\n        setIsProcessing(false);\n        return;\n      }\n      \n      if (selectedTool.requiresSourceOrg && !sourceOrg) {\n        setError('Source org is required for this operation');\n        errorReporter.reportValidationError(\n          `Source org is required for the ${selectedTool.label} operation`,\n          undefined,\n          { tool: selectedTool.id }\n        );\n        setIsProcessing(false);\n        return;\n      }\n      \n      if (selectedTool.requiresManifest && !manifestFile) {\n        setError('Manifest file is required for this operation');\n        errorReporter.reportValidationError(\n          `Manifest file is required for the ${selectedTool.label} operation`,\n          undefined,\n          { tool: selectedTool.id }\n        );\n        setIsProcessing(false);\n        return;\n      }\n      \n      switch (selectedTool.id) {\n        case 'deploy':\n          command = 'project';\n          args.push('deploy', 'start', '--manifest', manifestFile);\n          if (targetOrg) args.push('--target-org', targetOrg);\n          break;\n          \n        case 'retrieve':\n          command = 'project';\n          args.push('retrieve', 'start', '--manifest', manifestFile);\n          if (sourceOrg) args.push('--source-org', sourceOrg);\n          break;\n          \n        case 'deploy-dir':\n          command = 'project';\n          args.push('deploy', 'start', '--source-dir', directory);\n          if (targetOrg) args.push('--target-org', targetOrg);\n          break;\n          \n        case 'retrieve-dir':\n          command = 'project';\n          args.push('retrieve', 'start', '--output-dir', directory);\n          if (sourceOrg) args.push('--source-org', sourceOrg);\n          break;\n          \n        case 'validate':\n          command = 'project';\n          args.push('deploy', 'validate', '--manifest', manifestFile);\n          if (targetOrg) args.push('--target-org', targetOrg);\n          break;\n          \n        case 'list':\n          command = 'org';\n          args.push('list', 'metadata');\n          if (sourceOrg) args.push('--target-org', sourceOrg);\n          if (metadata) args.push('--metadata', metadata);\n          break;\n          \n        case 'describe':\n          command = 'org';\n          args.push('describe', 'metadata');\n          if (sourceOrg) args.push('--target-org', sourceOrg);\n          break;\n      }\n      \n      await runCommand(command, args);\n    } catch (err) {\n      const errorMessage = `Failed to execute ${selectedTool.label}: ${err instanceof Error ? err.message : String(err)}`;\n      setError(errorMessage);\n      \n      // Report error to the error reporting system\n      errorReporter.reportError(`Failed to execute ${selectedTool.label}`, {\n        error: err instanceof Error ? err : new Error(String(err)),\n        severity: ErrorSeverity.MEDIUM,\n        category: ErrorCategory.COMMAND,\n        context: 'MetadataTools.executeTool',\n        details: { tool: selectedTool },\n        userAction: 'Check the command parameters and try again.'\n      });\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Load orgs when component is mounted\n  useEffect(() => {\n    const fetchOrgs = async () => {\n      const loadedOrgs = await loadOrgs();\n      setOrgs(loadedOrgs);\n    };\n    \n    fetchOrgs();\n  }, []);\n  \n  useInput((input, key) => {\n    if (key.escape) {\n      if (selectedTool) {\n        setSelectedTool(null);\n      } else {\n        onBack();\n      }\n    }\n  });\n\n  const renderToolList = () => (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Metadata Tools</Text>\n      </Box>\n      \n      <Box marginBottom={2}>\n        <SelectInput\n          items={METADATA_TOOLS.map(tool => ({\n            ...tool,\n            label: `${tool.label} - ${tool.description}`,\n            value: tool.id,\n          }))}\n          onSelect={(item) => handleToolSelect(item as unknown as MetadataTool)}\n          itemComponent={({ isSelected, label }) => (\n            <Text color={isSelected ? 'cyan' : 'white'}>{label}</Text>\n          )}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>Use arrow keys to navigate, Enter to select, ESC to go back</Text>\n    </Box>\n  );\n\n  const renderToolForm = () => {\n    if (!selectedTool) return null;\n    \n    return (\n      <Box flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text bold>{selectedTool.label}</Text>\n        </Box>\n        \n        <Box marginBottom={1}>\n          <Text>{selectedTool.description}</Text>\n        </Box>\n        \n        <Box flexDirection=\"column\" marginTop={1}>\n          {selectedTool.requiresTargetOrg && (\n            <Box marginBottom={1} flexDirection=\"column\">\n              <Text>Target Org:</Text>\n              {orgs.length > 0 ? (\n                <Box marginTop={1}>\n                  <SelectInput\n                    items={orgs.map(org => ({\n                      label: `${org.username}${org.alias ? ` (${org.alias})` : ''}${org.isDefault ? ' [default]' : ''}`,\n                      value: org.username\n                    }))}\n                    onSelect={(item) => setTargetOrg(item.value)}\n                  />\n                </Box>\n              ) : isLoading ? (\n                <Box marginTop={1}>\n                  <Text><Spinner type=\"dots\" /> Loading orgs...</Text>\n                </Box>\n              ) : (\n                <Box marginTop={1}>\n                  <TextInput\n                    value={targetOrg}\n                    onChange={setTargetOrg}\n                    placeholder=\"username or alias\"\n                  />\n                  <Text color=\"gray\" marginLeft={1}>(No orgs found. Manual entry required)</Text>\n                </Box>\n              )}\n            </Box>\n          )}\n          \n          {selectedTool.requiresSourceOrg && (\n            <Box marginBottom={1} flexDirection=\"column\">\n              <Text>Source Org:</Text>\n              {orgs.length > 0 ? (\n                <Box marginTop={1}>\n                  <SelectInput\n                    items={orgs.map(org => ({\n                      label: `${org.username}${org.alias ? ` (${org.alias})` : ''}${org.isDefault ? ' [default]' : ''}`,\n                      value: org.username\n                    }))}\n                    onSelect={(item) => setSourceOrg(item.value)}\n                  />\n                </Box>\n              ) : isLoading ? (\n                <Box marginTop={1}>\n                  <Text><Spinner type=\"dots\" /> Loading orgs...</Text>\n                </Box>\n              ) : (\n                <Box marginTop={1}>\n                  <TextInput\n                    value={sourceOrg}\n                    onChange={setSourceOrg}\n                    placeholder=\"username or alias\"\n                  />\n                  <Text color=\"gray\" marginLeft={1}>(No orgs found. Manual entry required)</Text>\n                </Box>\n              )}\n            </Box>\n          )}\n          \n          {selectedTool.requiresManifest && (\n            <Box marginBottom={1}>\n              <Text>Manifest File: </Text>\n              <TextInput\n                value={manifestFile}\n                onChange={setManifestFile}\n                placeholder=\"path/to/package.xml\"\n              />\n            </Box>\n          )}\n          \n          {(selectedTool.id === 'deploy-dir' || selectedTool.id === 'retrieve-dir') && (\n            <Box marginBottom={1}>\n              <Text>Directory: </Text>\n              <TextInput\n                value={directory}\n                onChange={setDirectory}\n                placeholder=\"path/to/directory\"\n              />\n            </Box>\n          )}\n          \n          {selectedTool.id === 'list' && (\n            <Box marginBottom={1}>\n              <Text>Metadata Type (optional): </Text>\n              <TextInput\n                value={metadata}\n                onChange={setMetadata}\n                placeholder=\"ApexClass,CustomObject,...\"\n              />\n            </Box>\n          )}\n          \n          <Box marginTop={2} marginBottom={2}>\n            <SelectInput\n              items={[\n                { label: 'Run Command', value: 'run' },\n                { label: 'Back to Tools', value: 'back' },\n              ]}\n              onSelect={(item) => {\n                if (item.value === 'run') {\n                  executeTool();\n                } else {\n                  setSelectedTool(null);\n                }\n              }}\n            />\n          </Box>\n        </Box>\n        \n        <Text color=\"gray\" italic>ESC to go back</Text>\n      </Box>\n    );\n  };\n\n  const renderOutput = () => {\n    if (!output && !error) return null;\n    \n    return (\n      <Box marginTop={2} flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text bold>Output:</Text>\n        </Box>\n        <Box borderStyle=\"round\" padding={1} height={10} overflow=\"hidden\">\n          <Text>{error || output}</Text>\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <Box flexDirection=\"column\" padding={1}>\n      {isProcessing ? (\n        <Box>\n          <Text><Spinner type=\"dots\" /> Processing...</Text>\n        </Box>\n      ) : selectedTool ? (\n        <>\n          {renderToolForm()}\n          {renderOutput()}\n        </>\n      ) : (\n        renderToolList()\n      )}\n    </Box>\n  );\n};\n\n// Export with ErrorBoundary\nexport default function MetadataToolsWithErrorBoundary(props: MetadataToolsProps) {\n  return (\n    <ErrorBoundary componentName=\"MetadataTools\">\n      <MetadataTools {...props} />\n    </ErrorBoundary>\n  );\n};\n","import React, { useState } from 'react';\nimport { Box, Text, useInput, useApp, Newline } from 'ink';\nimport SelectInput from 'ink-select-input';\nimport chalk from 'chalk';\nimport { execa } from 'execa';\nimport Spinner from 'ink-spinner';\nimport { TextInput } from '../common/TextInput';\n\ntype RunTool = {\n  id: string;\n  label: string;\n  description: string;\n  requiresTargetOrg?: boolean;\n};\n\ntype RunToolsProps = {\n  onBack: () => void;\n};\n\nconst RUN_TOOLS: RunTool[] = [\n  {\n    id: 'apex',\n    label: 'Execute Anonymous Apex',\n    description: 'Execute anonymous Apex code',\n    requiresTargetOrg: true,\n  },\n  {\n    id: 'flow',\n    label: 'Run Flow',\n    description: 'Run a Flow or Process Builder flow',\n    requiresTargetOrg: true,\n  },\n  {\n    id: 'test',\n    label: 'Run Tests',\n    description: 'Run Apex tests',\n    requiresTargetOrg: true,\n  },\n  {\n    id: 'soql',\n    label: 'Execute SOQL Query',\n    description: 'Run a SOQL query',\n    requiresTargetOrg: true,\n  },\n  {\n    id: 'data-tree',\n    label: 'View Data Tree',\n    description: 'Explore sObject data relationships',\n    requiresTargetOrg: true,\n  },\n];\n\nexport const RunTools = ({ onBack }: RunToolsProps) => {\n  const [selectedTool, setSelectedTool] = useState<RunTool | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [targetOrg, setTargetOrg] = useState('');\n  const [apexCode, setApexCode] = useState('System.debug(\\'Hello from SF TUI!\\');');\n  const [flowName, setFlowName] = useState('');\n  const [soqlQuery, setSoqlQuery] = useState('SELECT Id, Name FROM Account LIMIT 10');\n  const [testClasses, setTestClasses] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const runCommand = async (command: string, args: string[] = []) => {\n    try {\n      setIsProcessing(true);\n      setOutput('');\n      setError('');\n      \n      const process = execa('sf', [command, ...args]);\n      \n      // Stream output\n      process.stdout?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      process.stderr?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      await process;\n      return true;\n    } catch (err) {\n      setError(`Error: ${err instanceof Error ? err.message : String(err)}`);\n      return false;\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleToolSelect = (tool: RunTool) => {\n    setSelectedTool(tool);\n  };\n\n  const executeTool = async () => {\n    if (!selectedTool) return;\n    \n    try {\n      setIsProcessing(true);\n      setOutput('');\n      setError('');\n      \n      let command = 'data';\n      const args: string[] = [];\n      \n      switch (selectedTool.id) {\n        case 'apex':\n          command = 'apex';\n          args.push('run', '--code', `\"${apexCode}\"`);\n          if (targetOrg) args.push('--target-org', targetOrg);\n          break;\n          \n        case 'flow':\n          command = 'flow';\n          args.push('run', '--flow', flowName);\n          if (targetOrg) args.push('--target-org', targetOrg);\n          break;\n          \n        case 'test':\n          command = 'apex';\n          args.push('run', 'test');\n          if (testClasses) args.push('--class-names', testClasses);\n          if (targetOrg) args.push('--target-org', targetOrg);\n          break;\n          \n        case 'soql':\n          command = 'data';\n          args.push('query', '--query', `\"${soqlQuery}\"`);\n          if (targetOrg) args.push('--target-org', targetOrg);\n          break;\n          \n        case 'data-tree':\n          command = 'data';\n          args.push('tree', 'view');\n          if (targetOrg) args.push('--target-org', targetOrg);\n          break;\n      }\n      \n      await runCommand(command, args);\n    } catch (err) {\n      setError(`Failed to execute ${selectedTool.label}: ${err instanceof Error ? err.message : String(err)}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  useInput((input, key) => {\n    if (key.escape) {\n      if (selectedTool) {\n        setSelectedTool(null);\n      } else {\n        onBack();\n      }\n    }\n  });\n\n  const renderToolList = () => (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Run Tools</Text>\n      </Box>\n      \n      <Box marginBottom={2}>\n        <SelectInput\n          items={RUN_TOOLS.map(tool => ({\n            ...tool,\n            label: `${tool.label} - ${tool.description}`,\n            value: tool.id,\n          }))}\n          onSelect={(item) => handleToolSelect(item as unknown as RunTool)}\n          itemComponent={({ isSelected, label }) => (\n            <Text color={isSelected ? 'cyan' : 'white'}>{label}</Text>\n          )}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>Use arrow keys to navigate, Enter to select, ESC to go back</Text>\n    </Box>\n  );\n\n  const renderApexTool = () => (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Execute Anonymous Apex</Text>\n      </Box>\n      \n      <Box marginBottom={1}>\n        <Text>Enter your Apex code:</Text>\n      </Box>\n      \n      <Box marginBottom={2} borderStyle=\"round\" padding={1} height={10} overflow=\"hidden\">\n        <TextInput\n          value={apexCode}\n          onChange={setApexCode}\n          multiline\n          onSubmit={executeTool}\n        />\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Target Org: </Text>\n        <TextInput\n          value={targetOrg}\n          onChange={setTargetOrg}\n          placeholder=\"username or alias\"\n        />\n      </Box>\n      \n      <Box marginTop={1} marginBottom={2}>\n        <SelectInput\n          items={[\n            { label: 'Execute', value: 'run' },\n            { label: 'Back to Tools', value: 'back' },\n          ]}\n          onSelect={(item) => {\n            if (item.value === 'run') {\n              executeTool();\n            } else {\n              setSelectedTool(null);\n            }\n          }}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>ESC to go back</Text>\n    </Box>\n  );\n\n  const renderFlowTool = () => (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Run Flow</Text>\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Flow API Name: </Text>\n        <TextInput\n          value={flowName}\n          onChange={setFlowName}\n          placeholder=\"My_Flow_API_Name\"\n        />\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Target Org: </Text>\n        <TextInput\n          value={targetOrg}\n          onChange={setTargetOrg}\n          placeholder=\"username or alias\"\n        />\n      </Box>\n      \n      <Box marginTop={1} marginBottom={2}>\n        <SelectInput\n          items={[\n            { label: 'Run Flow', value: 'run' },\n            { label: 'Back to Tools', value: 'back' },\n          ]}\n          onSelect={(item) => {\n            if (item.value === 'run') {\n              executeTool();\n            } else {\n              setSelectedTool(null);\n            }\n          }}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>ESC to go back</Text>\n    </Box>\n  );\n\n  const renderTestTool = () => (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Run Apex Tests</Text>\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Test Classes (comma-separated, leave empty for all tests):</Text>\n        <TextInput\n          value={testClasses}\n          onChange={setTestClasses}\n          placeholder=\"MyTestClass,AnotherTestClass\"\n        />\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Target Org: </Text>\n        <TextInput\n          value={targetOrg}\n          onChange={setTargetOrg}\n          placeholder=\"username or alias\"\n        />\n      </Box>\n      \n      <Box marginTop={1} marginBottom={2}>\n        <SelectInput\n          items={[\n            { label: 'Run Tests', value: 'run' },\n            { label: 'Back to Tools', value: 'back' },\n          ]}\n          onSelect={(item) => {\n            if (item.value === 'run') {\n              executeTool();\n            } else {\n              setSelectedTool(null);\n            }\n          }}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>ESC to go back</Text>\n    </Box>\n  );\n\n  const renderSoqlTool = () => (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Execute SOQL Query</Text>\n      </Box>\n      \n      <Box marginBottom={1}>\n        <Text>Enter your SOQL query:</Text>\n      </Box>\n      \n      <Box marginBottom={2} borderStyle=\"round\" padding={1} height={5} overflow=\"hidden\">\n        <TextInput\n          value={soqlQuery}\n          onChange={setSoqlQuery}\n          onSubmit={executeTool}\n        />\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Target Org: </Text>\n        <TextInput\n          value={targetOrg}\n          onChange={setTargetOrg}\n          placeholder=\"username or alias\"\n        />\n      </Box>\n      \n      <Box marginTop={1} marginBottom={2}>\n        <SelectInput\n          items={[\n            { label: 'Run Query', value: 'run' },\n            { label: 'Back to Tools', value: 'back' },\n          ]}\n          onSelect={(item) => {\n            if (item.value === 'run') {\n              executeTool();\n            } else {\n              setSelectedTool(null);\n            }\n          }}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>ESC to go back</Text>\n    </Box>\n  );\n\n  const renderDataTreeTool = () => (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>View Data Tree</Text>\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Explore sObject data relationships in your org.</Text>\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Target Org: </Text>\n        <TextInput\n          value={targetOrg}\n          onChange={setTargetOrg}\n          placeholder=\"username or alias\"\n        />\n      </Box>\n      \n      <Box marginTop={1} marginBottom={2}>\n        <SelectInput\n          items={[\n            { label: 'View Data Tree', value: 'run' },\n            { label: 'Back to Tools', value: 'back' },\n          ]}\n          onSelect={(item) => {\n            if (item.value === 'run') {\n              executeTool();\n            } else {\n              setSelectedTool(null);\n            }\n          }}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>ESC to go back</Text>\n    </Box>\n  );\n\n  const renderToolForm = () => {\n    if (!selectedTool) return null;\n    \n    switch (selectedTool.id) {\n      case 'apex':\n        return renderApexTool();\n      case 'flow':\n        return renderFlowTool();\n      case 'test':\n        return renderTestTool();\n      case 'soql':\n        return renderSoqlTool();\n      case 'data-tree':\n        return renderDataTreeTool();\n      default:\n        return null;\n    }\n  };\n\n  const renderOutput = () => {\n    if (!output && !error) return null;\n    \n    return (\n      <Box marginTop={2} flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text bold>Output:</Text>\n        </Box>\n        <Box borderStyle=\"round\" padding={1} height={10} overflow=\"hidden\">\n          <Text>{error || output}</Text>\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <Box flexDirection=\"column\" padding={1}>\n      {isProcessing ? (\n        <Box>\n          <Text><Spinner type=\"dots\" /> Processing...</Text>\n        </Box>\n      ) : selectedTool ? (\n        <>\n          {renderToolForm()}\n          {renderOutput()}\n        </>\n      ) : (\n        renderToolList()\n      )}\n    </Box>\n  );\n};\n\nexport default RunTools;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Text, useInput, useApp, Newline } from 'ink';\nimport SelectInput from 'ink-select-input';\nimport chalk from 'chalk';\nimport { execa } from 'execa';\nimport Spinner from 'ink-spinner';\nimport { TextInput } from '../common/TextInput';\n\ntype Plugin = {\n  name: string;\n  version: string;\n  type: string;\n  location?: string;\n  homepage?: string;\n  updateAvailable?: boolean;\n  latestVersion?: string;\n};\n\ntype PluginsPanelProps = {\n  onBack: () => void;\n};\n\nexport const PluginsPanel = ({ onBack }: PluginsPanelProps) => {\n  const [plugins, setPlugins] = useState<Plugin[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [output, setOutput] = useState('');\n  const [selectedPlugin, setSelectedPlugin] = useState<Plugin | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [view, setView] = useState<'list' | 'details' | 'install' | 'update' | 'uninstall'>('list');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [installPluginName, setInstallPluginName] = useState('');\n  const [isCheckingForUpdates, setIsCheckingForUpdates] = useState(false);\n\n  // Load plugins on component mount\n  useEffect(() => {\n    loadPlugins();\n  }, []);\n\n  const loadPlugins = async () => {\n    try {\n      setIsLoading(true);\n      setError('');\n      \n      // Run sf plugins command\n      const { stdout } = await execa('sf', ['plugins', '--json']);\n      const result = JSON.parse(stdout);\n      \n      if (Array.isArray(result)) {\n        setPlugins(result);\n      } else {\n        setPlugins([]);\n      }\n    } catch (err) {\n      setError(`Failed to load plugins: ${err instanceof Error ? err.message : String(err)}`);\n      setPlugins([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const checkForUpdates = async () => {\n    try {\n      setIsCheckingForUpdates(true);\n      setOutput('');\n      \n      const process = execa('sf', ['plugins', 'update', '--json']);\n      \n      // Stream output\n      process.stdout?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      process.stderr?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      await process;\n      \n      // Reload plugins after update check\n      await loadPlugins();\n    } catch (err) {\n      setError(`Error checking for updates: ${err instanceof Error ? err.message : String(err)}`);\n    } finally {\n      setIsCheckingForUpdates(false);\n    }\n  };\n\n  const runCommand = async (command: string, args: string[] = []) => {\n    try {\n      setIsProcessing(true);\n      setOutput('');\n      \n      const process = execa('sf', [command, ...args]);\n      \n      // Stream output\n      process.stdout?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      process.stderr?.on('data', (data) => {\n        setOutput(prev => prev + data.toString());\n      });\n      \n      await process;\n      \n      // Reload plugins after command completes\n      await loadPlugins();\n      return true;\n    } catch (err) {\n      setOutput(`Error: ${err instanceof Error ? err.message : String(err)}`);\n      return false;\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const installPlugin = async (pluginName: string) => {\n    const success = await runCommand('plugins', ['install', pluginName]);\n    if (success) {\n      setInstallPluginName('');\n      setView('list');\n    }\n  };\n\n  const updatePlugin = async (pluginName: string) => {\n    await runCommand('plugins', ['update', pluginName]);\n  };\n\n  const uninstallPlugin = async (pluginName: string) => {\n    await runCommand('plugins', ['uninstall', pluginName]);\n    setSelectedPlugin(null);\n    setView('list');\n  };\n\n  const updateAllPlugins = async () => {\n    await runCommand('plugins', ['update']);\n  };\n\n  const handlePluginSelect = (plugin: Plugin) => {\n    setSelectedPlugin(plugin);\n    setView('details');\n  };\n\n  useInput((input, key) => {\n    if (key.escape) {\n      if (view !== 'list') {\n        setView('list');\n        setSelectedPlugin(null);\n      } else {\n        onBack();\n      }\n    }\n  });\n\n  const renderPluginList = () => {\n    const filteredPlugins = plugins.filter(plugin => \n      plugin.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n      <Box flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text bold>Installed Plugins</Text>\n        </Box>\n        \n        <Box marginBottom={1}>\n          <Text>Search: </Text>\n          <TextInput\n            value={searchQuery}\n            onChange={setSearchQuery}\n            placeholder=\"Filter plugins...\"\n          />\n        </Box>\n        \n        {isLoading ? (\n          <Box>\n            <Text><Spinner type=\"dots\" /> Loading plugins...</Text>\n          </Box>\n        ) : error ? (\n          <Text color=\"red\">Error: {error}</Text>\n        ) : filteredPlugins.length === 0 ? (\n          <Text>No plugins found. Install some plugins to get started.</Text>\n        ) : (\n          <Box flexDirection=\"column\">\n            <Box marginBottom={1}>\n              <SelectInput\n                items={[\n                  ...filteredPlugins.map(plugin => ({\n                    label: `${plugin.name}@${plugin.version} ${plugin.updateAvailable ? '🔄' : ''}`,\n                    value: plugin.name,\n                    plugin\n                  })),\n                  { label: '➕ Install New Plugin', value: 'install' },\n                  { label: '🔄 Update All Plugins', value: 'update-all' },\n                  { label: '🔍 Check for Updates', value: 'check-updates' },\n                ]}\n                onSelect={(item) => {\n                  if (item.value === 'install') {\n                    setView('install');\n                  } else if (item.value === 'update-all') {\n                    updateAllPlugins();\n                  } else if (item.value === 'check-updates') {\n                    checkForUpdates();\n                  } else {\n                    // Type assertion for custom plugin property\n                    const customItem = item as any;\n                    handlePluginSelect(customItem.plugin);\n                  }\n                }}\n                itemComponent={({ isSelected, label, plugin }) => (\n                  <Box>\n                    <Text color={isSelected ? 'cyan' : 'white'}>{label}</Text>\n                    {plugin?.updateAvailable && (\n                      <Text color=\"yellow\"> (update to {plugin.latestVersion} available)</Text>\n                    )}\n                  </Box>\n                )}\n              />\n            </Box>\n          </Box>\n        )}\n        \n        <Box marginTop={1}>\n          <Text>Press ESC to go back</Text>\n        </Box>\n      </Box>\n    );\n  };\n\n  const renderPluginDetails = () => {\n    if (!selectedPlugin) return null;\n    \n    return (\n      <Box flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text bold>Plugin: {selectedPlugin.name}</Text>\n        </Box>\n        \n        <Box marginBottom={1}>\n          <Text>Version: {selectedPlugin.version}</Text>\n          {selectedPlugin.updateAvailable && (\n            <Text color=\"yellow\">Update available: {selectedPlugin.latestVersion}</Text>\n          )}\n        </Box>\n        \n        <Box marginBottom={1}>\n          <Text>Type: {selectedPlugin.type}</Text>\n        </Box>\n        \n        {selectedPlugin.location && (\n          <Box marginBottom={1}>\n            <Text>Location: {selectedPlugin.location}</Text>\n          </Box>\n        )}\n        \n        {selectedPlugin.homepage && (\n          <Box marginBottom={2}>\n            <Text>Homepage: {selectedPlugin.homepage}</Text>\n          </Box>\n        )}\n        \n        <Box flexDirection=\"column\" marginBottom={2}>\n          <SelectInput\n            items={[\n              ...(selectedPlugin.updateAvailable ? [{\n                label: `🔄 Update to v${selectedPlugin.latestVersion}`,\n                value: 'update',\n              }] : []),\n              { label: 'Uninstall Plugin', value: 'uninstall' },\n              { label: 'Back to List', value: 'back' },\n            ]}\n            onSelect={(item) => {\n              switch (item.value) {\n                case 'update':\n                  setView('update');\n                  updatePlugin(selectedPlugin.name);\n                  break;\n                case 'uninstall':\n                  setView('uninstall');\n                  break;\n                case 'back':\n                  setView('list');\n                  setSelectedPlugin(null);\n                  break;\n              }\n            }}\n          />\n        </Box>\n        \n        <Text color=\"gray\" italic>ESC to go back</Text>\n      </Box>\n    );\n  };\n\n  const renderInstallForm = () => (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Install New Plugin</Text>\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Plugin name or npm package:</Text>\n        <TextInput\n          value={installPluginName}\n          onChange={setInstallPluginName}\n          placeholder=\"@salesforce/plugin-name or plugin-name\"\n        />\n      </Box>\n      \n      <Box marginBottom={2}>\n        <Text>Example: @salesforce/plugin-org, @salesforce/plugin-apex, etc.</Text>\n      </Box>\n      \n      <Box flexDirection=\"column\" marginBottom={2}>\n        <SelectInput\n          items={[\n            { label: 'Install', value: 'install' },\n            { label: 'Cancel', value: 'cancel' },\n          ]}\n          onSelect={(item) => {\n            if (item.value === 'install' && installPluginName) {\n              installPlugin(installPluginName);\n            } else {\n              setView('list');\n            }\n          }}\n        />\n      </Box>\n      \n      <Text color=\"gray\" italic>ESC to go back</Text>\n    </Box>\n  );\n\n  const renderUninstallConfirmation = () => {\n    if (!selectedPlugin) return null;\n    \n    return (\n      <Box flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text bold>Uninstall Plugin</Text>\n        </Box>\n        \n        <Box marginBottom={2}>\n          <Text>Are you sure you want to uninstall {selectedPlugin.name}?</Text>\n          <Text>Version: {selectedPlugin.version}</Text>\n        </Box>\n        \n        <Box flexDirection=\"column\" marginBottom={2}>\n          <SelectInput\n            items={[\n              { label: '✅ Yes, uninstall it', value: 'confirm' },\n              { label: '❌ No, keep it', value: 'cancel' },\n            ]}\n            onSelect={(item) => {\n              if (item.value === 'confirm') {\n                uninstallPlugin(selectedPlugin.name);\n              } else {\n                setView('details');\n              }\n            }}\n          />\n        </Box>\n        \n        <Text color=\"gray\" italic>ESC to go back</Text>\n      </Box>\n    );\n  };\n\n  const renderOutput = () => {\n    if (!output && !error) return null;\n    \n    return (\n      <Box marginTop={2} flexDirection=\"column\">\n        <Box marginBottom={1}>\n          <Text bold>Output:</Text>\n        </Box>\n        <Box borderStyle=\"round\" padding={1} height={10} overflow=\"hidden\">\n          <Text>{error || output}</Text>\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <Box flexDirection=\"column\" padding={1}>\n      {isProcessing || isCheckingForUpdates ? (\n        <Box>\n          <Text><Spinner type=\"dots\" /> {isCheckingForUpdates ? 'Checking for updates...' : 'Processing...'}</Text>\n        </Box>\n      ) : (\n        <>\n          {view === 'list' && renderPluginList()}\n          {view === 'details' && renderPluginDetails()}\n          {view === 'install' && renderInstallForm()}\n          {view === 'uninstall' && renderUninstallConfirmation()}\n          {renderOutput()}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default PluginsPanel;\n","import React, { useState } from 'react';\nimport { Box, Text, useInput } from 'ink';\nimport SelectInput from 'ink-select-input';\nimport ThemeSwitcher from './ThemeSwitcher';\nimport KeyboardShortcutsEditor from './KeyboardShortcutsEditor';\nimport { useTheme, ThemeProvider, getTheme } from '../../themes';\nimport { ErrorBoundary } from '../common';\n\ninterface SettingsMenuItem {\n  label: string;\n  value: string;\n  description: string;\n}\n\ninterface SettingsMenuProps {\n  onBack: () => void;\n}\n\nconst menuItems: SettingsMenuItem[] = [\n  {\n    label: '🎨 Theme Settings',\n    value: 'theme',\n    description: 'Customize the application theme'\n  },\n  {\n    label: '⌨️  Keyboard Shortcuts',\n    value: 'shortcuts',\n    description: 'View and customize keyboard shortcuts'\n  },\n  {\n    label: '🔄 Back to Main Menu',\n    value: 'back',\n    description: 'Return to the main menu'\n  }\n];\n\nexport const SettingsMenu: React.FC<SettingsMenuProps> = ({ onBack }) => {\n  const [selectedItem, setSelectedItem] = useState<string | null>(null);\n  const [currentTheme, setCurrentTheme] = useState<string>('base');\n  const theme = useTheme();\n\n  // Handle Escape key to go back\n  useInput((input, key) => {\n    if (key.escape) {\n      if (selectedItem) {\n        setSelectedItem(null);\n      } else {\n        onBack();\n      }\n    }\n  });\n\n  const handleThemeChange = (newTheme: string) => {\n    setCurrentTheme(newTheme);\n  };\n\n  // Render content based on selected menu item\n  const renderContent = () => {\n    if (!selectedItem) {\n      return (\n        <Box flexDirection=\"column\">\n          <Text bold>Settings</Text>\n          <Box marginY={1}>\n            <Text>Configure application preferences and appearance</Text>\n          </Box>\n          \n          <SelectInput\n            items={menuItems}\n            onSelect={(item) => {\n              if (item.value === 'back') {\n                onBack();\n              } else {\n                setSelectedItem(item.value);\n              }\n            }}\n            itemComponent={({ isSelected, label, item }: { isSelected: boolean, label: string, item: SettingsMenuItem }) => (\n              <Box>\n                <Text color={isSelected ? theme.colors.primary : theme.colors.text}>{label}</Text>\n                <Text> </Text>\n                <Text color=\"gray\">{item.description}</Text>\n              </Box>\n            )}\n          />\n          \n          <Box marginTop={1}>\n            <Text color=\"gray\" italic>\n              Press Esc to go back\n            </Text>\n          </Box>\n        </Box>\n      );\n    }\n\n    // Theme Settings\n    if (selectedItem === 'theme') {\n      return (\n        <ThemeProvider theme={getTheme(currentTheme)}>\n          <ThemeSwitcher \n            onBack={() => setSelectedItem(null)} \n            onThemeChange={handleThemeChange}\n          />\n        </ThemeProvider>\n      );\n    }\n\n    // Keyboard Shortcuts Editor\n    if (selectedItem === 'shortcuts') {\n      return (\n        <KeyboardShortcutsEditor \n          onBack={() => setSelectedItem(null)} \n        />\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <ErrorBoundary componentName=\"SettingsMenu\">\n      <Box flexDirection=\"column\" padding={1}>\n        {renderContent()}\n      </Box>\n    </ErrorBoundary>\n  );\n};\n\nexport default SettingsMenu;","import React, { useState, useEffect } from 'react';\nimport { Box, Text, useInput } from 'ink';\nimport SelectInput from 'ink-select-input';\nimport { useTheme, getTheme, ThemeProvider } from '../../themes';\nimport { CustomBox } from '../common/Box';\nimport { useAppContext } from '../../context/AppContext';\n\ninterface ThemeOption {\n  label: string;\n  value: string;\n  description: string;\n}\n\ninterface ThemeSwitcherProps {\n  onBack: () => void;\n  onThemeChange?: (theme: string) => void;\n}\n\nconst themeOptions: ThemeOption[] = [\n  {\n    label: '🌞 Base Theme',\n    value: 'base',\n    description: 'Default light theme with Salesforce colors'\n  },\n  {\n    label: '🌙 Dark Theme',\n    value: 'dark',\n    description: 'Dark theme for low-light environments'\n  },\n  {\n    label: '🔍 High Contrast',\n    value: 'highContrast',\n    description: 'Enhanced contrast for better accessibility'\n  },\n  {\n    label: '⚡ Salesforce Lightning',\n    value: 'salesforce',\n    description: 'Official Salesforce Lightning color scheme'\n  }\n];\n\nexport const ThemeSwitcher: React.FC<ThemeSwitcherProps> = ({ onBack, onThemeChange }) => {\n  const { state, setTheme } = useAppContext();\n  const [selectedTheme, setSelectedTheme] = useState<string>(state.themeName);\n  const [previewTheme, setPreviewTheme] = useState<string>(state.themeName);\n  const theme = useTheme();\n\n  // Handle Escape key to go back\n  useInput((input, key) => {\n    if (key.escape) {\n      onBack();\n    }\n  });\n\n  // Apply the selected theme when it changes\n  useEffect(() => {\n    if (onThemeChange) {\n      onThemeChange(selectedTheme);\n    }\n    setTheme(selectedTheme);\n  }, [selectedTheme, onThemeChange, setTheme]);\n\n  const handleThemeSelect = (item: { value: string }) => {\n    setSelectedTheme(item.value);\n  };\n\n  // Preview a theme on hover without selecting it\n  const handleHighlight = (item: { value: string }) => {\n    setPreviewTheme(item.value);\n  };\n\n  // Create a preview box to show theme colors\n  const ThemePreview = ({ themeName }: { themeName: string }) => {\n    const previewTheme = getTheme(themeName);\n    \n    return (\n      <ThemeProvider theme={previewTheme}>\n        <CustomBox title=\"Theme Preview\" borderStyle=\"round\" padding={1} width={40}>\n          <Box flexDirection=\"column\">\n            <Text>Primary: <Text color={previewTheme.colors.primary}>■■■</Text></Text>\n            <Text>Secondary: <Text color={previewTheme.colors.secondary}>■■■</Text></Text>\n            <Text>Success: <Text color={previewTheme.colors.success}>■■■</Text></Text>\n            <Text>Warning: <Text color={previewTheme.colors.warning}>■■■</Text></Text>\n            <Text>Error: <Text color={previewTheme.colors.error}>■■■</Text></Text>\n            <Text>Info: <Text color={previewTheme.colors.info}>■■■</Text></Text>\n            <Text>Text: <Text color={previewTheme.colors.text}>■■■</Text></Text>\n            <Text>Border: <Text color={previewTheme.colors.border}>■■■</Text></Text>\n          </Box>\n        </CustomBox>\n      </ThemeProvider>\n    );\n  };\n\n  return (\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text bold>Theme Settings</Text>\n      </Box>\n      \n      <Box flexDirection=\"row\" gap={2}>\n        <Box flexDirection=\"column\" width=\"50%\">\n          <Text bold>Select a Theme</Text>\n          <SelectInput\n            items={themeOptions}\n            onSelect={handleThemeSelect}\n            onHighlight={handleHighlight}\n            itemComponent={({ isSelected, label, item }: { isSelected: boolean, label: string, item: ThemeOption }) => (\n              <Box>\n                <Text color={isSelected ? theme.colors.primary : theme.colors.text}>{label}</Text>\n                <Text> </Text>\n                <Text color=\"gray\">{item.description}</Text>\n              </Box>\n            )}\n          />\n        </Box>\n        \n        <Box width=\"50%\">\n          <ThemePreview themeName={previewTheme} />\n        </Box>\n      </Box>\n      \n      <Box marginTop={1}>\n        <Text>Current theme: <Text bold>{selectedTheme}</Text></Text>\n      </Box>\n      \n      <Box marginTop={1}>\n        <Text color=\"gray\" italic>\n          Press Esc to go back\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ThemeSwitcher;","import React, { useState, useEffect } from 'react';\nimport { Box, Text, useInput } from 'ink';\nimport SelectInput from 'ink-select-input';\nimport { useTheme } from '../../themes';\nimport { ShortcutAction, Shortcut } from '../../context/KeyboardShortcuts';\nimport { config } from '../../config';\nimport { useKeyboardShortcuts } from '../../context/KeyboardShortcuts';\nimport { TextInput, Modal, ConfirmDialog } from '../common';\n\ninterface KeyboardShortcutsEditorProps {\n  onBack: () => void;\n}\n\ninterface ShortcutItem {\n  label: string;\n  value: string;\n  shortcut: Shortcut;\n}\n\n// Helper function to format key display\nconst formatKeyDisplay = (shortcut: Shortcut): string => {\n  const parts = [];\n  if (shortcut.ctrl) parts.push('Ctrl');\n  if (shortcut.alt) parts.push('Alt');\n  if (shortcut.shift) parts.push('Shift');\n  \n  // Format special keys\n  let key = shortcut.key;\n  if (key === 'escape') key = 'Esc';\n  else if (key === 'return') key = 'Enter';\n  else if (key === 'space') key = 'Space';\n  \n  parts.push(key.length === 1 ? key.toUpperCase() : key);\n  \n  return parts.join('+');\n};\n\n// Action descriptions for better UI\nconst actionDescriptions: Record<ShortcutAction, string> = {\n  help: 'Show help screen',\n  back: 'Go back/cancel',\n  quit: 'Quit the application',\n  toggleStatusBar: 'Show/hide status bar',\n  toggleTheme: 'Switch between themes',\n  refresh: 'Refresh current view',\n  save: 'Save changes',\n  create: 'Create new item',\n  delete: 'Delete selected item',\n  search: 'Search',\n  navigate: 'Navigate'\n};\n\nexport const KeyboardShortcutsEditor: React.FC<KeyboardShortcutsEditorProps> = ({ onBack }) => {\n  const { shortcuts } = useKeyboardShortcuts();\n  const theme = useTheme();\n  const [shortcutsList, setShortcutsList] = useState<ShortcutItem[]>([]);\n  const [selectedShortcut, setSelectedShortcut] = useState<Shortcut | null>(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newKey, setNewKey] = useState('');\n  const [isCtrl, setIsCtrl] = useState(false);\n  const [isAlt, setIsAlt] = useState(false);\n  const [isShift, setIsShift] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [listeningForKey, setListeningForKey] = useState(false);\n  \n  // Initialize shortcuts list\n  useEffect(() => {\n    loadShortcuts();\n  }, [shortcuts]);\n  \n  // Load shortcuts from config\n  const loadShortcuts = () => {\n    const customShortcuts = config.get('keyboardShortcuts') || {};\n    \n    // Combine default shortcuts with user customizations\n    const combinedShortcuts = {\n      ...shortcuts,\n      ...customShortcuts\n    };\n    \n    const items = Object.entries(combinedShortcuts).map(([id, shortcut]) => ({\n      label: `${actionDescriptions[shortcut.action] || shortcut.action}`,\n      value: id,\n      shortcut\n    }));\n    \n    setShortcutsList(items);\n  };\n\n  // Handle key presses\n  useInput((input, key) => {\n    if (listeningForKey) {\n      // When listening for a new key binding\n      if (key.escape) {\n        setListeningForKey(false);\n        return;\n      }\n      \n      // Capture the pressed key\n      let capturedKey = '';\n      if (key.return) capturedKey = 'return';\n      else if (key.escape) capturedKey = 'escape';\n      else if (key.tab) capturedKey = 'tab';\n      else if (key.backspace) capturedKey = 'backspace';\n      else if (key.delete) capturedKey = 'delete';\n      else if (key.upArrow) capturedKey = 'up';\n      else if (key.downArrow) capturedKey = 'down';\n      else if (key.leftArrow) capturedKey = 'left';\n      else if (key.rightArrow) capturedKey = 'right';\n      else if (key.meta) capturedKey = 'meta';\n      else if (key.space) capturedKey = 'space';\n      else if (input) capturedKey = input;\n      \n      if (capturedKey) {\n        setNewKey(capturedKey);\n        setIsCtrl(key.ctrl);\n        setIsAlt(key.alt);\n        setIsShift(key.shift);\n        setListeningForKey(false);\n        setIsEditing(true);\n      }\n      \n      return;\n    }\n    \n    if (isEditing) {\n      if (key.escape) {\n        setIsEditing(false);\n        return;\n      }\n      \n      if (key.return) {\n        saveShortcut();\n        return;\n      }\n      \n      // Toggle modifier keys\n      if (input === 'c') {\n        setIsCtrl(!isCtrl);\n        return;\n      }\n      \n      if (input === 'a') {\n        setIsAlt(!isAlt);\n        return;\n      }\n      \n      if (input === 's') {\n        setIsShift(!isShift);\n        return;\n      }\n      \n      return;\n    }\n    \n    if (showConfirm) {\n      return;\n    }\n    \n    if (selectedShortcut && !isEditing) {\n      if (input === 'k') {\n        startKeyCapture();\n        return;\n      }\n    }\n    \n    // Handle reset shortcut keys\n    if (input === 'r' && !selectedShortcut) {\n      resetToDefaults();\n      return;\n    }\n    \n    if (key.escape) {\n      if (selectedShortcut) {\n        setSelectedShortcut(null);\n      } else {\n        onBack();\n      }\n    }\n  });\n\n  // Save the shortcut changes\n  const saveShortcut = () => {\n    if (!selectedShortcut) return;\n    \n    // Check for conflicts\n    const conflictingShortcut = shortcutsList.find(item => \n      item.shortcut.key === newKey && \n      item.shortcut.ctrl === isCtrl && \n      item.shortcut.alt === isAlt && \n      item.shortcut.shift === isShift &&\n      item.shortcut.action !== selectedShortcut.action\n    );\n    \n    if (conflictingShortcut) {\n      setConfirmMessage(`This key combination is already used for \"${actionDescriptions[conflictingShortcut.shortcut.action]}\". Override?`);\n      setShowConfirm(true);\n      return;\n    }\n    \n    // Apply the changes\n    applyShortcutChange();\n  };\n\n  // Apply the new shortcut\n  const applyShortcutChange = () => {\n    if (!selectedShortcut) return;\n    \n    // Create updated shortcut\n    const updatedShortcut: Shortcut = {\n      ...selectedShortcut,\n      key: newKey,\n      ctrl: isCtrl,\n      alt: isAlt,\n      shift: isShift\n    };\n    \n    // Get current custom shortcuts\n    const customShortcuts = config.get('keyboardShortcuts') || {};\n    \n    // Update the custom shortcuts\n    const updatedCustomShortcuts = {\n      ...customShortcuts,\n      [selectedShortcut.action]: updatedShortcut\n    };\n    \n    // Save to config\n    config.set('keyboardShortcuts', updatedCustomShortcuts);\n    \n    // Update the UI list\n    const updatedList = shortcutsList.map(item => {\n      if (item.shortcut.action === selectedShortcut.action) {\n        return {\n          ...item,\n          shortcut: updatedShortcut\n        };\n      }\n      return item;\n    });\n    \n    setShortcutsList(updatedList);\n    setIsEditing(false);\n    setShowConfirm(false);\n  };\n\n  // Handle selection of a shortcut to edit\n  const handleSelectShortcut = (item: ShortcutItem) => {\n    setSelectedShortcut(item.shortcut);\n    setNewKey(item.shortcut.key);\n    setIsCtrl(!!item.shortcut.ctrl);\n    setIsAlt(!!item.shortcut.alt);\n    setIsShift(!!item.shortcut.shift);\n  };\n\n  // Start the key capture mode\n  const startKeyCapture = () => {\n    setListeningForKey(true);\n  };\n\n  // Reset all shortcuts to defaults\n  const resetToDefaults = () => {\n    // Clear all custom shortcuts\n    config.set('keyboardShortcuts', {});\n    \n    // Reload the shortcuts list\n    loadShortcuts();\n    \n    // Show a confirmation message\n    setConfirmMessage('All keyboard shortcuts have been reset to default values.');\n    setShowConfirm(true);\n  };\n\n  // Render shortcut list\n  const renderShortcutsList = () => {\n    return (\n      <Box flexDirection=\"column\">\n        <Text bold>Keyboard Shortcuts</Text>\n        <Box marginY={1}>\n          <Text>Select a shortcut to customize</Text>\n        </Box>\n        \n        <SelectInput\n          items={shortcutsList}\n          onSelect={handleSelectShortcut}\n          itemComponent={({ isSelected, label, item }: { isSelected: boolean, label: string, item: ShortcutItem }) => (\n            <Box>\n              <Text color={isSelected ? theme.colors.primary : theme.colors.text}>\n                {label}\n              </Text>\n              <Text> </Text>\n              <Text color={theme.colors.secondary}>\n                {formatKeyDisplay(item.shortcut)}\n              </Text>\n            </Box>\n          )}\n        />\n        \n        <Box marginY={1} flexDirection=\"column\">\n          <Text>Press </Text>\n          <Text color={theme.colors.secondary}>r</Text>\n          <Text> to reset all shortcuts to defaults</Text>\n        </Box>\n        \n        <Box marginTop={1}>\n          <Text color=\"gray\" italic>\n            Press Esc to go back\n          </Text>\n        </Box>\n      </Box>\n    );\n  };\n\n  // Render shortcut editor\n  const renderShortcutEditor = () => {\n    if (!selectedShortcut) return null;\n    \n    return (\n      <Box flexDirection=\"column\">\n        <Text bold>Edit Shortcut: {actionDescriptions[selectedShortcut.action]}</Text>\n        \n        <Box marginY={1} flexDirection=\"column\">\n          <Box marginBottom={1}>\n            <Text>Current: </Text>\n            <Text color={theme.colors.secondary}>{formatKeyDisplay(selectedShortcut)}</Text>\n          </Box>\n          \n          {isEditing ? (\n            <>\n              <Box marginBottom={1}>\n                <Text>New: </Text>\n                <Text color={theme.colors.primary}>\n                  {isCtrl ? 'Ctrl+' : ''}\n                  {isAlt ? 'Alt+' : ''}\n                  {isShift ? 'Shift+' : ''}\n                  {newKey.length === 1 ? newKey.toUpperCase() : newKey}\n                </Text>\n              </Box>\n              \n              <Box marginY={1} flexDirection=\"column\">\n                <Box marginBottom={1}>\n                  <Text bold>Modifier keys:</Text>\n                </Box>\n                <Box marginLeft={2} flexDirection=\"column\">\n                  <Box>\n                    <Text color={isCtrl ? theme.colors.primary : theme.colors.text}>\n                      [x] Ctrl\n                    </Text>\n                    <Text> - Press </Text>\n                    <Text color={theme.colors.secondary}>c</Text>\n                    <Text> to toggle</Text>\n                  </Box>\n                  <Box>\n                    <Text color={isAlt ? theme.colors.primary : theme.colors.text}>\n                      [x] Alt\n                    </Text>\n                    <Text> - Press </Text>\n                    <Text color={theme.colors.secondary}>a</Text>\n                    <Text> to toggle</Text>\n                  </Box>\n                  <Box>\n                    <Text color={isShift ? theme.colors.primary : theme.colors.text}>\n                      [x] Shift\n                    </Text>\n                    <Text> - Press </Text>\n                    <Text color={theme.colors.secondary}>s</Text>\n                    <Text> to toggle</Text>\n                  </Box>\n                </Box>\n              </Box>\n              \n              <Box marginTop={2} flexDirection=\"column\">\n                <Text>Press </Text>\n                <Text color={theme.colors.secondary}>Enter</Text>\n                <Text> to save or </Text>\n                <Text color={theme.colors.secondary}>Esc</Text>\n                <Text> to cancel</Text>\n              </Box>\n            </>\n          ) : (\n            <Box marginTop={1} flexDirection=\"column\">\n              <Text>Press </Text>\n              <Text color={theme.colors.secondary}>k</Text>\n              <Text> to assign a new key, or </Text>\n              <Text color={theme.colors.secondary}>Esc</Text>\n              <Text> to go back</Text>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    );\n  };\n\n  // Render the component based on state\n  if (showConfirm) {\n    return (\n      <ConfirmDialog\n        message={confirmMessage}\n        onConfirm={() => {\n          applyShortcutChange();\n        }}\n        onCancel={() => {\n          setShowConfirm(false);\n        }}\n      />\n    );\n  }\n\n  if (listeningForKey) {\n    return (\n      <Modal title=\"Capturing Keyboard Input\">\n        <Box flexDirection=\"column\" alignItems=\"center\" padding={1}>\n          <Text>Press any key or key combination</Text>\n          <Text color=\"gray\">(Esc to cancel)</Text>\n        </Box>\n      </Modal>\n    );\n  }\n\n  return (\n    <Box flexDirection=\"column\" padding={1}>\n      {selectedShortcut ? renderShortcutEditor() : renderShortcutsList()}\n    </Box>\n  );\n};\n\nexport default KeyboardShortcutsEditor;","import React from 'react';\nimport { Box, Text } from 'ink';\n\ntype BreadcrumbItem = {\n  label: string;\n  active?: boolean;\n};\n\ntype BreadcrumbProps = {\n  items: BreadcrumbItem[];\n};\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({ items }) => {\n  return (\n    <Box flexDirection=\"row\" marginBottom={1}>\n      {items.map((item, index) => (\n        <React.Fragment key={index}>\n          <Text\n            color={item.active ? 'cyan' : 'gray'}\n            bold={item.active}\n          >\n            {item.label}\n          </Text>\n          {index < items.length - 1 && <Text color=\"gray\"> › </Text>}\n        </React.Fragment>\n      ))}\n    </Box>\n  );\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport { Box, Text, useInput } from 'ink';\n\ntype Shortcut = {\n  key: string;\n  description: string;\n};\n\ntype KeyboardShortcutsProps = {\n  shortcuts: Shortcut[];\n  visible?: boolean;\n  onClose?: () => void;\n};\n\nexport const KeyboardShortcuts: React.FC<KeyboardShortcutsProps> = ({\n  shortcuts,\n  visible = false,\n  onClose,\n}) => {\n  // Close on '?' press when visible\n  useInput((input, key) => {\n    if (visible && (input === '?' || key.escape) && onClose) {\n      onClose();\n    }\n  });\n\n  if (!visible) return null;\n\n  return (\n    <Box flexDirection=\"column\" marginTop={1}>\n      <Box \n        flexDirection=\"column\" \n        borderStyle=\"round\" \n        borderColor=\"cyan\"\n        padding={1}\n      >\n        <Text bold>Keyboard Shortcuts</Text>\n      <Box flexDirection=\"column\" marginTop={1}>\n        {shortcuts.map((shortcut, index) => (\n          <Box key={index}>\n            <Text color=\"cyan\" bold>{shortcut.key.padEnd(10)}</Text>\n            <Text> {shortcut.description}</Text>\n          </Box>\n        ))}\n      </Box>\n        <Text color=\"gray\" italic>\n          Press ESC or ? to close\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default KeyboardShortcuts;\n","require('./').install();\n"],"mappings":"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","names":["themes_exports","__export","ThemeContext","ThemeProvider","baseTheme","darkTheme","getTheme","highContrastTheme","salesforceTheme","useTheme","React","init_themes","__esmMin","isActive","color","themeName","theme","children","require_base64","__commonJSMin","exports","intToCharMap","number","charCode","bigA","bigZ","littleA","littleZ","zero","nine","plus","slash","littleOffset","numberOffset","require_base64_vlq","__commonJSMin","exports","base64","VLQ_BASE_SHIFT","VLQ_BASE","VLQ_BASE_MASK","VLQ_CONTINUATION_BIT","toVLQSigned","aValue","fromVLQSigned","isNegative","shifted","encoded","digit","vlq","aStr","aIndex","aOutParam","strLen","result","shift","continuation","require_util","__commonJSMin","exports","getArg","aArgs","aName","aDefaultValue","urlRegexp","dataUrlRegexp","urlParse","aUrl","match","urlGenerate","aParsedUrl","url","normalize","aPath","path","isAbsolute","parts","part","up","i","join","aRoot","aPathUrl","aRootUrl","joined","relative","level","index","supportsNullProto","obj","identity","s","toSetString","aStr","isProtoString","fromSetString","length","compareByOriginalPositions","mappingA","mappingB","onlyCompareOriginal","cmp","strcmp","compareByGeneratedPositionsDeflated","onlyCompareGenerated","aStr1","aStr2","compareByGeneratedPositionsInflated","parseSourceMapInput","str","computeSourceURL","sourceRoot","sourceURL","sourceMapURL","parsed","require_array_set","__commonJSMin","exports","util","has","hasNativeMap","ArraySet","aArray","aAllowDuplicates","set","i","len","aStr","sStr","isDuplicate","idx","aIdx","require_mapping_list","__commonJSMin","exports","util","generatedPositionAfter","mappingA","mappingB","lineA","lineB","columnA","columnB","MappingList","aCallback","aThisArg","aMapping","require_source_map_generator","__commonJSMin","exports","base64VLQ","util","ArraySet","MappingList","SourceMapGenerator","aArgs","aSourceMapConsumer","sourceRoot","generator","mapping","newMapping","sourceFile","sourceRelative","content","generated","original","source","name","aSourceFile","aSourceContent","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","aSource","aName","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","result","next","nameIdx","sourceIdx","mappings","i","len","aSources","aSourceRoot","key","map","require_binary_search","__commonJSMin","exports","recursiveSearch","aLow","aHigh","aNeedle","aHaystack","aCompare","aBias","mid","cmp","index","require_quick_sort","__commonJSMin","exports","swap","ary","x","y","temp","randomIntInRange","low","high","doQuickSort","comparator","p","r","pivotIndex","pivot","j","q","require_source_map_consumer","__commonJSMin","exports","util","binarySearch","ArraySet","base64VLQ","quickSort","SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","IndexedSourceMapConsumer","BasicSourceMapConsumer","aStr","index","c","aSourceRoot","aCallback","aContext","aOrder","context","order","mappings","sourceRoot","mapping","source","aArgs","line","needle","originalLine","originalColumn","version","sources","names","sourcesContent","file","s","aSource","relativeSource","i","smc","generatedMappings","destGeneratedMappings","destOriginalMappings","length","srcMapping","destMapping","Mapping","generatedLine","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","temp","originalMappings","str","segment","end","value","aNeedle","aMappings","aLineName","aColumnName","aComparator","aBias","nextMapping","name","sc","nullOnMissing","url","fileUriAbsPath","sections","lastOffset","offset","offsetLine","offsetColumn","j","sectionIndex","section","cmp","content","generatedPosition","ret","sectionMappings","adjustedMapping","require_source_node","__commonJSMin","exports","SourceMapGenerator","util","REGEX_NEWLINE","NEWLINE_CODE","isSourceNode","SourceNode","aLine","aColumn","aSource","aChunks","aName","aGeneratedCode","aSourceMapConsumer","aRelativePath","node","remainingLines","remainingLinesIndex","shiftNextLine","lineContents","getNextLine","newLine","lastGeneratedLine","lastGeneratedColumn","lastMapping","mapping","addMappingWithCode","nextLine","code","sourceFile","content","source","aChunk","chunk","i","aFn","len","aSep","newChildren","aPattern","aReplacement","lastChild","aSourceFile","aSourceContent","sources","str","aArgs","generated","map","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","original","idx","length","sourceContent","require_source_map","__commonJSMin","exports","require_buffer_from","__commonJSMin","exports","module","toString","isModern","isArrayBuffer","input","fromArrayBuffer","obj","byteOffset","length","maxLength","fromString","string","encoding","bufferFrom","value","encodingOrOffset","require_source_map_support","__commonJSMin","exports","module","SourceMapConsumer","path","fs","bufferFrom","dynamicRequire","mod","request","errorFormatterInstalled","uncaughtShimInstalled","emptyCacheBetweenOperations","environment","fileContentsCache","sourceMapCache","reSourceMap","retrieveFileHandlers","retrieveMapHandlers","isInBrowser","hasGlobalProcessEventEmitter","globalProcessVersion","globalProcessStderr","globalProcessExit","code","handlerExec","list","arg","i","ret","retrieveFile","protocol","drive","contents","xhr","supportRelativeURL","file","url","dir","match","startPath","retrieveSourceMapURL","source","fileData","sourceMapHeader","re","lastMatch","retrieveSourceMap","sourceMappingURL","sourceMapData","rawData","mapSourcePosition","position","sourceMap","urlAndMap","originalPosition","mapEvalOrigin","origin","CallSiteToString","fileName","fileLocation","lineNumber","columnNumber","line","functionName","addSuffix","isConstructor","isMethodCall","typeName","methodName","cloneCallSite","frame","object","name","wrapCallSite","state","column","noHeader","headerLength","originalFunctionName","prepareStackTrace","error","stack","message","errorString","processedStack","getErrorSource","printErrorAndExit","stderr","shimEmitUncaughtException","origEmit","type","hasStack","hasListeners","originalRetrieveFileHandlers","originalRetrieveMapHandlers","options","Module","$compile","content","filename","installHandler","worker_threads","run","execa","chalk","chalk","fs","path","defaultLoggerConfig","validateLoggerConfig","config","sanitizeString","str","LogFormatter","entry","formattedMessage","formattedDetails","formattedStackTrace","sanitizedDetails","key","value","fs","MAX_ROTATION_RETRIES","ROTATION_RETRY_DELAY_MS","LogRotationService","config","message","details","newConfig","error","oldestLog","i","oldPath","newPath","errorMessage","resolve","LogLevel","FLUSH_INTERVAL_MS","MAX_QUEUE_SIZE","Logger","_Logger","validateLoggerConfig","defaultLoggerConfig","error","LogFormatter","LogRotationService","partialConfig","logDir","path","fs","entry","colorFn","chalk","entriesToFlush","formattedEntries","e","formattedEntry","level","message","details","timestamp","stackTrace","levelValue","configLevelValue","errorObject","errorMessage","logger","truncate","text","maxLength","ellipsis","deepMerge","target","source","output","isObject","key","item","ErrorCategory","ERROR_REPORT_TTL_MS","CLEANUP_INTERVAL_MS","ErrorReporter","_ErrorReporter","callback","sub","error","subscriber","err","logger","severity","message","errorOrOptions","errorObj","errorSeverity","errorCategory","errorContext","errorDetails","errorUserAction","options","report","currentLogLevel","errorMessage","currentLogMessage","currentLogDetails","errorToLog","now","newErrorOrder","errorId","errorReport","feedback","details","errorReporter","setupGlobalErrorHandlers","reason","promise","fs","path","os","crypto","DEFAULT_OPTIONS","path","os","CacheService","options","command","args","key","crypto","memEntry","cacheFile","fs","data","entry","error","logger","value","serialized","size","files","file","prefix","cacheKey","filePath","stats","a","b","removedSize","cacheService","fs","path","os","fileURLToPath","__filename","fileURLToPath","__dirname","path","defaultConfig","CONFIG_DIR","os","CONFIG_FILE","ensureConfigDir","fs","loadConfig","configData","deepMerge","saveConfig","error","config","currentConfig","newConfig","getConfig","key","setConfig","value","resetConfig","getCacheOptions","cacheConfig","getTheme","themeName","theme","initializeCache","cacheOptions","config","cacheService","CacheService","logger","initializeCache","execa","React","render","useState","Box","useApp","init_themes","createContext","useContext","useState","jsx","defaultState","getTheme","AppContext","AppProvider","children","state","setState","contextValue","themeName","prev","org","useAppContext","context","init_themes","createContext","useContext","useState","useEffect","useInput","jsx","defaultShortcuts","KeyboardContext","createContext","KeyboardProvider","children","actionHandlers","customShortcuts","config","mergedDefaultShortcuts","action","shortcut","shortcuts","setShortcuts","useState","contextShortcuts","setContextShortcuts","activeShortcuts","s","useEffect","updatedCustomShortcuts","updatedShortcuts","registerShortcut","id","prev","unregisterShortcut","newShortcuts","updateContextShortcuts","executeAction","handler","useInput","input","key","matchesKey","matchesModifiers","useKeyboardShortcuts","context","useContext","init_themes","createContext","useContext","useState","Box","Text","useInput","init_themes","React","InkBox","Text","useFocus","useInput","jsx","jsxs","borderMap","CustomBox","title","titleAlign","borderStyle","borderColor","padding","margin","width","height","flexDirection","flexGrow","flexShrink","flexBasis","alignItems","justifyContent","children","focusable","onFocus","onBlur","onClick","style","theme","useTheme","isFocused","input","key","tl","tr","bl","br","h","v","l","r","borderColorValue","contentWidth","maxLineLength","child","max","line","renderTitle","titleText","titleWidth","titlePosition","boxWidth","contentPadding","marginStyle","borderStyles","Fragment","jsx","jsxs","HelpContext","createContext","defaultTopics","Box","Text","HelpProvider","children","showHelp","setShowHelp","useState","currentTopic","setCurrentTopic","topics","setTopics","contextualHelp","setContextualHelp","toggleHelp","prev","registerTopic","topic","t","unregisterTopic","topicId","updateContextualHelp","topicIds","relevantTopics","useInput","input","key","contextValue","useHelp","context","useContext","ContextualHelp","theme","useTheme","allTopics","ct","CustomBox","index","relatedTopic","init_themes","createContext","useContext","useState","useEffect","Box","Text","uuidv4","useState","useEffect","useCallback","Text","useInput","Box","jsx","jsxs","TextInput","originalValue","onChange","placeholder","onSubmit","customFocus","mask","showCursor","validate","width","multiline","cursorOffset","setCursorOffset","validationError","setValidationError","focus","setFocus","temporaryValue","setTemporaryValue","validationResult","handleInput","input","key","newValue","newCursorOffset","words","currentPos","i","displayValue","cursorChar","beforeCursor","afterCursor","visibleBeforeCursor","visibleAfterCursor","maxVisible","remainingSpace","init_themes","Text","useFocus","useInput","Box","getButtonColorScheme","theme","variant","defaultColorScheme","createColorScheme","baseColor","getButtonStyles","colorScheme","isFocused","isDisabled","isLoading","customStyle","baseStyles","getButtonTextStyles","jsx","jsxs","Button","children","variant","disabled","fullWidth","loading","focusable","onPress","style","boxProps","theme","useTheme","isFocused","useFocus","useInput","input","key","colorScheme","getButtonColorScheme","buttonStyles","getButtonStyles","textStyles","getButtonTextStyles","Box","Text","Button_default","init_themes","useEffect","useState","Text","jsx","jsxs","init_themes","useMemo","Box","Text","useFocus","useInput","jsx","jsxs","init_themes","useEffect","useState","Box","Text","jsx","jsxs","init_themes","useEffect","useState","Box","Text","useInput","init_themes","Box","Text","Fragment","jsx","jsxs","Divider","label","variant","orientation","character","color","labelColor","style","labelStyle","lineStyle","theme","useTheme","dividerChar","dividerColor","textColor","availableWidth","labelLength","lineLength","leftLine","rightLine","content","Divider_default","jsx","jsxs","ErrorNotification","error","showDetails","dismissible","onDismiss","autoDismiss","markAsHandled","theme","useTheme","isVisible","setIsVisible","useState","showDetailsState","setShowDetailsState","getSeverityColor","severity","getSeverityName","useEffect","timer","handleDismiss","errorReporter","useInput","input","key","severityColor","Box","Text","Divider_default","value","line","i","truncate","ErrorNotification_default","Component","Box","Text","jsx","jsxs","ErrorBoundary","Component","props","error","errorInfo","id","componentName","context","errorReport","errorReporter","children","showError","fallback","hasError","errorId","Box","ErrorNotification_default","Text","ErrorBoundary_default","createContext","useContext","useState","useEffect","Box","jsx","jsxs","ErrorContext","createContext","useErrors","useContext","ErrorProvider","children","maxVisibleErrors","position","errors","setErrors","useState","useEffect","unsubscribe","errorReporter","error","prev","e","dismissError","errorId","clearErrors","visibleErrors","Box","ErrorNotification_default","ErrorProvider_default","init_themes","useMemo","Box","Text","jsx","jsxs","init_themes","useState","useEffect","Box","Text","jsx","jsxs","useState","useEffect","Box","Text","init_themes","jsx","jsxs","init_themes","useState","useEffect","Box","Text","execa","package_default","jsx","jsxs","StatusBar","width","theme","useTheme","status","setStatus","useState","package_default","useEffect","timer","prev","orgInfoJson","execa","defaultOrg","devhubInfoJson","devhubOrg","error","Box","Text","StatusBar_default","init_themes","Box","Text","useInput","Fragment","jsx","jsxs","HelpScreen","onClose","title","theme","useTheme","activeShortcuts","useKeyboardShortcuts","globalShortcuts","s","contextShortcuts","useInput","input","key","renderShortcut","shortcut","keyText","Box","Text","CustomBox","HelpScreen_default","init_themes","useEffect","Box","Text","useInput","jsx","jsxs","Modal","isOpen","title","children","width","height","showCloseButton","closeButtonLabel","showBackdrop","onClose","style","contentProps","theme","useTheme","useInput","input","key","useEffect","modalStyles","backdropStyles","headerStyles","contentStyles","footerStyles","Box","Text","Button_default","Modal_default","init_themes","useCallback","useMemo","Box","Text","jsx","jsxs","ConfirmDialog","isOpen","title","message","confirmLabel","cancelLabel","confirmVariant","cancelVariant","showCancel","closeOnBackdropClick","onConfirm","onCancel","style","theme","useTheme","handleConfirm","useCallback","handleCancel","handleBackdropClick","footer","useMemo","Box","Button_default","content","Text","Modal_default","ConfirmDialog_default","init_themes","useState","useRef","useEffect","Box","Text","Fragment","jsx","jsxs","init_themes","Text","jsx","init_themes","Box","Text","jsx","jsxs","init_themes","Box","Text","jsx","jsxs","init_themes","useState","useRef","useEffect","Box","Text","useState","useRef","useLayoutEffect","jsx","jsxs","init_themes","useCallback","Box","Text","jsx","jsxs","init_themes","useState","useEffect","Box","jsx","Transition","children","type","duration","visible","onComplete","isVisible","setIsVisible","isAnimating","setIsAnimating","animationPhase","setAnimationPhase","theme","useTheme","ANIMATION_STEPS","ANIMATION_INTERVAL","timer","prev","newPhase","getAnimationStyles","progress","opacity","transform","distance","styles","Transition_default","jsx","jsxs","NotificationContext","createContext","NotificationProvider","children","notifications","setNotifications","useState","visibleNotifications","setVisibleNotifications","showNotification","notification","id","uuidv4","newNotification","prev","timeout","dismissNotification","updateNotification","updates","n","notificationId","dismissAll","useNotifications","context","useContext","NotificationCenter","theme","useTheme","useEffect","prevVisible","currentIds","getNotificationColor","type","getNotificationIcon","renderNotification","title","message","progress","maxProgress","actions","color","icon","isVisible","showProgress","progressPercentage","Transition_default","Box","Text","action","index","useState","useEffect","Box","Text","init_themes","useState","useEffect","Box","Text","jsx","jsxs","TutorialOverlay","steps","isActive","onComplete","onSkip","initialStep","currentStepIndex","setCurrentStepIndex","useState","showStep","setShowStep","theme","useTheme","useEffect","currentStep","nextStep","prev","prevStep","handleSkip","progress","Transition_default","Box","CustomBox","Text","Button_default","TutorialOverlay_default","init_themes","jsx","jsxs","tutorialSteps","Box","Text","Tutorial","children","showTutorial","setShowTutorial","useState","initialStep","setInitialStep","theme","useTheme","useEffect","timer","handleComplete","handleSkip","jumpToStep","stepId","stepIndex","tutorialSteps","step","jsxs","Box","jsx","TutorialOverlay_default","Tutorial_default","useState","useEffect","useCallback","Box","Text","useInput","useApp","SelectInput","chalk","useState","useEffect","Box","Text","useInput","SelectInput","execa","Spinner","jsx","jsxs","OrgManager","onBack","errors","dismissError","useErrors","showNotification","updateNotification","dismissNotification","useNotifications","orgs","setOrgs","useState","isLoading","setIsLoading","error","setError","selectedOrg","setSelectedOrg","output","setOutput","isProcessing","setIsProcessing","confirmDelete","setConfirmDelete","activeNotifications","setActiveNotifications","useEffect","loadOrgs","notificationId","stdout","execa","result","orgList","errorReporter","err","errorMessage","handleOrgSelect","org","runCommand","command","args","notificationTitle","getCommandTitle","prev","process","outputText","data","newOutput","newState","openOrg","setDefaultOrg","setDefaultDevHub","refreshOrg","deleteOrg","useInput","input","key","Box","Text","Spinner","SelectInput","item","isSelected","label","useState","Box","Text","useInput","Newline","SelectInput","execa","Spinner","Fragment","jsx","jsxs","PROJECT_TYPES","ProjectGenerator","onBack","step","setStep","useState","projectType","setProjectType","projectName","setProjectName","directory","setDirectory","output","setOutput","isCreating","setIsCreating","createdProjectPath","setCreatedProjectPath","useInput","input","key","createProject","args","projectPath","process","execa","data","prev","error","renderProjectTypeStep","Box","Text","SelectInput","type","item","isSelected","label","description","renderProjectNameStep","TextInput","value","renderDirectoryStep","renderCreatingStep","Spinner","Newline","useState","useEffect","Box","Text","useInput","SelectInput","execa","Spinner","jsx","jsxs","AliasManager","onBack","aliases","setAliases","useState","isLoading","setIsLoading","error","setError","output","setOutput","selectedAlias","setSelectedAlias","view","setView","newAlias","setNewAlias","aliasValue","setAliasValue","useEffect","loadAliases","stdout","execa","result","aliasList","alias","value","err","runCommand","command","args","process","data","prev","handleAddAlias","handleDeleteAlias","useInput","input","key","renderList","Box","Text","Spinner","SelectInput","item","isSelected","label","renderAddForm","TextInput","renderAliasInfo","renderDeleteConfirmation","useState","Box","Text","useInput","Newline","SelectInput","execa","Spinner","open","Fragment","jsx","jsxs","AUTH_METHODS","AuthManager","onBack","step","setStep","useState","selectedMethod","setSelectedMethod","alias","setAlias","username","setUsername","output","setOutput","error","setError","isProcessing","setIsProcessing","authUrl","setAuthUrl","deviceCode","setDeviceCode","useInput","input","key","startAuthFlow","args","process","execa","data","prev","urlMatch","open","codeMatch","renderMethodStep","Box","Text","SelectInput","method","item","isSelected","label","renderInputStep","TextInput","renderAuthenticatingStep","Spinner","renderSuccessStep","Newline","renderErrorStep","useState","useEffect","Box","Text","useInput","SelectInput","execa","Spinner","Fragment","jsx","jsxs","METADATA_TOOLS","MetadataTools","onBack","errors","dismissError","useErrors","selectedTool","setSelectedTool","useState","isLoading","setIsLoading","output","setOutput","error","setError","targetOrg","setTargetOrg","sourceOrg","setSourceOrg","manifestFile","setManifestFile","metadata","setMetadata","directory","setDirectory","isProcessing","setIsProcessing","orgs","setOrgs","loadOrgs","stdout","execa","result","org","errorReporter","ErrorCategory","err","runCommand","command","args","process","data","prev","errorMessage","handleToolSelect","tool","executeTool","useEffect","loadedOrgs","useInput","input","key","renderToolList","Box","Text","SelectInput","item","isSelected","label","renderToolForm","Spinner","TextInput","renderOutput","useState","Box","Text","useInput","SelectInput","execa","Spinner","Fragment","jsx","jsxs","RUN_TOOLS","RunTools","onBack","selectedTool","setSelectedTool","useState","isLoading","setIsLoading","output","setOutput","error","setError","targetOrg","setTargetOrg","apexCode","setApexCode","flowName","setFlowName","soqlQuery","setSoqlQuery","testClasses","setTestClasses","isProcessing","setIsProcessing","runCommand","command","args","process","execa","data","prev","err","handleToolSelect","tool","executeTool","useInput","input","key","renderToolList","Box","Text","SelectInput","item","isSelected","label","renderApexTool","TextInput","renderFlowTool","renderTestTool","renderSoqlTool","renderDataTreeTool","renderToolForm","renderOutput","Spinner","useState","useEffect","Box","Text","useInput","SelectInput","execa","Spinner","Fragment","jsx","jsxs","PluginsPanel","onBack","plugins","setPlugins","useState","isLoading","setIsLoading","error","setError","output","setOutput","selectedPlugin","setSelectedPlugin","isProcessing","setIsProcessing","view","setView","searchQuery","setSearchQuery","installPluginName","setInstallPluginName","isCheckingForUpdates","setIsCheckingForUpdates","useEffect","loadPlugins","stdout","execa","result","err","checkForUpdates","process","data","prev","runCommand","command","args","installPlugin","pluginName","updatePlugin","uninstallPlugin","updateAllPlugins","handlePluginSelect","plugin","useInput","input","key","renderPluginList","filteredPlugins","Box","Text","TextInput","Spinner","SelectInput","item","isSelected","label","renderPluginDetails","renderInstallForm","renderUninstallConfirmation","renderOutput","useState","Box","Text","useInput","SelectInput","init_themes","useState","useEffect","Box","Text","useInput","SelectInput","jsx","jsxs","themeOptions","ThemeSwitcher","onBack","onThemeChange","state","setTheme","useAppContext","selectedTheme","setSelectedTheme","useState","previewTheme","setPreviewTheme","theme","useTheme","useInput","input","key","useEffect","Box","Text","SelectInput","item","isSelected","label","themeName","getTheme","ThemeProvider","CustomBox","ThemeSwitcher_default","init_themes","useState","useEffect","Box","Text","useInput","SelectInput","Fragment","jsx","jsxs","formatKeyDisplay","shortcut","parts","key","actionDescriptions","KeyboardShortcutsEditor","onBack","shortcuts","useKeyboardShortcuts","theme","useTheme","shortcutsList","setShortcutsList","useState","selectedShortcut","setSelectedShortcut","isEditing","setIsEditing","newKey","setNewKey","isCtrl","setIsCtrl","isAlt","setIsAlt","isShift","setIsShift","showConfirm","setShowConfirm","confirmMessage","setConfirmMessage","listeningForKey","setListeningForKey","useEffect","loadShortcuts","customShortcuts","config","combinedShortcuts","items","id","useInput","input","capturedKey","saveShortcut","startKeyCapture","resetToDefaults","conflictingShortcut","item","applyShortcutChange","updatedShortcut","updatedCustomShortcuts","updatedList","handleSelectShortcut","renderShortcutsList","Box","Text","SelectInput","isSelected","label","renderShortcutEditor","ConfirmDialog_default","Modal_default","KeyboardShortcutsEditor_default","init_themes","jsx","jsxs","menuItems","SettingsMenu","onBack","selectedItem","setSelectedItem","useState","currentTheme","setCurrentTheme","theme","useTheme","useInput","input","key","handleThemeChange","newTheme","ErrorBoundary_default","Box","ThemeProvider","getTheme","ThemeSwitcher_default","KeyboardShortcutsEditor_default","Text","SelectInput","item","isSelected","label","React","Box","Text","jsx","jsxs","Breadcrumb","items","item","index","Box","Text","useInput","jsx","jsxs","KeyboardShortcuts","shortcuts","visible","onClose","input","key","shortcut","index","Fragment","jsx","jsxs","menuItems","MENU_ITEM_NAMES","MainMenu","selectedItem","setSelectedItem","useState","showSplash","setShowSplash","animationFrame","setAnimationFrame","showContent","setShowContent","transitionComplete","setTransitionComplete","showShortcuts","setShowShortcuts","exit","useApp","setContextualHelp","useHelp","useEffect","timer","animation","prev","renderSplashScreen","spinner","Box","Text","chalk","renderHeader","package_default","renderContent","SelectInput","item","isSelected","label","OrgManager","ProjectGenerator","AuthManager","AliasManager","MetadataTools","RunTools","PluginsPanel","SettingsMenu","toggleShortcuts","useCallback","useInput","input","key","getBreadcrumbs","items","shortcuts","ErrorProvider_default","ErrorBoundary_default","Transition_default","Breadcrumb","KeyboardShortcuts","MainMenu_default","Fragment","jsx","jsxs","AppContent","state","setTheme","toggleStatusBar","toggleHelp","useAppContext","showHelp","setShowHelp","useState","exit","useApp","availableThemes","KeyboardProvider","nextIndex","ThemeProvider","HelpProvider","NotificationProvider","ErrorProvider_default","Box","Tutorial_default","HelpScreen_default","MainMenu_default","ContextualHelp","NotificationCenter","StatusBar_default","App","AppProvider","App_default","setupGlobalErrorHandlers","logger","run","waitUntilExit","render","React","App_default","error"]}